<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>资源白嫖网站</title>
      <link href="/2023/12/25/zi-yuan-bai-piao-wang-zhan/"/>
      <url>/2023/12/25/zi-yuan-bai-piao-wang-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h1><p> 点击网址链接🔗可以直接跳转到网站  </p><p>1 Zlibrary：<a href="https://zh.z-library.se/?ts=0403">https://zh.z-library.se/?ts=0403</a> </p><p>2 奇妙搜索：<a href="https://www.magicalsearch.cc/main">https://www.magicalsearch.cc/main</a> </p><p>3 Mvcat：<a href="https://www.mvcat.com/">https://www.mvcat.com/</a> </p><p>4 Clipdrop：<a href="https://clipdrop.co/uncrop">https://clipdrop.co/uncrop</a> </p><p>5 Runwayml：<a href="https://app.runwayml.com/video-tools/teams/moukejun/dashboard">https://app.runwayml.com/video-tools/teams/moukejun/dashboard</a> </p><p>6 Spaces：<a href="https://huggingface.co/spaces/zcxu-eric/magicanimate">https://huggingface.co/spaces/zcxu-eric/magicanimate</a> </p><p>7 AI乌托邦：<a href="https://www.ai-topia.com/#/home">https://www.ai-topia.com/#/home</a> </p><p>8 免费 ChatGPT: <a href="https://github.com/LiLittleCat/awesome-free-chatgpt">https://github.com/LiLittleCat/awesome-free-chatgpt</a></p><p>9 轻壁纸：<a href="https://qingbizhi.com/">https://qingbizhi.com/</a>  </p><p>10 分离音频网站： <a href="https://www.lalal.ai/zh-hans/">https://www.lalal.ai/zh-hans/</a> </p><p>11 漫画网站：<a href="https://mox.moe/">https://mox.moe/</a> </p><p>12 论文神器：<a href="https://panda321.com/">https://panda321.com/</a>  </p><p>13 学习网站：<a href="https://www.xue8nav.com/">https://www.xue8nav.com/</a> </p><p>14 虫部落：<a href="https://search.chongbuluo.com/">https://search.chongbuluo.com/</a> </p><hr><p>AlternativeTo：https://<a href="http://alternativeto.net/">alternativeto.net/</a></p><p>Crx搜搜：<a href="https://www.crxsoso.com/">https://www.crxsoso.com/</a></p><p>墨刀：<a href="https://modao.cc/brand">https://modao.cc/brand</a> </p><p>书签地球：<a href="https://www.bookmarkearth.com/">https://www.bookmarkearth.com/</a></p><p>DUCKBB：https://<a href="http://www.duckbb.cn/douyin">www.duckbb.cn/douyin</a></p><p>Web Design Museum：https://<a href="http://www.webdesignmuseum.org/">www.webdesignmuseum.org/</a></p><p>哔哩哔哩穿越：<a href="https://www.bilibili.com/blackboard/bilibili2009.html">https://www.bilibili.com/blackboard/bilibili2009.html</a></p><hr><p>奈斯搜索：<a href="https://www.niceso.fun/">https://www.niceso.fun</a></p><p>食用手册：<a href="https://cook.yunyoujun.cn/">https://cook.yunyoujun.cn</a></p><p>小鲸鱼搜书：<a href="http://www.9871.org/">http://www.9871.org/</a></p><p>iTab浏览器主页：<a href="https://go.itab.link/">https://go.itab.link</a> </p><p>地图搜租房：<a href="https://house-map.cn/#/">https://house-map.cn/#/</a></p><p>相似网站搜索：<a href="https://www.similarsites.com/">https://www.similarsites.com/</a></p><p>图文版网站使用指南：<a href="https://mp.weixin.qq.com/s/fFh_Hf_3lsLgekITeVXDYQ">https://mp.weixin.qq.com/s/fFh_Hf_3lsLgekITeVXDYQ</a></p><p>视频版网站使用指南：<a href="https://b23.tv/3VyRQNB">https://b23.tv/3VyRQNB</a></p><hr><p>百度识图：<a href="https://graph.baidu.com/pcpage/index?tpl_from=pc">https://graph.baidu.com/pcpage/index?tpl_from=pc</a></p><p>MAKE：<a href="https://www.make.mk/">https://www.make.mk/</a></p><p>Versus：<a href="https://versus.com/cn">https://versus.com/cn</a></p><p>鲜面连线：<a href="https://app.so/xianmian/">https://app.so/xianmian/</a></p><p>酷Q网音乐转换：<a href="https://mp3.aoleiao.com/">https://mp3.aoleiao.com/</a></p><p>超级简历：<a href="https://www.wondercv.com/">https://www.wondercv.com/</a></p><p>Wallhaven：<a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p><p>字由：<a href="https://www.hellofont.cn/home">https://www.hellofont.cn/home</a></p><p>Hi运动：<a href="https://www.hiyd.com/">https://www.hiyd.com/</a></p><p>REMOVEBG：<a href="https://www.remove.bg/zh">https://www.remove.bg/zh</a></p><p>只读：<a href="http://www.rdonly.com/">http://www.rdonly.com/</a></p><p>鲜面连线：<a href="https://app.so/xianmian/">https://app.so/xianmian/</a></p><p>Extfans：<a href="https://www.extfans.com/">https://www.extfans.com/</a></p><p>小众软件：<a href="https://www.appinn.com/">https://www.appinn.com/</a></p><p>知晓程序：<a href="https://minapp.com/miniapp/">https://minapp.com/miniapp/</a></p><hr><p> 【视频】简视频： </p><p> <a href="https://www.jspwz.com/">https://www.jspwz.com/</a> </p><p> 【书签】书签地球： </p><p> <a href="https://www.bookmarkearth.com/">https://www.bookmarkearth.com/</a> </p><p> 【网盘】懒盘搜索： </p><p> <a href="https://lzpan.com/#">https://lzpan.com/#</a> </p><p> 【学习】安逸导航： </p><p> <a href="https://298.life/">https://298.life/</a> </p><p> 【替补】北邮人导航： </p><p> <a href="https://byr-navi.com/">https://byr-navi.com/</a> </p><p> 【</p><p> 软件】新趣集： </p><p> <a href="https://xinquji.com/">https://xinquji.com/</a> </p><p> 【插件】Extfans： </p><p> <a href="https://www.extfans.com/hot/">https://www.extfans.com/hot/</a> </p><p> 【资讯】今日热榜：   </p><p> <a href="https://tophub.today/c/news">https://tophub.today/c/news</a> </p><p> 【磁力】小网虫： </p><p> <a href="http://www.wangchonghui.com/share/0/319/rc">http://www.wangchonghui.com/share/0/319/rc</a> </p><p> 【电影】33台词： </p><p> <a href="http://33.agilestudio.cn/">http://33.agilestudio.cn/</a> </p><p> 【设计】设计导航： </p><p> <a href="http://hao.shejidaren.com/index.html">http://hao.shejidaren.com/index.html</a> </p><p> 【动画】Mixamo： </p><p> <a href="https://www.mixamo.com/#/">https://www.mixamo.com/#/</a>    </p><p> 【壁纸】极简壁纸： </p><p> <a href="https://bz.zzzmh.cn/index">https://bz.zzzmh.cn/index</a> </p><p> 【图片】搜图导航： </p><p> <a href="https://www.91sotu.com/">https://www.91sotu.com/</a> </p><p> 【网盘】酷搜： </p><p> <a href="https://www.kolsou.com/">https://www.kolsou.com/</a> </p><p> 【资讯】MAKE： </p><p> <a href="https://make.mk/">https://make.mk/</a> </p><p> 【插件】极简插件： </p><p> <a href="https://chrome.zzzmh.cn/#index">https://chrome.zzzmh.cn/#index</a> </p><p> 【音效】淘声： </p><p> <a href="https://www.tosound.com/">https://www.tosound.com/</a> </p><p> 【电影】MVCAT： </p><p> <a href="https://www.mvcat.com/">https://www.mvcat.com/</a> </p><p> 【表情】逗比拯救世界： </p><p> <a href="https://www.dbbqb.com/">https://www.dbbqb.com/</a> </p><p> 【书籍】书享家： </p><p> <a href="http://shuxiangjia.cn/">http://shuxiangjia.cn/</a> </p><p> 【插图】illustrations： </p><p> <a href="https://undraw.co/illustrations">https://undraw.co/illustrations</a> </p><p> 【媒体】考拉新媒体： </p><p> <a href="https://www.kaolamedia.com/">https://www.kaolamedia.com/</a> </p><p> 【字体】求字体： </p><p> <a href="https://www.qiuziti.com/">https://www.qiuziti.com/</a> </p><p> 【壁纸】wallhaven： </p><p> <a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>条件判断和流程控制</title>
      <link href="/2023/12/24/tiao-jian-pan-duan-he-liu-cheng-kong-zhi/"/>
      <url>/2023/12/24/tiao-jian-pan-duan-he-liu-cheng-kong-zhi/</url>
      
        <content type="html"><![CDATA[<p>第二十章  条件测试语句和if流程控制语句的使用</p><p>本节所讲内容：</p><p>20.1  read命令键盘读取变量的值</p><p>20.2  流程控制语句if</p><p>20.3  test测试命令</p><p>20.4  流程控制过程中复杂条件和通配符</p><p>20.5  实战-3个shell脚本实战</p><h1 id="20-1-read命令键盘读取变量的值"><a href="#20-1-read命令键盘读取变量的值" class="headerlink" title="20.1  read命令键盘读取变量的值"></a>20.1  read命令键盘读取变量的值</h1><p>从键盘读取变量的值，通常用在shell脚本中与用户进行交互的场合。该命令可以一次读取多个变量的值，变量和输入的值都需要使用空格隔开。在read命令后面，如果没有指定变量名，读取的数据将被自动赋值给特定的变量REPLY</p><p>read从键盘读入数据，赋给变量</p><p>例1：</p><p>[root@xuegod63 ~]# read a b</p><p>hello world</p><p>[root@xuegod63 ~]# echo $a $b</p><p>hello world</p><h2 id="2-1-1-read常用见用法及参数"><a href="#2-1-1-read常用见用法及参数" class="headerlink" title="2.1.1  read常用见用法及参数"></a>2.1.1  read常用见用法及参数</h2><p>例1：从标准输入读取一行并赋值给变量passwd</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# read passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例2：读取多个值，从标准输入读取一行，直至遇到第一个空白符或换行符。把用户键入的第一个词存到变量first中，把该行的剩余部分保存到变量last中</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# read firt lastaaaa  bbbb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>例3：read -s passwd 将你输入的东西隐藏起来，值赋给passwd。这个用户隐藏密码信息</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# read -s passwd[root@xuegod63 ~]# echo $passwd123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例4：输入的时间限制</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# read -t 2 time  #超过两秒没有输入，直接退出<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例5：输入的长度限制</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# read -n 2 test #最多只接受2个字符<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例6：使用-r参数输，允许让输入中的内容包括：空格、/、\、 ？等特殊字符串。</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# read  -r linesdf sdf / sdfs /n[root@xuegod63 ~]# echo $linesdf sdf / sdfs /n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例7：-p 用于给出提示符，在前面的例子中我们使用了echo –n “…“来给出提示符</p><p>方法1：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# read -p  "please input: "  passplease input: 123456[root@xuegod63 ~]# echo $pass123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法2：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# echo -n "please input: " ; read passplease input: 123456   [root@xuegod63 ~]# echo $pass123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例8：read 综合实例</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# vim  test-read.sh #写入以下内容#!/bin/bashread -p "请输入姓名：" NAMEread -p "请输入年龄：" AGEread -p "请输入性别：" SEX cat&lt;&lt;eof*********************你的基本信息如下：姓名: $NAME年龄：$AGE性别：$SEX********************eof[root@xuegod63 ~]# sh test-read.sh请输入姓名：xuegod请输入年龄：111请输入性别：man*********************你的基本信息如下：姓名: xuegod年龄：111性别：man <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="20-2-流程控制语句if"><a href="#20-2-流程控制语句if" class="headerlink" title="20.2  流程控制语句if"></a>20.2  流程控制语句if</h1><h2 id="20-2-1-语法格式："><a href="#20-2-1-语法格式：" class="headerlink" title="20.2.1  语法格式："></a>20.2.1  语法格式：</h2><pre class="line-numbers language-none"><code class="language-none">if  条件  then       commandsfi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>if语句流程图：</p><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps1.png" alt="img"> </p><p>注：根据我们的命令退出码来进行判断(echo $? =0)，如果是0,那么就会执行then后面的命令</p><p>例1：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# vim  if-1.sh \#!/bin/bashif ls /mntthen​echo "it's ok"fi[root@xuegod63 ~]# bash !$bash if-1.shCentOS_BuildTag  GPL  LiveOS   RPM-GPG-KEY-CentOS-7EFI images   Packages  RPM-GPG-KEY-CentOS-Testing-7EULA isolinux  repodata  TRANS.TBLit's ok <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="20-2-2-双分支if语句"><a href="#20-2-2-双分支if语句" class="headerlink" title="20.2.2  双分支if语句"></a>20.2.2  双分支if语句</h2><p>语法格式：</p><pre class="line-numbers language-none"><code class="language-none">if command  ; thencommandselsecommandsfi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps2.jpg" alt="img"> </p><p>例2：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# cat if-2.sh#!/bin/bashif grep root /etc/passwd ; then    echo "it's ok"else    "it's err"fi  [root@xuegod63 ~]# sh if-2.sh root:x:0:0:root:/root:/bin/bashoperator:x:11:0:operator:/root:/sbin/nologinit's ok<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​</p><p>例3：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# cat if-3.sh#!/bin/bash if grep xuegod /etc/passwd ;thenecho "it's ok"elseecho "it's err"fi[root@xuegod63 ~]# sh if-3.shit's err <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="20-2-3-多分支if语句"><a href="#20-2-3-多分支if语句" class="headerlink" title="20.2.3  多分支if语句"></a>20.2.3  多分支if语句</h2><p>语法结构：</p><p>if条件测试操作1 ; then</p><p>​commands</p><p>elif  条件测试操作2  ; then</p><p>​commands</p><p>elif 条件测试操作3 ; then</p><p>​commands</p><p>…….</p><p>else</p><p>​commands</p><p>fi</p><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps3.jpg" alt="img"> </p><p>例4：判断用户在系统中是否存在，是否有家目录</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# cat if-4.sh#!/bin/bashread -p "input a user:" tuif grep $tu /etc/passwd ; then​    echo "the user $tu exists on this system"elif ls -d /home/$tu  ;  then​    echo "the user $tu not exists on this system"​    echo "$tu has a home directory"else​    echo "the user $tu not exists on this system"​    echo "$tu not has a direcotry"fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# sh if-4.sh Input a user: hrchrony:x:994:990::/var/lib/chrony:/sbin/nologinhr:x:1000:1000:hr:/home/hr:/bin/bashthe user hr exists on this system[root@xuegod63 ~]# sh if-4.shInput a user: xuegod/home/xuegodxuegod has a directory <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="20-3-test测试命令"><a href="#20-3-test测试命令" class="headerlink" title="20.3  test测试命令"></a>20.3  test测试命令</h1><p>Shell中的 test 命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试</p><p>格式：test 测试条件 </p><p>如果结果是对的，也叫结果为真，用$?=0表示，反之为假，用非0表示</p><h2 id="20-3-1-数值比较"><a href="#20-3-1-数值比较" class="headerlink" title="20.3.1  数值比较"></a>20.3.1  数值比较</h2><table><thead><tr><th>参数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>-eq</td><td>等于则为真</td><td>[ “$a” -eq “$b” ]</td></tr><tr><td>-ne</td><td>不等于则为真</td><td>[ “$a” -ne “$b” ]</td></tr><tr><td>-gt</td><td>大于则为真</td><td>[ “$a” -gt “$b” ]</td></tr><tr><td>-ge</td><td>大于等于则为真</td><td>[ “$a” -ge “$b” ]</td></tr><tr><td>-lt</td><td>小于则为真</td><td>[ “$a” -lt “$b” ]</td></tr><tr><td>-le</td><td>小于等于则为真</td><td>[ “$a” -le “$b” ]</td></tr></tbody></table><p>例1：比较大小</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# cat test1.sh #!/bin/bashif test 2 -eq 1  ; then​    echo okelse​    echo errfi if [ 2 -eq 2 ]  ; then​    echo okelse​    echo errfi <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例2： 比较整数大小</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# cat test2.sh #!/bin/bashread -p "input var1 var2:" var1 var2if [ $var1 -gt $var2  ] ;  then​    echo "$var1 &gt; $var2"elif [ $var1 -lt $var2 ] ; then​    echo "$var1 &lt; $var2"else​    echo "$var1 = $var2"fi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：在做数值比较时，只能用整数</p><h2 id="20-3-2-字符串比较"><a href="#20-3-2-字符串比较" class="headerlink" title="20.3.2  字符串比较"></a>20.3.2  字符串比较</h2><table><thead><tr><th>参数.</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>==</td><td>等于则为真</td><td>[ “$a” == “$b” ]</td></tr><tr><td>!=</td><td>不相等则为真</td><td>[ “$a” != “$b” ]</td></tr><tr><td>-z 字符串.</td><td>字符串的长度为零则为真</td><td>[ -z “$a” ]</td></tr><tr><td>-n 字符串</td><td>字符串的长度不为空则为真</td><td>[ -n “$a” ]</td></tr><tr><td>str1 &gt; str2</td><td>str1大于str2为真</td><td>[ str1 &gt; str2 ]</td></tr><tr><td>str1 &lt; str2</td><td>str1小于str2为真</td><td>[ str1 &lt; str2 ]</td></tr></tbody></table><p>例1：根据用户名判断是否是超级管理员</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# cat test3.sh#!/bin/bashread -p  "input your name: " nameif [ $name == "root" ] ; then​    echo "you are super administrator"else​    echo  "You are a general user"fi​<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# bash test3.sh input your name: rootyou are super administrator[root@xuegod63 ~]# bash test3.sh input your name: mkYou are a general usero "You are a general user"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例2：在做字符串大小比较的时候，注意字符串的顺序</p><p>l 大于号和小于号必须转义，要不然SHELL会把它当成重定向符号</p><p>l 大于和小于它们的顺序和sort排序是不一样的</p><p>l 在test比较测试中，它使用的是ASCII顺序，大写字母是小于小写字母的；sort刚好相反</p><p>扩展： ASCII（American Standard Code for Information Interchange，美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言。它是现今最通用的单字节编码系统，并等同于国际标准ISO/IEC 646。</p><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps4.png" alt="img"> </p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# cat test4.sh #!/bin/bashvar1=testvar2=Testif [  $var1 \&gt;  $var2  ] ; then​    echo "$var1 &gt; $var2"else​    echo "$var1 &lt; $var2"fi [root@xuegod63 ~]# bash test4.sh test &gt; Test <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="20-3-3-文件比较"><a href="#20-3-3-文件比较" class="headerlink" title="20.3.3  文件比较"></a>20.3.3  文件比较</h2><table><thead><tr><th>参数</th><th>.说明</th><th>示例</th></tr></thead><tbody><tr><td>-e 文件名.</td><td>如果文件或目录存在则为真</td><td>[ -e file ]</td></tr><tr><td>-r 文件名.</td><td>如果文件存在且可读则为真</td><td>[ -r file ]</td></tr><tr><td>-w 文件名.</td><td>如果文件存在且可写则为真</td><td>[ -w file ]</td></tr><tr><td>-x 文件名.</td><td>如果文件存在且可执行则为真</td><td>[ -x file ]</td></tr><tr><td>-s 文件名</td><td>如果文件存在且至少有一个字符则为真</td><td>[ -s file ]</td></tr><tr><td>-d 文件名.</td><td>如果文件存在且为目录则为真</td><td>[ -d file ]</td></tr><tr><td>-f 文件名.</td><td>如果文件存在且为普通文件则为真</td><td>[ -f file ]</td></tr><tr><td>-c 文件名.</td><td>如果文件存在且为字符型文件则为真</td><td>[ -c file ]</td></tr><tr><td>-b 文件名..</td><td>如果文件存在且为块特殊文件则为真</td><td>[ -b file ]</td></tr><tr><td>file1 -nt fle2</td><td>检查file1是否比file2新</td><td>[ file1 -nt file2 ]</td></tr><tr><td>file1 -ot file2</td><td>检查file1是否比file2旧</td><td>[ file1 -ot file2 ]</td></tr></tbody></table><p>例1：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# vim  test5.sh #!/bin/bashif [ -e /etc/passwd ] ; then​    echo okelse​    echo errfi [root@xuegod63 ~]# bash test5.sh ok<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例2：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# test -e /etc/aaa.txt &amp;&amp; echo ok || echo errerr[root@xuegod63 ~]# test -e /etc/passwd &amp;&amp; echo ok || echo errok[root@xuegod63 ~]# test -e /etc &amp;&amp; echo ok || echo errok <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例：清空日志目录</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# cat clear-log.sh #!/bin/bash# clear /var/log/messages #确定当前是root用户if [ $USER != "root" ];then​echo "你必须使用root用户才能执行脚本"​exit 10  #直接退出，并返回10fi #判断文件是否存在if [ ! -f /var/log/messages ];then​echo "文件不存在"​exit 12fi #保留最近100行的日志内容tail -100 /var/log/messages &gt; /var/log/mesg.tmp #日志清理&gt;/var/log/messages#cat /dev/null &gt; /var/log/messages mv /var/log/mesg.tmp /var/log/messagesecho "Logs clean up"注：退出码 exit ,取值范围是0-255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例： exit 退出bash，并返回一个值</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# ssh 192.168.1.63root@192.168.1.63's password: 123456Last login: Mon May 28 20:37:41 2018 from xuegod63.cn[root@xuegod63 ~]# [root@xuegod63 ~]# exit 10登出Connection to 192.168.1.63 closed.[root@xuegod63 ~]# echo $?10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="20-4-流程控制过程中复杂条件和通配符"><a href="#20-4-流程控制过程中复杂条件和通配符" class="headerlink" title="20.4  流程控制过程中复杂条件和通配符"></a>20.4  流程控制过程中复杂条件和通配符</h1><h2 id="20-4-1-判断第一种：两个条件都为真或有一个为真就执行"><a href="#20-4-1-判断第一种：两个条件都为真或有一个为真就执行" class="headerlink" title="20.4.1  判断第一种：两个条件都为真或有一个为真就执行"></a>20.4.1  判断第一种：两个条件都为真或有一个为真就执行</h2><p>if [ 条件判断一 ] &amp;&amp; (||) [ 条件判断二 ]; then   </p><p>  命令一</p><p>elif [ 条件判断三 ] &amp;&amp; (||) [ 条件判断四 ]; then</p><p>  命令二</p><p>else</p><p>  执行其它</p><p>fi</p><p>判断第二种</p><p>if [条件判断一 -a (-o) 条件判断二 -a (-o) 条件判断三]; then</p><p>elif [条件判断三  -a (-o) 条件判断四 ]; then</p><p>else</p><p>  执行其它</p><p>fi</p><p>判断第三种</p><p>if [[条件判断一 &amp;&amp; (||) 条件判断二 ]]; then</p><p>elif [[ 条件判断三 &amp;&amp; (||) 条件判断四 ]]; then</p><p>else</p><p>  执行其它</p><p>fi</p><p>例1：设置umask</p><p>参考： [root@xuegod63 ~]# vim /etc/profile </p><p><img src="/../assets/blog_res/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.assets/wps5.jpg" alt="img"> </p><p>[root@xuegod63 ~]# vim umask.sh </p><p>if [ $UID -gt 199 ] &amp;&amp; [ “<code>/usr/bin/id -gn</code>“ = “<code>/usr/bin/id -un</code>“ ]; then</p><p>  echo “umask 002”</p><p>else</p><p>  echo “i am root :umask 022”</p><p>fi</p><p>[root@xuegod63 ~]# bash umask.sh </p><p>i am root :umask 022</p><p>例2：[[ 。。。 ]]和[ 。。。]的区别</p><p>[[… ]] 运算符是[… ]运算符的扩充；[[… ]]能够支持 *，&lt; 、&gt;等符号且不需要转义符</p><p>例1：</p><p>[root@xuegod63 ~]# if [[ $USER == r* ]] ; then echo “hello,$USER” ; else echo $USER not ; fi</p><p>hello,root</p><p>注： $USER == r<em>对比时，  r</em> 表示以r开头的任意长度字符串，这样就包括root</p><p>当只有一个[] 方括号时：</p><p>[root@xuegod63 ~]# if [ $USER == r* ] ; then echo “hello,$USER” ; else echo $USER not ; fi</p><p>root not</p><p>#对比时r* ，就表示两个字符串 r*</p><p>也可以这样写：</p><p>[root@xuegod63 ~]# if [[ $USER == [a-z]oot ]] ; then echo “hello,$USER” ; else echo $USER not ; fi</p><p>[[ 。。。 ]]和[ 。。。]的区别汇总：</p><p>1、所有的字符与逻辑运算符直接用“空格”分开，不能连到一起。</p><p>2、在[… ]表达式中，常见的&gt; 、&lt;需要加转义符\，大小比较</p><p>3、进行逻辑运算符&amp;&amp; 、||比较时；如果用的[ ]符号，则用在外面，如[… ] &amp;&amp; [… ] || [ …]如果在[…]里面进行逻辑与或的比较，则用-a、-o进行表示，如[ x = y –a x &lt; z –o x &gt; m ]</p><p>4、[[… ]] 运算符只是[… ]运算符的扩充；能够支持&lt; 、&gt;符号运算不需要转义符；它还是以字符串比较大小。里面支持逻辑运算符 || 、 &amp;&amp; ， 不再使用-a 、-o</p><p>5、[[…]] 用 &amp;&amp; 而不是 -a 表示逻辑“与”；用 || 而不是 -o表示逻辑“或”</p><p>6、[[… ]]可以进行算术扩展，而[ … ]不可以</p><p>7、[[…]]能用正则，而[…]不行</p><p>8、双括号((  ))用于数学表达式</p><p>9、双方括号号[[  ]]用于高级字符串处理，比如“模糊匹配”</p><h2 id="20-4-2-shell中的通配符"><a href="#20-4-2-shell中的通配符" class="headerlink" title="20.4.2  shell中的通配符"></a>20.4.2  shell中的通配符</h2><p>shell常见通配符：</p><table><thead><tr><th>字符</th><th>含义</th><th>实例</th></tr></thead><tbody><tr><td>*</td><td>匹配 0 或多个字符</td><td>a*b a与b之间可以有任意长度的任意字符, 也可以一个也没有, 如aabcb, axyzb, a012b, ab。</td></tr><tr><td>?</td><td>匹配任意一个字符</td><td>a?b a与b之间必须也只能有一个字符, 可以是任意字符, 如aab, abb, acb, a0b。</td></tr><tr><td>[list]</td><td>匹配 list 中的任意单一字符</td><td>a[xyz]b  a与b之间必须也只能有一个字符, 但只能是 x 或 y 或 z, 如: axb, ayb, azb。</td></tr><tr><td>[!list]</td><td>匹配 除list 中的任意单一字符</td><td>a[!0-9]b a与b之间必须也只能有一个字符, 但不能是阿拉伯数字, 如axb, aab, a-b。</td></tr><tr><td>[c1-c2]</td><td>匹配 c1-c2 中的任意单一字符 如：[0-9] [a-z]</td><td>a[0-9]b 0与9之间必须也只能有一个字符 如a0b, a1b… a9b。</td></tr><tr><td>{string1,string2,…}</td><td>匹配 sring1 或 string2 (或更多)其一字符串</td><td>a{abc,xyz,123}b  a与b之间只能是abc或xyz或123这三个字符串之一。</td></tr></tbody></table><p>例：</p><p>[root@xuegod63 ~]#  ls /etc/*.conf</p><p>[root@xuegod63 ~]# ls /etc/???.conf</p><p>/etc/nfs.conf  /etc/sos.conf  /etc/yum.conf</p><p>[root@xuegod63 ~]# touch  /opt/a{1,2,3}.txt</p><p>[root@xuegod63 ~]# ls /opt/a[123].txt</p><p>/opt/a1.txt  /opt/a2.txt  /opt/a3.txt</p><p>[root@xuegod63 ~]# ls /opt/a[1,2,3].txt</p><p>[root@xuegod63 ~]# ls /opt/a[13].txt</p><p>/opt/a1.txt  /opt/a3.txt</p><h1 id="20-5-实战-3个shell脚本实战"><a href="#20-5-实战-3个shell脚本实战" class="headerlink" title="20.5  实战-3个shell脚本实战"></a>20.5  实战-3个shell脚本实战</h1><h2 id="20-5-1-实战1：编写脚本检查服务器运行状态"><a href="#20-5-1-实战1：编写脚本检查服务器运行状态" class="headerlink" title="20.5.1  实战1：编写脚本检查服务器运行状态"></a>20.5.1  实战1：编写脚本检查服务器运行状态</h2><p>[root@xuegod63 ~]# vim status.sh</p><p>#!/bin/bash</p><p>if [ $# -ge 1 ] ; then</p><p>​    systemctl status $1 &gt; /dev/null</p><p>  if [ $? -eq 0 ] ; then</p><p>​    echo “$1 服务正在运行”</p><p>  else</p><p>​    systemctl start $1</p><p>  fi</p><p>else</p><p>​     echo “执行脚本的格式”</p><p>​     echo “sh $0 服务名”</p><p>fi</p><h2 id="20-5-2-实战2-根据学生的成绩判断-学生的优劣"><a href="#20-5-2-实战2-根据学生的成绩判断-学生的优劣" class="headerlink" title="20.5.2  实战2:根据学生的成绩判断 学生的优劣"></a>20.5.2  实战2:根据学生的成绩判断 学生的优劣</h2><p>[root@xuegod63 ~]# vim  check_cj.sh </p><p>#!/bin/bash</p><p>read  -p  “请输入你的成绩  “  cj</p><p>if  [ $cj  -ge  0  ]   &amp;&amp;  [  $cj  -le  59  ]  ;then</p><p>   echo  “补考”</p><p>elif  [  $cj  -ge  60 ]   &amp;&amp;  [  $cj  -le  70  ]  ;then</p><p>  echo  “良好”</p><p>elif   [ $cj -ge 71 ]   &amp;&amp;  [ $cj  -le  85 ]  ;then</p><p>  echo  “好”</p><p>elif [ $cj  -ge 86 ]   &amp;&amp;  [  $cj  -le  100 ]  ;then</p><p>  echo  “优秀” </p><p>else</p><p>  echo “成绩的有效范围是0-100之间”</p><p>fi</p><h2 id="20-5-3-实战3：每周一晚上3-00-，备份数据库服务器上webdb库的所有数据到系统的-mysqlbak目录里，使用系统日期做备份文件名。"><a href="#20-5-3-实战3：每周一晚上3-00-，备份数据库服务器上webdb库的所有数据到系统的-mysqlbak目录里，使用系统日期做备份文件名。" class="headerlink" title="20.5.3  实战3：每周一晚上3:00 ，备份数据库服务器上webdb库的所有数据到系统的/mysqlbak目录里，使用系统日期做备份文件名。"></a>20.5.3  实战3：每周一晚上3:00 ，备份数据库服务器上webdb库的所有数据到系统的/mysqlbak目录里，使用系统日期做备份文件名。</h2><p>[root@xuegod63 ~]# vim  mysqlbak.sh</p><p>#!/bin/bash</p><p>baknamefile=<code>date +%Y-%m-%d</code></p><p>bakdir=/mysqlbak</p><p>user=root</p><p>password=123</p><p>dbname=webdb</p><p>[  -e  $bakdir  ]  ||   mkdir   $bakdir</p><p>mysqldump  -u$user  -p$password  –flush-logs  $dbname  &gt;   $bakdir/${baknamefile}-webdb.sql</p><p>因为mysql咱们还没有学，这里以/etc目录来做实验：</p><p>[root@xuegod63 ~]# vim etcbak.sh</p><p>#!/bin/bash</p><p>baknamefile=<code>date +%Y-%m-%d</code></p><p>bakdir=/etcbak</p><p>srcdir=/etc</p><p>[  -e  $bakdir  ]  ||   mkdir   $bakdir</p><p>tar zcvf ${bakdir}/${baknamefile}-etc.tar.gz /etc/</p><p>echo “========================”</p><p>ls -lh ${bakdir}/${baknamefile}-etc.tar.gz</p><p>echo “back etc is ok!”</p><p>[root@xuegod63 ~]# chmod +x  etcbak.sh</p><p>[root@xuegod63 ~]# crontab  -e</p><p>0 3 * * *  /root/etcbak.sh  2&gt;&amp;1 &gt; /dev/null</p><p>总结：</p><p>20.1  read命令键盘读取变量的值</p><p>20.2  流程控制语句if</p><p>20.3  test测试命令</p><p>20.4  流程控制过程中复杂条件和通配符</p><p>20.5  实战-3个shell脚本实战</p>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本的基础</title>
      <link href="/2023/12/24/shell-jiao-ben-de-ji-chu/"/>
      <url>/2023/12/24/shell-jiao-ben-de-ji-chu/</url>
      
        <content type="html"><![CDATA[<p>第十九章  shell脚本的基础</p><p>本节所讲内容：</p><p>19.1  shell 基本语法</p><p>19.2  SHELL变量及运用</p><p>19.3  数学运算</p><p>19.4  实战-升级系统中的java版本到1.8版本-为后期安装Hadoop集群做准备</p><h1 id="19-1-shell-基本语法"><a href="#19-1-shell-基本语法" class="headerlink" title="19.1  shell 基本语法"></a>19.1  shell 基本语法</h1><h2 id="19-1-1-什么是shell"><a href="#19-1-1-什么是shell" class="headerlink" title="19.1.1  什么是shell?"></a>19.1.1  什么是shell?</h2><p>Shell是一个命令解释器，它在操作系统的最外层，负责直接与用户进行对话，把用户的输入解释给操作系统，并处理各种各样的操作系统的输出结果，输出到屏幕反馈给用户。这种对话方式可是交互也可以是非交互式的</p><p><img src="/../assets/blog_res/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E7%A1%80.assets/image-20231224135308530.png" alt="image-20231224135308530"></p><p>​我们所输入的命令计算机是不识别的，这时就需要一种程序来帮助我们进行翻译，变成计算机能识别的二进制程序，同时又把计算机生成的结果返回给我们。</p><h2 id="19-1-2-编程语言分类"><a href="#19-1-2-编程语言分类" class="headerlink" title="19.1.2  编程语言分类"></a>19.1.2  编程语言分类</h2><p>编程语言主要用：低级语言和高级语言</p><p>1）低级语言：</p><p>机器语言：二进制语言</p><p>汇编语言：符号语言，使用助记符来代替操作码，也就是用符号代替机器语言的二进制码 </p><p>它们都是面向机器的语言</p><p>2）高级语言：</p><p>它是比较接近自然语言或者说人类语言的一种编程，用人们能够容易理解的方式进行编写程序，</p><p>静态语言：编译型语言 如：c 、 c++ 、 java，</p><p>动态语言：解释型语言 如： php 、 shell 、 python 、 perl</p><p>gcc编译器：（解释器）  将人类理解的语言翻译成机器理解的语言</p><h2 id="19-1-3-什么是SHELL脚本？"><a href="#19-1-3-什么是SHELL脚本？" class="headerlink" title="19.1.3  什么是SHELL脚本？"></a>19.1.3  什么是SHELL脚本？</h2><p>shell脚本：就是说我们把原来linux命令或语句放在一个文件中，然后通过这个程序文件去执行时，我们就说这个程序为shell脚本或shell程序；我们可以在脚本中输入一系统的命令以及相关的语法语句组合，比如变量，流程控制语句等，把他们有机结合起来就形成了一个功能强大的shell脚本</p><p>先手写一个脚本体验一下：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@xuegod63 ~]# vim test.sh  #写入以下内容#!/bin/bash# This is shell.echo "hello world"mkdir /tmp/testtouch /tmp/test/a.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <img src="/../assets/blog_res/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E7%A1%80.assets/image-20231224105341201.png" alt="image-20231224105341201"></p><p>注释：</p><p>1、!/bin/bash 作用：告诉脚本使用的是哪种命令解释器。如不指shell，以当前shell作为执行的shell。</p><p> 2、在shell中以#表示开头，整个行就被当作一个注释。执行时被忽略。</p><p>3、shell程序一般以.sh结尾</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@xuegod63 ~]# chmod +x test.sh [root@xuegod63 ~]# ./test.sh  #执行hello world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>创建shell程序的步骤：</strong></p><p>第一步：创建一个包含命令和控制结构的文件。</p><p>第二步：修改这个文件的权限使它可以执行。使用chmod +x test.sh</p><p>第三步：检测语法错误</p><p>第四步：执行 ./example</p><p><strong>shell脚本的执行通常有以下几种方式</strong></p><p>1、/root/test.sh  或者 ./test.sh (当前路径下执行脚本的话要有执行权限chmod +x test.sh) </p><p>2、bash test.sh 或 sh test.sh  （这种方式可以不对脚本文件添加执行权限）</p><p>3、source test.sh (可以没有执行权限)</p><p>4、sh &lt; test.sh 或者 cat test.sh |sh(bash)</p><h1 id="19-2-SHELL变量及运用"><a href="#19-2-SHELL变量及运用" class="headerlink" title="19.2  SHELL变量及运用"></a>19.2  SHELL变量及运用</h1><h2 id="19-2-1-shell变量"><a href="#19-2-1-shell变量" class="headerlink" title="19.2.1  shell变量"></a>19.2.1  shell变量</h2><p>变量是shell 传递数据的一种方法。变量是用来代表每个值的符号名。我们可以把变量当成一个容器，通过变量，可以在内存中存储数据。也可以在脚本执行中进行修改和访问存储的数据</p><p>变量的设置规则：</p><p>1、 变量名称通常是大写字母，它可以由数字、字母（大小写）和下划线_组成。变量名区分大小写；但是大家要注意变量名称不能<strong>以数字开头</strong></p><p>2、 等号 = 用于为变量分配值，在使用过程中等号两边不能有空格</p><p>3、 变量存储的数据类型是整数值和字符串值</p><p>4、 在对变量赋于字符串值时，建议大家用引号将其括起来。因为如果字符串中存在空格隔符号。需要使用单引号或双引号</p><p>5、 要对变量进行调用，可以在变量名称前加美元符号$</p><p>6、 如果需要增加变量的值，那么可以进行变量值的叠加。不过变量需要用双引号包含“$变量名”或用${变量名}包含</p><p>变量的分类</p><p>按照变量的作用可以分成4类：</p><p>​1、用户自定义变量 </p><p>​2、环境变量：这种变量中主要保存的是和系统操作环境相关的数据。 </p><p>​3、位置参数变量：这种变量主要是用来向脚本当中传递参数或数据的，变量名不能自定义，变量作用是固定的。 </p><p>​4、预定义变量：是Bash中已经定义好的变量，变量名不能自定义，变量作用也是固定的。 </p><p>按照变量作用域可以分成2类：全局变量和局部变量。</p><p>局部变量是shell 程序内部定义的，其使用范围仅限于定义它的程序，对其它程序不可见。包括：用户自定义变量、位置变量和预定义变量。</p><p>全局变量是环境变量，其值不随shell 脚本的执行结束而消失。</p><h2 id="19-2-2-用户定义变量"><a href="#19-2-2-用户定义变量" class="headerlink" title="19.2.2  用户定义变量"></a>19.2.2  用户定义变量</h2><p>变量名命名规则：由字母或下划线打头，不允许数字开头,后面由字母、数字或下划线组成，并且大小写字母意义不同。在使用变量时，在变量名前加$</p><p>例1：给变量VAR1赋值</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@xuegod63 ~]# VAR1=123[root@xuegod63 ~]# echo $VAR1123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>variable  [ˈ<strong>veəriəbl]</strong> 变量</p><p>例2：错误的赋值方式,不允许数字开头，等号两边不能有空格</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# VAR2 =456bash: VAR2: 未找到命令...[root@xuegod63 ~]# VAR2= 456bash: 456: 未找到命令...[root@xuegod63 ~]# VAR2 = 456bash: VAR2: 未找到命令...[root@xuegod63 ~]# 3VAR2 = 456bash: 3VAR2: 未找到命令...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例3：变量值的叠加，使用${}</p><p>$name是${name}的简化版本，但是在某些情况下，还必须使用花括号引起的方式来消除歧义并避免意外的结果</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# VAR4=mysql[root@xuegod63 ~]# echo $VAR4mysql[root@xuegod63 ~]# echo $VAR4-db.logmysql-db.log[root@xuegod63 ~]# echo $VAR4.db.logmysql.db.log[root@xuegod63 ~]# echo $VAR4db.log #发现输出的结果不是我们想要的，怎么办？.log[root@xuegod63 ~]# echo ${VAR4}db.logmysqldb.log <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="19-2-3-命令的替换-使用-或反引号"><a href="#19-2-3-命令的替换-使用-或反引号" class="headerlink" title="19.2.3  命令的替换,使用$()或反引号"></a>19.2.3  命令的替换,使用$()或反引号</h2><p>例1：在命令就调用date命令</p><p>扩展：date命令是显示或设置系统时间与日期。</p><p>-s&lt;字符串&gt;：根据字符串来设置日期与时间。字符串前后必须加上双引号；</p><p>&lt;+时间日期格式&gt;：指定显示时，使用特定的日期时间格式。</p><p>例：格式化输出：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# date +"%Y-%m-%d" #今天时间，一般备份数据需要用这个2018-05-25[root@xuegod63 ~]#  date +"%Y-%m"  #只显示年月2018-05[root@xuegod63 ~]#  date +"%Y-%m-%d %H:%M.%S"  #日期加时间2018-05-25 17:51.36[root@xuegod63 ~]#  date +"%Y/**%m/%d %H/%M/%S"** #使用/做分隔符2018-05-25 17-51-43[root@xuegod63 ~]#  date +"%Y-%m-%d-%H-%M-%S" #使用-做分隔符，一般备份数据需要用这个注： %y 年份只显示2位，  %Y年份显示4位<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>date命令加减操作：</p><p>date +%Y%m%d          #显示当天年月日</p><p>date -d “+1 day” +%Y%m%d    #显示明天的日期</p><p>date -d “-1 day” +%Y%m%d    #显示昨天的日期</p><p>date -d “-1 month” +%Y%m%d   #显示上一月的日期</p><p>date -d “+1 month” +%Y%m%d   #显示下一月的日期</p><p>date -d “-1 year” +%Y%m%d    #显示前一年的日期</p><p>date -d “+1 year” +%Y%m%d    #显示下一年的日期</p><p>设定时间：</p><p>date -s 20180523        #设置成20120523，这样会把具体时间设置成空00:00:00</p><p>date -s 01:01:01        #设置具体时间，不会对日期做更改</p><p>date -s “2018-05-23 01:01:01”  #这样可以设置全部时间</p><p>例1： 在命令中调用date命令输出值</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# echo date2018年 05月 25日 星期五 17:41:29 CST[root@xuegod63 ~]# echo $(date)2018年 05月 25日 星期五 17:41:42 CST[root@xuegod63 ~]# echo date +"%Y-%m-%d"2012-05-23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="19-2-4-命令的嵌套使用，使用"><a href="#19-2-4-命令的嵌套使用，使用" class="headerlink" title="19.2.4  命令的嵌套使用，使用$( $( ))"></a>19.2.4  命令的嵌套使用，使用$( $( ))</h2><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# find /root/ -name .txt[root@xuegod63 ~]# VAR6=$(tar zcvf root.tar.gz $(find /root/ -name .txt))tar: 从成员名中删除开头的“/”[root@xuegod63 ~]# echo $VAR6  #查看值， VAR6中存储着tar的标准输出/root/.cache/tracker/db-version.txt /root/.cache/tracker/db-locale.txt /root/.cache/tracker/parser-sha1.txt /root/.cache/tracker/locale-for-miner-user-guides.txt /root/.cache/tracker/locale-for-miner-apps.txt /root/.cache/tracker/last-crawl.txt……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实战：分享一个系统时间错误，引起tar报警告</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# date -s "2012-03-03 21:25:00"[root@xuegod63 ~]# tar zxvf root.tar.gz -C /opt/root/.cache/tracker/db-version.txttar: root/.cache/tracker/db-version.txt：时间戳 2017-09-19 13:05:18 是未来的 168094624.438537189 秒之后注： 如果弹出这个消息，是因为咱们的当前系统的时间不对。 比如：当前系统的时间晚于文件的mtime时间[root@xuegod63 ~]# ls /opt/root/.mozilla/firefox/wggimqlt.default/ -a #解压成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="19-2-5-shell中单引号和双引号区别"><a href="#19-2-5-shell中单引号和双引号区别" class="headerlink" title="19.2.5  shell中单引号和双引号区别"></a>19.2.5  shell中单引号和双引号区别</h2><p>‘’在单引号中所有的字符包括特殊字符（$,’’,`和\）都将解释成字符本身而成为普通字符。</p><p>“”在双引号中，除了$, ‘’, `和\以外所有的字符都解释成字符本身，拥有“调用变量的值”、“引用命令”和“转义符”的特殊含义</p><p>注：\转义符，跟在之后的特殊符号将失去特殊含义，变为普通字符。如**$将输出“$”符号，而不当做是变量引用</p><p>例：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# echo $VAR1123[root@xuegod63 ~]# echo $VAR1$VAR1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例1：给变量值赋于多个单词，需要使用单引号和双引号</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# VAR8='xuegdo mk'[root@xuegod63 ~]# echo $VAR8xuegdo mk<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例2：赋值时单引号和双引号的区别</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# VAR8='xuegod mk $VAR1'[root@xuegod63 ~]# VAR9="xuegod mk $VAR1"  #双引中$符号有作用[root@xuegod63 ~]# echo $VAR8xuegod mk $VAR1[root@xuegod63 ~]# echo $VAR9xuegod mk 123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：单引号之间的内容原封不动赋值给变量，双引号之间的内容如有特殊符号会保留它的特殊含义</p><p>删除变量</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# unset VAR1[root@xuegod63 ~]# echo $VAR1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="19-2-6-环境变量"><a href="#19-2-6-环境变量" class="headerlink" title="19.2.6  环境变量"></a>19.2.6  环境变量</h2><p>在bash shell中，环境变量分为两类：全局变量和局部变量</p><p>全局变量：对于shell会话和所有的子shell都是可见的</p><p>局部变量： 它只在自己的进程当中使用</p><p>例1：局部变量</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# VAR1=123[root@xuegod63 ~]# echo $VAR1123[root@xuegod63 ~]# vim a.sh#!/bin/bashecho $VAR1[root@xuegod63 ~]# echo $VAR1123[root@xuegod63 ~]# bash a.sh  #执行a.sh 时，会使用另一个bash去执行，就访问不到$VAR1**的值**<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例2：env命令查看所全局变量</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# env [root@xuegod63 ~]# env | grep PATHPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例3：使用export把这个局部变量输出为全局变量</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# export  VAR1=xuegod[root@xuegod63 ~]#  echo $VAR1xuegod[root@xuegod63 ~]# vim a.sh  #写入以下内容#!/bin/bashecho $VAR1[root@xuegod63 ~]# bash a.sh  #引用全局**变量成功**xuegod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>互动： 虽然我们设置了export全局变量，但是新开的xshell连接中，还是读不到变量VAR1，怎么办？</p><p> <img src="/../assets/blog_res/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E7%A1%80.assets/image-20231224105420952.png" alt="image-20231224105420952"></p><p>例3：让变量永久生效，可以把定义好的变量写入配置文件</p><p>当登录系统或新开启一个ssh连接启动bash进程时，一定会加载这4个配置文件：</p><p>[root@xuegod63 ~]# vim /etc/profile   #系统全局环境和登录系统的一些配置</p><p>[root@xuegod63 ~]# vim /etc/bashrc   #shell全局自义配置文件，用于自定义shell</p><p>[root@xuegod63 ~]# vim /root/.bashrc  #用于单独自定义某个用户的bash</p><p>[root@xuegod63 ~]# vim /root/.bash_profile #用户单独自定义某个用户的系统环境</p><p>互动：如何知道新建一个ssh连接，加载这4个配置文件先后顺序？ </p><p>有思路：1，没有思路：2</p><p>要会思考，思路很重要！</p><p>答：可以每个文件的最后，追加一个echo命令，输出一下文件的名字</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# echo 'echo  /etc/profile ' &gt;&gt; /etc/profile[root@xuegod63 ~]# echo 'echo  /etc/bashrc' &gt;&gt; /etc/bashrc[root@xuegod63 ~]# echo 'echo /root/.bashrc ' &gt;&gt; /root/.bashrc[root@xuegod63 ~]# echo 'echo  /root/.bash_profile ' &gt;&gt; /root/.bash_profile[root@xuegod63 ~]# ssh root@192.168.1.63  #弹出以下信息，就知道有优先级了/etc/profile/etc/bashrc/root/.bashrc/root/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>互动：知道加载的顺序有什么用？</p><p>可以在这里添加木马程序，只要管理登录系统，就触发木马程序！  现在大家知道学习操作系统原理的作用了吧。</p><p>[root@xuegod63 ~]# echo ‘touch /tmp/profile.txt ‘ &gt;&gt; /etc/profile </p><p>[root@xuegod63 ~]# echo ‘touch /tmp/bash_profile.txt ‘ &gt;&gt; /root/.bash_profile</p><p>下面开始插入永久变量：</p><p>[root@xuegod63 ~]# vim /etc/profile  #在文件的最后插入</p><p>export VAR9=xuegod   #=等号两边不能有空格</p><p>[root@xuegod63 ~]# source  /etc/profile  #重新加载profile文件</p><p>新打开的链接中，也有了</p><p> <img src="/../assets/blog_res/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E5%9F%BA%E7%A1%80.assets/image-20231224105605515.png" alt="image-20231224105605515"></p><h2 id="19-2-7-设置PATH环境变量"><a href="#19-2-7-设置PATH环境变量" class="headerlink" title="19.2.7  设置PATH环境变量"></a>19.2.7  设置PATH环境变量</h2><p>SHELL要执行某一个程序，它要在系统中去搜索这个程序的路径，path变量是用来定义命令和查找命令的目录，当我们安装了第三方程序后，可以把第三方程序bin目录添加到这个path路径内，就可以在全局调用这个第三方程序的</p><p>例1： </p><p>[root@xuegod63 ~]# vim /opt/backup          </p><p>#!/bin/bash</p><p>echo “Backup data is OK!”</p><p>[root@xuegod63 ~]# chmod +x /opt/backup  </p><p>[root@xuegod63 ~]# /opt/backup</p><p>[root@xuegod63 ~]# backup</p><p>bash: backup: 未找到命令…</p><p>将backup命令添加PATH中</p><p>[root@xuegod63 ~]# PATH=/opt/:$PATH</p><p>[root@xuegod63 ~]# backup  #发现命令可以直接执行了，不用写全路径了</p><p>[root@xuegod63 ~]# vim /etc/profile # 在文件最后追加以下内容，永久生效</p><p>export PATH=/opt/:$PATH</p><p>[root@xuegod63 ~]# source  /etc/profile  #重新加载配置文件，使用配置生效</p><h2 id="19-2-8-shell位置变量"><a href="#19-2-8-shell位置变量" class="headerlink" title="19.2.8  shell位置变量"></a>19.2.8  shell位置变量</h2><p>Shell解释执行用户的命令时，将命令行的第一个字符作为命令名，而其它字符作为参数。  </p><p>$0  获取当前执行shell脚本的文件文件名，包括脚本路径,命令本身</p><p>$n  获取当前脚本的第n个参数 n=1,2…..n 当n大于9时 用${10}表示。</p><p>例子：</p><p>[root@xuegod63 ~]# vim print.sh </p><p>#!/bin/bash</p><p>echo “本shell脚本的文件名： $0”</p><p>echo “第1个参数：  $1”</p><p>echo “第2个参数：  $2”</p><p>echo “第3个参数：  $3”</p><p>echo “第4个参数：  $4”</p><p>[root@xuegod63 ~]# chmod +x print.sh</p><p>[root@xuegod63 ~]# ./print.sh 111  222 a.txt  444</p><p>本shell脚本的文件名： ./print.sh</p><p>第1个参数：  111</p><p>第2个参数：  222</p><p>第3个参数：  a.txt</p><p>第4个参数：  444</p><p>使用场景：服务器启动传参数</p><p>[root@xuegod63 ~]# /etc/init.d/network restart</p><h2 id="19-2-9-特殊变量"><a href="#19-2-9-特殊变量" class="headerlink" title="19.2.9  特殊变量"></a>19.2.9  特殊变量</h2><p>有些变量是一开始执行Script脚本时就会设定，且不能被修改，但我们不叫它只读的系统变量，而叫它特殊变量。这些变量当一执行程序时就有了，以下是一些特殊变量：</p><table><thead><tr><th>$*</th><th>以一个单字符串显示所有向脚本传递的参数；如”$*”用【”】括起来的情况、以”$1 $2 … $n”的形式输出所有参数</th></tr></thead><tbody><tr><td>$#</td><td>传递到脚本的参数个数</td></tr><tr><td>$$</td><td>当前进程的进程号PID</td></tr><tr><td>$?</td><td>显示最后命令的退出状态；0表示没有错误，其他任何值表明有错误</td></tr><tr><td>$!</td><td>后台运行的最后一个进程的进程号pid</td></tr></tbody></table><p>例子：</p><p>[root@xuegod63 ~]# vim special_variable.sh #写入以一下内容</p><p>#!/bin/bash</p><p>echo “$* 表示这个程序的所有参数 “</p><p>echo “$#  表示这个程序的参数个数”</p><p>echo “$$  表示程序的进程ID “</p><p>touch /tmp/b.txt &amp;</p><p>echo “$!  执行上一个后台指令的PID”</p><p>echo “$$  表示程序的进程ID “</p><p>echo “$? 表示上一个程序执行返回结果 “</p><p>[root@xuegod63 ~]# bash special_variable.sh  11 22 33 44 55</p><p>11 22 33 44 55 表示这个程序的所有参数 </p><p>11 22 33 44 55 表示这个程序的所有参数 </p><p>5  表示这个程序的参数个数</p><p>45502  表程序的进程ID </p><p>45504  执行上一个后台指令的PID</p><p>45502  表程序的进程ID</p><p>0 表示上一个程序执行返回结果</p><p>例2：常用的环境变量</p><p>[root@xuegod63 opt]# cd /opt/</p><p>[root@xuegod63 opt]# vim env.sh</p><p>#!/bin/bash</p><p>echo $HOME</p><p>echo $PATH</p><p>echo $PWD</p><p>[root@xuegod63 opt]# bash env.sh </p><p>/root</p><p>/opt/:/opt/:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/root/bin</p><p>/opt</p><h1 id="19-3-数学运算"><a href="#19-3-数学运算" class="headerlink" title="19.3  数学运算"></a>19.3  数学运算</h1><h2 id="19-3-1-expr命令"><a href="#19-3-1-expr命令" class="headerlink" title="19.3.1  expr命令"></a>19.3.1  expr命令</h2><p>(1)对数字的基本计算，做比较时，输出结果假为0，1为真；特殊符号用转义符</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# expr 2 \&gt; 50[root@xuegod63 ~]# expr 6 \&gt; 51*[root@xuegod63 ~]# expr 3 * 5*expr: 语法错误*[root@xuegod63 ~]# expr 3 \* 515[root@xuegod63 ~]# expr 3 \+ 58 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(2)对字符串的处理</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 ~]# expr length "ni hao"6[root@xuegod63 ~]# expr substr "ni hao" 2 4 #从第2个开始，截取4个字符出来i ha <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="19-3-2-使用"><a href="#19-3-2-使用" class="headerlink" title="19.3.2  使用$(( ))"></a>19.3.2  使用$(( ))</h2><p>格式：$（（表达式1，表达2））</p><p>特点：</p><p>​1、在双括号结构中，所有表达式可以像c语言一样，如：a++,b–等。a++  等价于 a=a+1 </p><p>​2、在双括号结构中，所有变量可以不加入：“$”符号前缀。</p><p>​3、双括号可以进行逻辑运算，四则运算</p><p>​4、双括号结构 扩展了for，while,if条件测试运算</p><p>​5、支持多个表达式运算，各个表达式之间用“，”分开</p><p>常用的算数运算符</p><table><thead><tr><th>运算符</th><th>意义</th></tr></thead><tbody><tr><td>++  –</td><td>递增及递减，可前置也可以后置</td></tr><tr><td>+  -  ! ~</td><td>一元运算的正负号 逻辑与取反</td></tr><tr><td><em>+  -  *  /  %</em></td><td>加减乘除与余数</td></tr><tr><td>&lt;  &lt;=  &gt;  &gt;=</td><td>比较大小符号</td></tr><tr><td>==  !=</td><td>相等 不相等</td></tr><tr><td>&gt;&gt;  &lt;&lt;</td><td>向左位移 向右位移</td></tr><tr><td>&amp; ^  |</td><td>位的与 位的异或 位的或</td></tr><tr><td>&amp;&amp;  ||</td><td>逻辑与 逻辑或</td></tr><tr><td>？ :</td><td>条件判断</td></tr></tbody></table><p>例1：</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 opt]# b=$((1+2))[root@xuegod63 opt]# echo $b3[root@xuegod63 opt]# echo $((2*3))6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例2：递增和递减</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 opt]# echo $((b++))4[root@xuegod63 opt]# echo $((++b))6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明： a++或a–为先赋值再+1或减1 ；</p><p> ++a或–a为先加1或减1，然后再进行赋值</p><p>例3：求1到100的和</p><pre class="line-numbers language-none"><code class="language-none">[root@xuegod63 opt]# echo $((100*(1+100)/2))5050<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="19-4-实战-升级系统中的java版本到1-8版本-为后期安装Hadoop集群做准备"><a href="#19-4-实战-升级系统中的java版本到1-8版本-为后期安装Hadoop集群做准备" class="headerlink" title="19.4  实战-升级系统中的java版本到1.8版本-为后期安装Hadoop集群做准备"></a>19.4  实战-升级系统中的java版本到1.8版本-为后期安装Hadoop集群做准备</h1><h2 id="19-4-1-安装jdk-java运行环境"><a href="#19-4-1-安装jdk-java运行环境" class="headerlink" title="19.4.1  安装jdk java运行环境"></a>19.4.1  安装jdk java运行环境</h2><p>上传jdk-8u161-linux-x64.rpm软件包到xuegod63</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">[root@xuegod63 ~]# rpm -ivh jdk-8u161-linux-x64.rpm[root@xuegod63 ~]#rpm -pql /root/jdk-8u161-linux-x64.rpm  #通过查看jdk的信息可以知道jdk的安装目录在/usr/java  [root@xuegod63 ~]#vim /etc/profile  #在文件的最后添加以下内容：export JAVA_HOME=/usr/java/jdk1.8.0_161export JAVA_BIN=/usr/java/jdk1.8.0_161/binexport PATH=${JAVA_HOME}/bin:$PATHexport CLASSPATH=.:${JAVA_HOME}/lib/dt.jar:${JAVA_HOME}/lib/tools.jar [root@xuegod63 ~]#source /etc/profile #使配置文件生效 验证java运行环境是否安装成功：[root@xuegod63 ~]#  java -versionjava version "1.8.0_161"Java(TM) SE Runtime Environment (build 1.8.0_161-b12)Java HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)如果出现安装的对应版本，说明java运行环境已经安装成功。注：这里只是升级了jdk的版本，因为在我安装的系统中已经安装了jdk。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：</p><p>19.1  shell 基本语法</p><p>19.2  SHELL变量及运用</p><p>19.3  数学运算</p><p>19.4  实战-升级系统中的java版本到1.8版本-为后期安装Hadoop集群做准备</p>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SHELL编程前奏_小工具</title>
      <link href="/2023/12/23/shell-bian-cheng-qian-zou-xiao-gong-ju/"/>
      <url>/2023/12/23/shell-bian-cheng-qian-zou-xiao-gong-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="本节课程目标"><a href="#本节课程目标" class="headerlink" title="本节课程目标"></a>本节课程目标</h1><ul><li>了解shell中的通配符</li><li>熟悉grep、cut、sort等小工具和shell中的通配符的使用</li></ul><h1 id="一、文本处理工具"><a href="#一、文本处理工具" class="headerlink" title="一、文本处理工具"></a>一、文本处理工具</h1><h2 id="1-grep工具"><a href="#1-grep工具" class="headerlink" title="1.grep工具"></a>1.grep工具</h2><blockquote><p>grep是**==行==**过滤工具；用于根据关键字进行行过滤</p></blockquote><h3 id="语法和选项"><a href="#语法和选项" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep [选项] '关键字' 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>常见选项：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">OPTIONS:    -i: 不区分大小写    -v: 查找不包含指定内容的行,反向选择    -w: 按单词搜索    -o: 打印匹配关键字    -c: 统计匹配到的行数    -n: 显示行号    -r: 逐层遍历目录查找    -A: 显示匹配行及后面多少行    -B: 显示匹配行及前面多少行    -C: 显示匹配行前后多少行    -l：只列出匹配的文件名    -L：列出不匹配的文件名    -e: 使用正则匹配    -E:使用扩展正则匹配    ^key:以关键字开头    key$:以关键字结尾    ^$:匹配空行    --color=auto ：可以将找到的关键词部分加上颜色的显示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>颜色显示（别名设置）：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">临时设置：# alias grep='grep --color=auto'//只针对当前终端和当前用户生效永久设置：1）全局（针对所有用户生效）vim /etc/bashrcalias grep='grep --color=auto'source /etc/bashrc2）局部（针对具体的某个用户）vim ~/.bashrcalias grep='grep --color=auto'source ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>举例说明：</strong></p><p>==说明：不要直接使用/etc/passwd文件，将其拷贝到/tmp下做实验！==</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep -i root passwd忽略大小写匹配包含root的行# grep -w ftp passwd 精确匹配ftp单词# grep -w hello passwd 精确匹配hello单词;自己添加包含hello的行到文件# grep -wo ftp passwd 打印匹配到的关键字ftp# grep -n root passwd 打印匹配到root关键字的行好# grep -ni root passwd 忽略大小写匹配统计包含关键字root的行# grep -nic root passwd忽略大小写匹配统计包含关键字root的行数# grep -i ^root passwd 忽略大小写匹配以root开头的行# grep bash$ passwd 匹配以bash结尾的行# grep -n ^$ passwd 匹配空行并打印行号# grep ^# /etc/vsftpd/vsftpd.conf匹配以#号开头的行# grep -v ^# /etc/vsftpd/vsftpd.conf匹配不以#号开头的行# grep -A 5 mail passwd  匹配包含mail关键字及其后5行# grep -B 5 mail passwd  匹配包含mail关键字及其前5行# grep -C 5 mail passwd 匹配包含mail关键字及其前后5行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-cut工具"><a href="#2-cut工具" class="headerlink" title="2. cut工具"></a>2. cut工具</h2><blockquote><p>cut是==列==截取工具，用于列的截取</p></blockquote><h3 id="语法和选项-1"><a href="#语法和选项-1" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cut 选项  文件名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>常见选项：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">-c:以字符为单位进行分割,截取-d:自定义分隔符，默认为制表符\t-f:与-d一起使用，指定截取哪个区域<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>举例说明:</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cut -d: -f1 1.txt 以:冒号分割，截取第1列内容# cut -d: -f1,6,7 1.txt 以:冒号分割，截取第1,6,7列内容# cut -c4 1.txt 截取文件中每行第4个字符# cut -c1-4 1.txt 截取文件中每行的1-4个字符# cut -c4-10 1.txt 截取文件中每行的4-10个字符# cut -c5- 1.txt 从第5个字符开始截取后面所有字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>课堂练习：</strong><br>用小工具列出你当系统的运行级别。5/3</p><ol><li>如何查看系统运行级别<ul><li>命令<code>runlevel</code></li><li>文件<code>/etc/inittab</code></li></ul></li><li>如何过滤运行级别</li></ol><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">runlevel |cut -c3runlevel | cut -d ' ' -f2grep -v '^#' /etc/inittab | cut -d: -f2grep '^id' /etc/inittab |cut -d: -f2grep "initdefault:$" /etc/inittab | cut -c4grep -v ^# /etc/inittab |cut -c4grep 'id:' /etc/inittab |cut -d: -f2cut -d':' -f2 /etc/inittab |grep -v ^#cut -c4 /etc/inittab |tail -1cut -d: -f2 /etc/inittab |tail -1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-sort工具"><a href="#3-sort工具" class="headerlink" title="3. sort工具"></a>3. sort工具</h2><blockquote><p>sort工具用于排序;它将文件的每一行作为一个单位，从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</p></blockquote><h4 id="语法和选项-2"><a href="#语法和选项-2" class="headerlink" title="语法和选项"></a>语法和选项</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">-u ：去除重复行-r ：降序排列，默认是升序-o : 将排序结果输出到文件中,类似重定向符号&gt;-n ：以数字排序，默认是按字符排序-t ：分隔符-k ：第N列-b ：忽略前导空格。-R ：随机排序，每次运行的结果均不同<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>举例说明</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># sort -n -t: -k3 1.txt 按照用户的uid进行升序排列# sort -nr -t: -k3 1.txt 按照用户的uid进行降序排列# sort -n 2.txt 按照数字排序# sort -nu 2.txt 按照数字排序并且去重# sort -nr 2.txt # sort -nru 2.txt # sort -nru 2.txt # sort -n 2.txt -o 3.txt 按照数字排序并将结果重定向到文件# sort -R 2.txt # sort -u 2.txt <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-uniq工具"><a href="#4-uniq工具" class="headerlink" title="4.uniq工具"></a>4.uniq工具</h2><blockquote><p>uniq用于去除**==连续==<strong>的</strong>==重复==**行</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">常见选项：-i: 忽略大小写-c: 统计重复行次数-d:只显示重复行举例说明：# uniq 2.txt # uniq -d 2.txt # uniq -dc 2.txt <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-tee工具"><a href="#5-tee工具" class="headerlink" title="5.tee工具"></a>5.tee工具</h2><blockquote><p>tee工具是从标准输入读取并写入到标准输出和文件，即：双向覆盖重定向（屏幕输出|文本输入）</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">选项：-a 双向追加重定向# echo hello world# echo hello world|tee file1# cat file1 # echo 999|tee -a file1# cat file1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-diff工具"><a href="#6-diff工具" class="headerlink" title="6.diff工具"></a>6.diff工具</h2><blockquote><p>diff工具用于逐行比较文件的不同</p></blockquote><p>注意：diff描述两个文件不同的方式是告诉我们==怎样改变第一个==文件之后==与第二个文件匹配==。</p><h3 id="语法和选项-3"><a href="#语法和选项-3" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">diff [选项] 文件1 文件2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>常用选项：</strong></p><table><thead><tr><th>选项</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>-b</td><td>不检查空格</td><td></td></tr><tr><td>-B</td><td>不检查空白行</td><td></td></tr><tr><td>-i</td><td>不检查大小写</td><td></td></tr><tr><td>-w</td><td>忽略所有的空格</td><td></td></tr><tr><td>–normal</td><td>正常格式显示(默认)</td><td></td></tr><tr><td>-c</td><td>上下文格式显示</td><td></td></tr><tr><td>-u</td><td>合并格式显示</td><td></td></tr></tbody></table><p><strong>举例说明：</strong></p><ul><li>比较两个==普通文件==异同，文件准备：</li></ul><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@MissHou ~]# cat file1aaaa111hello world222333bbb[root@MissHou ~]#[root@MissHou ~]# cat file2aaahello111222bbb333world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1）正常显示</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">diff目的：file1如何改变才能和file2匹配[root@MissHou ~]# diff file1 file21c1,2第一个文件的第1行需要改变(c=change)才能和第二个文件的第1到2行匹配&lt; aaaa小于号"&lt;"表示左边文件(file1)文件内容------表示分隔符&gt; aaa大于号"&gt;"表示右边文件(file2)文件内容&gt; hello3d3第一个文件的第3行删除(d=delete)后才能和第二个文件的第3行匹配&lt; hello world5d4第一个文件的第5行删除后才能和第二个文件的第4行匹配&lt; 3336a6,7第一个文件的第6行增加(a=add)内容后才能和第二个文件的第6到7行匹配&gt; 333需要增加的内容在第二个文件里是333和world&gt; world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2）上下文格式显示</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@MissHou ~]# diff -c file1 file2前两行主要列出需要比较的文件名和文件的时间戳；文件名前面的符号***表示file1，---表示file2*** file1       2019-04-16 16:26:05.748650262 +0800--- file2       2019-04-16 16:26:30.470646030 +0800***************我是分隔符*** 1,6 ****以***开头表示file1文件，1,6表示1到6行! aaaa!表示该行需要修改才与第二个文件匹配  111- hello world-表示需要删除该行才与第二个文件匹配  222- 333-表示需要删除该行才与第二个文件匹配  bbb--- 1,7 ----以---开头表示file2文件，1,7表示1到7行! aaa表示第一个文件需要修改才与第二个文件匹配! hello表示第一个文件需要修改才与第二个文件匹配  111  222  bbb+ 333表示第一个文件需要加上该行才与第二个文件匹配+ world表示第一个文件需要加上该行才与第二个文件匹配<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3）合并格式显示</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@MissHou ~]# diff -u file1 file2前两行主要列出需要比较的文件名和文件的时间戳；文件名前面的符号---表示file1，+++表示file2--- file1       2019-04-16 16:26:05.748650262 +0800+++ file2       2019-04-16 16:26:30.470646030 +0800@@ -1,6 +1,7 @@-aaaa+aaa+hello 111-hello world 222-333 bbb+333+world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>比较两个==目录不同==</li></ul><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">默认情况下也会比较两个目录里相同文件的内容[root@MissHou  tmp]# diff dir1 dir2diff dir1/file1 dir2/file10a1&gt; helloOnly in dir1: file3Only in dir2: test1如果只需要比较两个目录里文件的不同，不需要进一步比较文件内容，需要加-q选项[root@MissHou  tmp]# diff -q dir1 dir2Files dir1/file1 and dir2/file1 differOnly in dir1: file3Only in dir2: test1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>其他小技巧：</strong></p><p>有时候我们需要以一个文件为标准，去修改其他文件，并且修改的地方较多时，我们可以通过打补丁的方式完成。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">1）先找出文件不同，然后输出到一个文件[root@MissHou ~]# diff -uN file1 file2 &gt; file.patch-u:上下文模式-N:将不存在的文件当作空文件2）将不同内容打补丁到文件[root@MissHou ~]# patch file1 file.patchpatching file file13）测试验证[root@MissHou ~]# diff file1 file2[root@MissHou ~]#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-paste工具"><a href="#7-paste工具" class="headerlink" title="7. paste工具"></a>7. paste工具</h2><blockquote><p>paste工具用于合并文件行</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">常用选项：-d：自定义间隔符，默认是tab-s：串行处理，非并行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="8-tr工具"><a href="#8-tr工具" class="headerlink" title="8. tr工具"></a>8. tr工具</h2><blockquote><p> tr用于字符转换，替换和删除；主要用于==删除文件中控制字符==或进行==字符转换==</p></blockquote><h3 id="语法和选项-4"><a href="#语法和选项-4" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">用法1：命令的执行结果交给tr处理，其中string1用于查询，string2用于转换处理# commands|tr  'string1'  'string2'用法2：tr处理的内容来自文件，记住要使用"&lt;"标准输入# tr  'string1'  'string2' &lt; filename用法3：匹配string1进行相应操作，如删除操作# tr options 'string1' &lt; filename<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>常用选项：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">-d 删除字符串1中所有输入字符。-s 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>常匹配字符串：</strong></p><table><thead><tr><th>字符串</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>==a-z==或[:lower:]</td><td>匹配所有小写字母</td><td>[a-zA-Z0-9]</td></tr><tr><td>==A-Z==或[:upper:]</td><td>匹配所有大写字母</td><td></td></tr><tr><td>==0-9==或[:digit:]</td><td>匹配所有数字</td><td></td></tr><tr><td>[:alnum:]</td><td>匹配所有字母和数字</td><td></td></tr><tr><td>[:alpha:]</td><td>匹配所有字母</td><td></td></tr><tr><td>[:blank:]</td><td>所有水平空白</td><td></td></tr><tr><td>[:punct:]</td><td>匹配所有标点符号</td><td></td></tr><tr><td>[:space:]</td><td>所有水平或垂直的空格</td><td></td></tr><tr><td>[:cntrl:]</td><td>所有控制字符</td><td>\f Ctrl-L        走行换页<br>\n Ctrl-J  换行</td></tr><tr><td>\r Ctrl-M        回车</td><td></td><td></td></tr><tr><td>\t Ctrl-I  tab键</td><td></td><td></td></tr></tbody></table><p><strong>举例说明：</strong></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@MissHou  shell01]# cat 3.txt 自己创建该文件用于测试ROOT:x:0:0:root:/root:/bin/bashbin:x:1:1:bin:/bin:/sbin/nologindaemon:x:2:2:daemon:/sbin:/sbin/nologinadm:x:3:4:adm:/var/adm:/sbin/nologinlp:x:4:7:lp:/var/spool/lpd:/sbin/nologinsync:x:5:0:sync:/sbin:/bin/syncshutdown:x:6:0:shutdown:/sbin:/sbin/shutdownhalt:x:7:0:halt:/sbin:/sbin/haltmail:x:8:12:mail:/var/spool/mail:/sbin/nologinuucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologinboss02:x:516:511::/home/boss02:/bin/bashvip:x:517:517::/home/vip:/bin/bashstu1:x:518:518::/home/stu1:/bin/bashmailnull:x:47:47::/var/spool/mqueue:/sbin/nologinsmmsp:x:51:51::/var/spool/mqueue:/sbin/nologinaaaaaaaaaaaaaaaaaaaabbbbbb111111122222222222233333333cccccccchello world 888666777999# tr -d '[:/]' &lt; 3.txt 删除文件中的:和/# cat 3.txt |tr -d '[:/]'删除文件中的:和/# tr '[0-9]' '@' &lt; 3.txt 将文件中的数字替换为@符号# tr '[a-z]' '[A-Z]' &lt; 3.txt 将文件中的小写字母替换成大写字母# tr -s '[a-z]' &lt; 3.txt 匹配小写字母并将重复的压缩为一个# tr -s '[a-z0-9]' &lt; 3.txt 匹配小写字母和数字并将重复的压缩为一个# tr -d '[:digit:]' &lt; 3.txt 删除文件中的数字# tr -d '[:blank:]' &lt; 3.txt 删除水平空白# tr -d '[:space:]' &lt; 3.txt 删除所有水平和垂直空白<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h4><ol><li>使用小工具分别截取当前主机IP；截取NETMASK；截取广播地址；截取MAC地址</li></ol><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ifconfig eth0|grep 'Bcast'|tr -d '[a-zA-Z ]'|cut -d: -f2,3,410.1.1.1:10.1.1.255:255.255.255.0# ifconfig eth0|grep 'Bcast'|tr -d '[a-zA-Z ]'|cut -d: -f2,3,4|tr ':' '\n'10.1.1.110.1.1.255255.255.255.0# ifconfig eth0|grep 'HWaddr'|cut -d: -f2-|cut -d' ' -f400:0C:29:25:AE:54# ifconfig eth0|grep 'HW'|tr -s ' '|cut -d' ' -f500:0C:29:B4:9E:4E# ifconfig eth1|grep Bcast|cut -d: -f2|cut -d' ' -f1# ifconfig eth1|grep Bcast|cut -d: -f2|tr -d '[ a-zA-Z]'# ifconfig eth1|grep Bcast|tr -d '[:a-zA-Z]'|tr ' ' '@'|tr -s '@'|tr '@' '\n'|grep -v ^$# ifconfig eth0|grep 'Bcast'|tr -d [:alpha:]|tr '[ :]' '\n'|grep -v ^$# ifconfig eth1|grep HWaddr|cut -d ' ' -f11# ifconfig eth0|grep HWaddr|tr -s ' '|cut -d' ' -f5# ifconfig eth1|grep HWaddr|tr -s ' '|cut -d' ' -f5# ifconfig eth0|grep 'Bcast'|tr -d 'a-zA-Z:'|tr ' ' '\n'|grep -v '^$'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>将系统中所有普通用户的用户名、密码和默认shell保存到一个文件中，要求用户名密码和默认shell之间用tab键分割</li></ol><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep 'bash$' passwd |grep -v 'root'|cut -d: -f1,2,7|tr ':' '\t' |tee abc.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二、bash的特性"><a href="#二、bash的特性" class="headerlink" title="二、bash的特性"></a>二、bash的特性</h1><h2 id="1、命令和文件自动补全"><a href="#1、命令和文件自动补全" class="headerlink" title="1、命令和文件自动补全"></a>1、命令和文件自动补全</h2><p>Tab只能补全==命令和文件== （RHEL6/Centos6）</p><h2 id="2、常见的快捷键"><a href="#2、常见的快捷键" class="headerlink" title="2、常见的快捷键"></a>2、常见的快捷键</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">^c   终止前台运行的程序^z  将前台运行的程序挂起到后台^d   退出 等价exit^l   清屏 ^a |home  光标移到命令行的最前端^e |end  光标移到命令行的后端^u   删除光标前所有字符^k   删除光标后所有字符^r 搜索历史命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-、-常用的通配符（重点）"><a href="#3-、-常用的通配符（重点）" class="headerlink" title="3 、==常用的通配符（重点）=="></a>3 、==常用的通配符（重点）==</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">*:匹配0或多个任意字符?:匹配任意单个字符[list]:匹配[list]中的任意单个字符,或者一组单个字符   [a-z][!list]: 匹配除list中的任意单个字符{string1,string2,...}：匹配string1,string2或更多字符串# rm -f file*# cp *.conf  /dir1# touch file{1..5}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、-bash中的引号（重点）"><a href="#4、-bash中的引号（重点）" class="headerlink" title="4、==bash中的引号（重点）=="></a>4、==bash中的引号（重点）==</h2><ul><li>双引号””   :会把引号的内容当成整体来看待，允许通过$符号引用其他变量值</li><li>单引号’’     :会把引号的内容当成整体来看待，禁止引用其他变量值，shell中特殊符号都被视为普通字符</li><li>反撇号``  :反撇号和$()一样，引号或括号里的命令会优先执行，如果存在嵌套，反撇号不能用</li></ul><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@MissHou  dir1]# echo "$(hostname)"server[root@MissHou  dir1]# echo '$(hostname)'$(hostname)[root@MissHou  dir1]# echo "hello world"hello world[root@MissHou  dir1]# echo 'hello world'hello world[root@MissHou  dir1]# echo $(date +%F)2018-11-22[root@MissHou  dir1]# echo `echo $(date +%F)`2018-11-22[root@MissHou  dir1]# echo `date +%F`2018-11-22[root@MissHou  dir1]# echo `echo `date +%F``date +%F[root@MissHou  dir1]# echo $(echo `date +%F`)2018-11-22<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS域名管理系统与LAMP编译安装</title>
      <link href="/2023/12/23/dns-yu-ming-guan-li-xi-tong-yu-lamp-bian-yi-an-zhuang/"/>
      <url>/2023/12/23/dns-yu-ming-guan-li-xi-tong-yu-lamp-bian-yi-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="DNS域名管理系统与LAMP编译安装"><a href="#DNS域名管理系统与LAMP编译安装" class="headerlink" title="DNS域名管理系统与LAMP编译安装"></a>DNS域名管理系统与LAMP编译安装</h1><h1 id="一、DNS域名管理系统"><a href="#一、DNS域名管理系统" class="headerlink" title="一、DNS域名管理系统"></a>一、DNS域名管理系统</h1><h2 id="1、DNS两种解析"><a href="#1、DNS两种解析" class="headerlink" title="1、DNS两种解析"></a>1、DNS两种解析</h2><p>正向解析：把域名解析为对应的IP地址</p><p>反向解析：把IP地址解析为对应的域名</p><h2 id="2、DNS的反向解析"><a href="#2、DNS的反向解析" class="headerlink" title="2、DNS的反向解析"></a>2、DNS的反向解析</h2><p>目标：把10.1.1.13这个IP地址通过DNS服务器指向<a href="http://www.itcast.cluster域名/">www.itcast.cluster域名</a></p><p>第一步：开启网络的访问权限控制</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/named.conf12 options {13         listen-on port 53 { 127.0.0.1;any; };14         listen-on-v6 port 53 { ::1; };15         directory       "/var/named";16         dump-file       "/var/named/data/cache_dump.db";17         statistics-file "/var/named/data/named_stats.txt";18         memstatistics-file "/var/named/data/named_mem_stats.txt";19         recursing-file  "/var/named/data/named.recursing";20         secroots-file   "/var/named/data/named.secroots";21         allow-query     { localhost;any;};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：在zones文件中定义zone文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/named.rfc1912.zones49 zone "1.1.10.in-addr.arpa" IN {50         type master;51         file "10.1.1.zone";52         allow-update { none; };53 };<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：cd /var/named进入到DNS zone配置文件目录，复制named.loopback文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /var/named# cp -p named.loopback 10.1.1.zone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第四步：编辑10.1.1.zone文件，把IP地址=&gt;10.1.1.13指向<a href="http://www.itcast.cluster域名/">www.itcast.cluster域名</a></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">$TTL 1D@       IN SOA  @ rname.invalid. (                                        0       ; serial                                        1D      ; refresh                                        1H      ; retry                                        1W      ; expire                                        3H )    ; minimum        NS      @        A       127.0.0.1        AAAA    ::1        PTR     localhost.#增加一条反向解析，把10.1.1.13 =&gt; PTR =&gt; www.itcast.cluster13      PTR     www.itcast.cluster<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：检查与客户端测试</p><p>DNS服务器：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># named-checkconf /etc/named.conf# named-checkconf /etc/named.rfc1912.zones# cd /var/named# named-checkzone 10.1.1.zone 10.1.1.zone# systemctl restart named<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>客户端检测：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo 'nameserver 10.1.1.12' &gt; /etc/resolv.conf# nslookup 10.1.1.13www.itcast.cluster.1.1.10.in-addr.arpa.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3、VMware与CentOS7网络的小bug"><a href="#3、VMware与CentOS7网络的小bug" class="headerlink" title="3、VMware与CentOS7网络的小bug"></a>3、VMware与CentOS7网络的小bug</h2><p>DNS的临时配置方式 =&gt; echo  ‘nameserver 10.1.1.12’ &gt; /etc/resolv.conf</p><blockquote><p>注：当VMware关闭或者挂起时，临时设置的DNS会被重置</p></blockquote><p>CentOS7版本中，有的时候，在网络配置时，明明设置了静态IP，但是无论重启网络、重启网卡，其设置的IP地址都没有生效。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ifconfig ens33# ip a2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000    link/ether 00:0c:29:68:d8:bb brd ff:ff:ff:ff:ff:ff    inet 10.1.1.29/24 brd 10.1.1.255 scope global noprefixroute dynamic ens33       valid_lft 1656sec preferred_lft 1656sec    inet 10.1.1.11/24 brd 10.1.1.255 scope global secondary ens33       valid_lft forever preferred_lft forever    inet6 fe80::20c:29ff:fe68:d8bb/64 scope link        valid_lft forever preferred_lft forever<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>出现以上问题的主要原因在于图形化界面中的NetworkManager服务没有关闭！</p></blockquote><p>解决方案：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop NetworkManager# systemctl disable NetworkManager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、多域DNS服务器搭建"><a href="#4、多域DNS服务器搭建" class="headerlink" title="4、多域DNS服务器搭建"></a>4、多域DNS服务器搭建</h2><p>需求：搭建一个DNS服务器，可以同时解析test.net和heima.cc域</p><table><thead><tr><th>编号</th><th>域名</th><th>IP地址</th></tr></thead><tbody><tr><td>1</td><td><a href="http://www.test.net/">www.test.net</a></td><td>10.1.1.13</td></tr><tr><td>2</td><td>bbs.heima.cc</td><td>10.1.1.13</td></tr></tbody></table><p>第一步：更改named.conf文件，设置网络访问权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/named.rfc1912.zones49 zone "1.1.10.in-addr.arpa" IN {50         type master;51         file "10.1.1.zone";52         allow-update { none; };53 };<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：更改named.rfc1912.zones，添加test以及heima域</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/named.rfc1912.zones...zone "test.net" IN {        type master;        file "test.net.zone";        allow-update { none; };};zone "heima.cc" IN {        type master;        file "heima.cc.zone";        allow-update { none; };};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：进入/var/named目录，复制named.localhost</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /var/named# cp -p named.localhost test.net.zone# cp -p named.localhost heima.cc.zone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第四步：编辑test.net.zone与heima.cc.zone文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim test.net.zone...www A 10.1.1.13# vim heima.cc.zone...bbsA 10.1.1.13<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：检测配置文件，然后启动named服务（重启）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># named-checkconf /etc/named.conf# named-checkconf /etc/named.rfc1912.zones# cd /var/named# named-checkzone test.net.zone test.net.zone# named-checkzone heima.cc.zone heima.cc.zone# systemctl restart named<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、ntp服务器搭建"><a href="#5、ntp服务器搭建" class="headerlink" title="5、ntp服务器搭建"></a>5、ntp服务器搭建</h2><p>基础班ntp回顾：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate cn.ntp.org.cn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>虽然以上方式，可以实现对时间的校对！但是由于需要连接外网，其同步需要消耗一定的时间，那有没有更好的解决办法呢？</p><p>第一步：准备一台NTP时间服务器</p><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>备注信息</th></tr></thead><tbody><tr><td>1</td><td>ntp.itcast.cn</td><td>10.1.1.100</td><td>NTP内网时间服务器</td></tr></tbody></table><blockquote><p>扩展：在原有基础上，记住要关闭NetworkManager服务</p></blockquote><p>第二步：安装ntp服务软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install ntp -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：更改配置文件，开启ntp服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/ntp.conf13 restrict 127.0.0.114 restrict ::1# 手工添加10.1.1.0网段，范围10.1.1.1 ~ 10.1.1.25415 restrict 10.1.1.0 mask 255.255.255.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：启动ntpd服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate cn.ntp.org.cn# systemctl restart ntpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>到此NTP时间服务器配置完毕，以后所有的计算机都可以直接使用ntpdate同步此NTP服务器</p><p>DNS-MASTER、DNS-SLAVE</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate 10.1.1.100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>10.1.1.100是内网NTP时间服务器的IP地址</p></blockquote><blockquote><p>除此以外，我们还可以使用计划任务，定期进行时间的同步(针对所有的客户端)</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab -e*/2 * * * * /usr/sbin/ntpdate 10.1.1.100 &amp;&gt;/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6、DNS主从部署"><a href="#6、DNS主从部署" class="headerlink" title="6、DNS主从部署"></a>6、DNS主从部署</h2><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416140619919.png" alt="image-20200416140619919"></p><p>主从部署的核心思路：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">1. master和slave的系统时间保持一致2. slave服务器上安装相应的软件（系统版本、软件版本保持一致）3. 根据需求修改相应的配置文件（master和slave都应该去修改）4. 主从同步的核心是slave同步master上的区域文件（zone文件）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>master：主slave：从</p></blockquote><p>第一步：准备一台slave从服务器(略)</p><p>① 克隆 ② 更改主机名称以及IP地址（更改UUID编号、关闭NetworkManager）③ 关闭防火墙与SELinux ④ 配置YUM源</p><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>备注信息</th></tr></thead><tbody><tr><td>1</td><td>slave.itcast.cn</td><td>10.1.1.14</td><td>dns slave从服务器</td></tr></tbody></table><p>第二步：更改主dns服务器，允许其他的从服务器下载同步资源</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/named.conf12 options {13         listen-on port 53 { 127.0.0.1;any; };14         listen-on-v6 port 53 { ::1; };15         allow-transfer {10.1.1.14; };=&gt;  允许从服务器的IP地址过来同步资源16         directory       "/var/named";17         dump-file       "/var/named/data/cache_dump.db";18         statistics-file "/var/named/data/named_stats.txt";19         memstatistics-file "/var/named/data/named_mem_stats.txt";20         recursing-file  "/var/named/data/named.recursing";21         secroots-file   "/var/named/data/named.secroots";22         allow-query     { localhost;any;};# systemctl restart named<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：SLAVE从服务器配置</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install bind -y# vim /etc/named.conf12 options {13         listen-on port 53 { 127.0.0.1;any; };14         listen-on-v6 port 53 { ::1; };15         directory       "/var/named";16         dump-file       "/var/named/data/cache_dump.db";17         statistics-file "/var/named/data/named_stats.txt";18         memstatistics-file "/var/named/data/named_mem_stats.txt";19         recursing-file  "/var/named/data/named.recursing";20         secroots-file   "/var/named/data/named.secroots";21         allow-query     { localhost;any; };# vim /etc/named.rfc1912.zoneszone "test.net" IN {        type slave;        file "slaves/test.net";        masters { 10.1.1.12; };};zone "heima.cc" IN {        type slave;        file "slaves/heima.cc";        masters { 10.1.1.12; };};# 检测配置文件是否有错（略）# named-checkconf ...# systemctl restart named<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：在Client客户端，把Slave从服务器的IP设置为DNS</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo 'nameserver 10.1.1.14' &gt; /etc/resolv.conf# nslookup www.test.net<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="二、LAMP源码构建"><a href="#二、LAMP源码构建" class="headerlink" title="二、LAMP源码构建"></a>二、LAMP源码构建</h1><h2 id="1、项目背景"><a href="#1、项目背景" class="headerlink" title="1、项目背景"></a>1、项目背景</h2><p>为企业内部的开发人员，部署一套“预发布系统”，要求其环境与线上环境一模一样。</p><p>由于项目是基于PHP + MySQL进行开发设计的，所以我们需要选配环境。</p><p>LAMP = Linux + Apache + MySQL + PHP</p><p>LNMP = Linux + Nginx + MySQL + PHP</p><p>经过开发人员的沟通确认 =&gt; LAMP作为预发布环境！</p><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416152428473.png" alt="image-20200416152428473"></p><h2 id="2、任务要求"><a href="#2、任务要求" class="headerlink" title="2、任务要求"></a>2、任务要求</h2><ul><li>==<strong>源码</strong>部署LAMP环境==，和生产保持一致</li><li>静态资源文件同步生产环境（生产发生改变立马同步到预发布平台）</li></ul><h2 id="3、环境准备"><a href="#3、环境准备" class="headerlink" title="3、环境准备"></a>3、环境准备</h2><p>系统环境：CentOS7.6</p><p>软件环境：AMP（Apache、MySQL以及PHP）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Apache——&gt;2.4.37（2.2与2.4）MySQL——&gt;5.6.31（5.5、5.6与5.7）PHP——&gt;7.2.17（5.2、5.4、5.6、7.0、7.1、7.2）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4、系统环境"><a href="#4、系统环境" class="headerlink" title="4、系统环境"></a>4、系统环境</h2><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>备注信息</th></tr></thead><tbody><tr><td>1</td><td>web.itcast.cn</td><td>10.1.1.13</td><td>LAMP预发布环境</td></tr></tbody></table><p>① 更改主机名称、配置IP地址（静态IP、更改UUID编号、关闭NetworkManager）</p><p>② 关闭防火墙、SELinux</p><p>③ 配置YUM源（有网配公网，没网配光盘或自建YUM源）</p><h2 id="5、依赖软件安装"><a href="#5、依赖软件安装" class="headerlink" title="5、依赖软件安装"></a>5、依赖软件安装</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install cmake pcre-devel ncurses-devel openssl-devel libcurl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、AMP软件安装注意事项"><a href="#6、AMP软件安装注意事项" class="headerlink" title="6、AMP软件安装注意事项"></a>6、AMP软件安装注意事项</h2><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416154343314.png" alt="image-20200416154343314"></p><p>编译安装顺序：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Linux+Apache(2.4)+MySQL(5.6.31)+PHP(7.2.17)Apache——&gt;MySQL——&gt;PHP 或者  MySQL——&gt;Apache——&gt;PHP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="三、编译安装MySQL软件"><a href="#三、编译安装MySQL软件" class="headerlink" title="三、编译安装MySQL软件"></a>三、编译安装MySQL软件</h1><h2 id="1、安装需求"><a href="#1、安装需求" class="headerlink" title="1、安装需求"></a>1、安装需求</h2><table><thead><tr><th>软件版本</th><th>安装目录</th><th>数据目录</th><th>端口</th></tr></thead><tbody><tr><td>mysql-5.6.31</td><td>/usr/local/mysql</td><td>/usr/local/mysql/data</td><td>3306</td></tr></tbody></table><h2 id="2、MySQL安装详解"><a href="#2、MySQL安装详解" class="headerlink" title="2、MySQL安装详解"></a>2、MySQL安装详解</h2><p>第一步：创建一个mysql系统账号（没有这个账号mysql无法运行）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd -r -s /sbin/nologin mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：对软件进行解压</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar xf mysql-5.6.31.tar.gz# cd mysql-5.6.31<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：使用cmake配置MySQL的安装向导</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim cmake.shcmake . \-DCMAKE_INSTALL_PREFIX=/usr/local/mysql/ \-DMYSQL_DATADIR=/usr/local/mysql/data \-DENABLED_LOCAL_INFILE=1 \-DWITH_INNOBASE_STORAGE_ENGINE=1 \-DMYSQL_TCP_PORT=3306 \-DDEFAULT_CHARSET=utf8mb4 \-DDEFAULT_COLLATION=utf8mb4_general_ci \-DWITH_EXTRA_CHARSETS=all \-DMYSQL_USER=mysql# chmod +x cmake.sh# ./cmake.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：make &amp;&amp; make install</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># make &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第五步：更改目录权限以及初始化数据库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown -R mysql.mysql /usr/local/mysql# cd /usr/local/mysql删除/etc/my.cnf文件，如果不删除此文件，会导致初始化失败# rm -f /etc/my.cnf初始化就是给mysql数据库一些初始化的数据（如账号、密码、数据文件，ll data）# ./scripts/mysql_install_db --user=mysql# ll data这个目录如果产生了一个mysql的文件夹就代表初始化成功了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：把mysql的启动脚本copy到/etc/init.d目录下，起一个名称叫做mysql</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp support-files/mysql.server /etc/init.d/mysql# service mysql start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第七步：设置密码与环境变量</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /usr/local/mysql# bin/mysqladmin -u root password '123'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>生产环境下，密码一定要越复杂越好</p></blockquote><p>第八步：把/usr/local/mysql/bin目录添加到环境变量</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo 'export PATH=$PATH:/usr/local/mysql/bin' &gt;&gt; /etc/profile# source /etc/profile# mysql -uroot -pEnter password:123mysql&gt; exit;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、编译安装Apache软件"><a href="#四、编译安装Apache软件" class="headerlink" title="四、编译安装Apache软件"></a>四、编译安装Apache软件</h1><h2 id="1、源码安装依赖软件apr"><a href="#1、源码安装依赖软件apr" class="headerlink" title="1、源码安装依赖软件apr"></a>1、源码安装依赖软件apr</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">安装apr软件：# tar xf apr-1.5.2.tar.bz2# cd apr-1.5.2# ./configure &amp;&amp; make &amp;&amp; make install安装apr-util软件：# tar xf apr-util-1.5.4.tar.bz2# cd apr-util-1.5.4/# ./configure --with-apr=/usr/local/apr/bin/apr-1-config    指定软件apr的路径# make &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、编译安装Apache软件（重点）"><a href="#2、编译安装Apache软件（重点）" class="headerlink" title="2、编译安装Apache软件（重点）"></a>2、编译安装Apache软件（重点）</h2><p>第一步：解压软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum remove httpd -y# tar xf httpd-2.4.37.tar.bz2# cd httpd-2.4.37<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写apache.sh脚本进行软件安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim apache.sh./configure \--enable-modules=all \--enable-mods-shared=all \--enable-so \--enable-rewrite \--with-pcre \--enable-ssl \--with-mpm=prefork \--with-apr=/usr/local/apr/bin/apr-1-config \--with-apr-util=/usr/local/apr/bin/apu-1-config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：给予x权限，然后make &amp;&amp; make  install</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod +x apache.sh# ./apache.sh# make &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：运行Apache软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /usr/local/apache2/# bin/apachectl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416173436794.png" alt="image-20200416173436794"></p><h1 id="五、源码安装PHP软件"><a href="#五、源码安装PHP软件" class="headerlink" title="五、源码安装PHP软件"></a>五、源码安装PHP软件</h1><h2 id="1、安装说明"><a href="#1、安装说明" class="headerlink" title="1、安装说明"></a>1、安装说明</h2><p>第一步：对软件进行解压缩</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar xf php-7.2.17.tar.xz# cd php-7.2.17<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第二步：对php源码进行一个配置</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim php.sh./configure \--with-apxs2=/usr/local/apache2/bin/apxs \--with-mysqli \--with-pdo-mysql \--with-zlib \--with-curl \--enable-zip \--with-gd \--with-freetype-dir \--with-jpeg-dir \--with-png-dir \--enable-sockets \--with-xmlrpc \--enable-soap \--enable-opcache \--enable-mbstring \--enable-mbregex \--enable-pcntl \--enable-shmop \--enable-sysvmsg \--enable-sysvsem \--enable-sysvshm \--enable-calendar \--enable-bcmath# chmod +x php.sh# ./php.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：解决PHP依赖关系</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">configure: error: libxml2 not found. Please check your libxml2 installation.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现以上提示，代表php与其他软件存在依赖关系：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install libxml2-devel -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>除了以上这个依赖以外，还存在其他依赖：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install libjpeg-devel libpng-devel freetype-devel -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：编译+安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># make &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第五步：检查php有没有安装成功</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls /usr/local/apache2/modules/libphp7.so<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、配置Apache与PHP"><a href="#2、配置Apache与PHP" class="headerlink" title="2、配置Apache与PHP"></a>2、配置Apache与PHP</h2><p>第一步：打开Apache的配置文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /usr/local/apache2/conf/httpd.conf209行 ServerName localhost:80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第二步：配置Apache语言支持（支持中文）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">159行 LoadModule negotiation_module modules/mod_negotiation.so 此模块打开注释483行 Include conf/extra/httpd-languages.conf  打开此选项，扩展配置文件就生效了...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第三步：开启对PHP的支持</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">166行 LoadModule php7_module modules/libphp7.soAddHandler php7-script .phpAddType text/html .php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第四步：添加index.php默认首页</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">//默认主页加上index.php,并放在index.html前,支持php的首页文件&lt;IfModule dir_module&gt;270行    DirectoryIndex index.php index.html&lt;/IfModule&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：让Apache优先支持中文</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /usr/local/apache2/conf/extra/httpd-languages.conf19行 DefaultLanguage zh-CN  打开注释，默认语言集改为中文78行 LanguagePriority zh-CN en ca cs da de el eo es et fr he hr it ja ko ltz nl nn no pl pt pt-BR ru sv tr zh-TW语言集优先集，把zh-CN 写到前面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>设置完成后，重启Apache软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /usr/local/apache2# bin/apachectl -k restart# bin/apachectl -k restart备注：如果还不行，直接pkill httpd，然后bin/apachectl启动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、编写php测试脚本"><a href="#3、编写php测试脚本" class="headerlink" title="3、编写php测试脚本"></a>3、编写php测试脚本</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /usr/local/apache2/htdocs   htdocs就是apache的默认项目目录# rm -f index.html# vim index.php&lt;?php        phpinfo();?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此，LAMP源码编译安装就结束了！</p><h1 id="六、使用LAMP部署Web项目"><a href="#六、使用LAMP部署Web项目" class="headerlink" title="六、使用LAMP部署Web项目"></a>六、使用LAMP部署Web项目</h1><h2 id="1、下载wordpress博客系统"><a href="#1、下载wordpress博客系统" class="headerlink" title="1、下载wordpress博客系统"></a>1、下载wordpress博客系统</h2><p>wordpress-4.7.3-zh_CN.tar.gz</p><h2 id="2、解压"><a href="#2、解压" class="headerlink" title="2、解压"></a>2、解压</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar xf wordpress-4.7.3-zh_CN.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、创建一个项目目录"><a href="#3、创建一个项目目录" class="headerlink" title="3、创建一个项目目录"></a>3、创建一个项目目录</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /www# mv wordpress /www/blog# chown -R daemon.daemon /www/blog/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、配置虚拟主机-一台服务器多个项目"><a href="#4、配置虚拟主机-一台服务器多个项目" class="headerlink" title="4、配置虚拟主机(一台服务器多个项目)"></a>4、配置虚拟主机(一台服务器多个项目)</h2><p>正常情况下：/usr/local/apache2/htdocs目录下（相当于/var/www/html）</p><p>一台服务器多个项目：使用虚拟主机</p><p>第一步：在httpd.conf配置文件中开启虚拟主机的配置文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /usr/local/apache2/conf/httpd.conf# Virtual hosts494行 Include conf/extra/httpd-vhosts.conf//打开加载虚拟主机配置文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：在/usr/local/apache2/conf/extra/httpd-vhosts.conf定义项目</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /usr/local/apache2/conf/extra/httpd-vhosts.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416202109513.png" alt="image-20200416202109513"></p><p>第三步：重启Apache</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /usr/local/apache2# bin/apachectl -k stop# bin/apachectl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5、在数据库中创建一个blog数据库"><a href="#5、在数据库中创建一个blog数据库" class="headerlink" title="5、在数据库中创建一个blog数据库"></a>5、在数据库中创建一个blog数据库</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -uroot -pEnter password:123mysql&gt; create database blog default charset utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="6、在Windows中配置本地DNS"><a href="#6、在Windows中配置本地DNS" class="headerlink" title="6、在Windows中配置本地DNS"></a>6、在Windows中配置本地DNS</h2><p>运行（Windows + R） =&gt; drivers + 回车：C:\Windows\System32\drivers\etc\hosts</p><p>Windows的DNS文件 =&gt; 可以劫持域名，自定义域名指向：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">10.1.1.13 www.blog.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7、使用Google浏览器或Firefox浏览器安装博客"><a href="#7、使用Google浏览器或Firefox浏览器安装博客" class="headerlink" title="7、使用Google浏览器或Firefox浏览器安装博客"></a>7、使用Google浏览器或Firefox浏览器安装博客</h2><p>第一次访问：报403 Forbidden</p><p>原因：默认情况下，httpd不允许其他主机访问项目目录</p><p>解决方案：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /usr/local/apache2/conf/httpd.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416203955556.png" alt="image-20200416203955556"></p><p>配置数据库：</p><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20200416204100546.png" alt="image-20200416204100546"></p><p>运行结果：</p><p><img src="/../assets/blog_res/DNS%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%8ELAMP%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85.assets/image-20231223171611263.png" alt="image-20231223171611263"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAMBA文件共享与DNS域名服务</title>
      <link href="/2023/12/23/samba-wen-jian-gong-xiang-yu-dns-yu-ming-fu-wu/"/>
      <url>/2023/12/23/samba-wen-jian-gong-xiang-yu-dns-yu-ming-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="SAMBA文件共享与DNS域名服务"><a href="#SAMBA文件共享与DNS域名服务" class="headerlink" title="SAMBA文件共享与DNS域名服务"></a>SAMBA文件共享与DNS域名服务</h1><h1 id="一、SAMBA文件共享"><a href="#一、SAMBA文件共享" class="headerlink" title="一、SAMBA文件共享"></a>一、SAMBA文件共享</h1><h2 id="1、什么是SAMBA"><a href="#1、什么是SAMBA" class="headerlink" title="1、什么是SAMBA"></a>1、什么是SAMBA</h2><p>SMB（Server Message Block）协议实现文件共享，也称为CIFS（Common Internet File System ）</p><p>是Windows和类Unix系统之间共享文件的一种协议</p><p>客户端==主要是Windows==；支持多节点同时挂载以及并发写入</p><p>主要用于windows和Linux下的文件共享、打印共享</p><p>实现==匿名与本地用户==文件共享</p><h2 id="2、SAMBA主要进程"><a href="#2、SAMBA主要进程" class="headerlink" title="2、SAMBA主要进程"></a>2、SAMBA主要进程</h2><p>smbd进程    控制发布共享目录与权限、==负责文件传输==   ==TCP  139 445==</p><p>nmbd进程       用于名称解析netbios   ==UDP 137 138== ; 基于NETBIOS协议获得计算机名称——&gt;解析为相应IP地址，实现信息通讯 </p><p> NetBIOS是Network Basic Input/Output System的简称，一般指用于局域网通信的一套API  </p><h2 id="3、SAMBA环境准备"><a href="#3、SAMBA环境准备" class="headerlink" title="3、SAMBA环境准备"></a>3、SAMBA环境准备</h2><p>第一步：从模板机中克隆一台Linux服务器，叫做SAMBA</p><p>第二步：更改主机名称与IP地址</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl set-hostname samba.itcast.cn# su# vim /etc/sysconfig/network-scripts/ifcfg-ens33BOOTPROTO=noneIPADDR=10.1.1.10NETMASK=255.255.255.0GATEWAY=10.1.1.2DNS1=8.8.8.8DNS2=114.114.114.114# systemctl restart network扩展：如果是多张网卡，建议使用ifdown ens33以及ifup ens33实现重启网络操作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld# setenforce 0# vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：配置yum源</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、SAMBA软件安装（服务器搭建）"><a href="#4、SAMBA软件安装（服务器搭建）" class="headerlink" title="4、SAMBA软件安装（服务器搭建）"></a>4、SAMBA软件安装（服务器搭建）</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install samba -y# rpm -qa |grep ^samba<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>SAMBA也是一个C/S架构的软件，Client主要是Windows</p></blockquote><h2 id="5、了解smb的配置文件"><a href="#5、了解smb的配置文件" class="headerlink" title="5、了解smb的配置文件"></a>5、了解smb的配置文件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/samba/smb.conf[global]  全局选项workgroup = MYGROUP                 定义samba服务器所在的工作组server string = Samba Server Version %v         smb服务的描述log file = /var/log/samba/log.%m            日志文件max log size = 50                   日志的最大大小KB  security = user             认证模式：share匿名|user用户密码|server外部服务器用户密码passdb backend = tdbsam         密码格式load printers = yes         加载打印机cups options = raw          打印机选项[homes]                 局部选项（共享名称）comment = Home Directories      描述browseable = no      隐藏共享名称writable = yes      可读可写[printers]      共享名称comment = All Printers       描述path = /var/spool/samba  本地的共享目录browseable = no  隐藏guest ok = no ——&gt;   public = no  需要帐号和密码访问writable = no  ——&gt;  read only =yes 不可写 printable = yes      打印选项[share]path = /dir1guest ok = nowritable = yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6、SAMBA综合案例"><a href="#6、SAMBA综合案例" class="headerlink" title="6、SAMBA综合案例"></a>6、SAMBA综合案例</h2><p>搭建一个SAMBA服务，共享一个目录/samba/share,客户端使用user01/123通过windows或者Linux可以在该目录里创建文件删除文件</p><p>第一步：SAMBA服务器环境准备</p><p>更改主机名称、IP地址、关闭防火墙、SELinux、配置YUM源</p><p>第二步：安装SAMBA软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install samba -y# rpm -aq|grep  ^samba<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：查询SAMBA生成文件列表（rpm  -ql）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ql samba/usr/sbin/smbd/usr/sbin/nmbd/usr/lib/systemd/system/smb.service/usr/lib/systemd/system/nmb.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：在服务器端创建一个共享目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /samba/share -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第五步：编辑/etc/smb.conf配置文件，实现SAMBA共享</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/samba/smb.conf...[smb_share]        comment = samba service        path = /samba/share        guest ok = no        writable = yes或者[samba_share]        path = /samba/share        public = no        writable = yes备注：guest ok === public<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：创建一个user01用户，然后添加到samba认证中，设置密码为123</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd user01# smbpasswd -a user01New SMB password:123Retype new SMB password:123Added user user01.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上操作完成后，则SAMBA系统中增加了一个user01的账号以及123的密码</p><p>第七步：启动nmb与smb服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start nmb# systemctl start smb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第八步：基于Windows或Linux实现文件共享</p><p>Windows：</p><p>① 首先安装SAMBA支持Windows + X，选择控制面板</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415112837084.png" alt="image-20200415112837084"></p><p>② 找到Windows功能选项</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415112918419.png" alt="image-20200415112918419"></p><p>③ 安装SAMBA功能（客户端）</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415113145929.png" alt="image-20200415113145929"></p><p>④ 进入计算机（我的电脑），找到映射网络驱动器</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415113252801.png" alt="image-20200415113252801"></p><p>设置SAMBA服务器的地址信息：</p><p> <img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415113349174.png" alt="image-20200415113349174"></p><p>10.1.1.10 =&gt; Linux服务器的IP地址</p><p>smb_share =&gt; SAMBA标签</p><blockquote><p>挂载完成后，目录不可写？答：主要原因在于/samba/share目录没有写入权限</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -m u:user01:rwx /samba/share<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第九步：基于Linux或Linux实现文件共享</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># smbclient -L 10.1.1.10 -U user01<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用smbclient查看目录信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># smbclient //10.1.1.10/smb_share -U user01<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把SAMBA挂载到Linux系统（类似NFS）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /u01# mount.cifs -o user=user01,pass=123 //10.1.1.10/smb_share /u01<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>访问控制说明：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">控制读写权限writable = yes/noreadonly = yes/no如果资源可写，但只允许某些用户可写，其他都是只读write list = admin, root, @staff（用户组）read list = mary, @students控制访问对象valid users = tom,mary,@itcastinvalid users = tom注意：以上两个选项只能存在其中一个网络访问控制：hosts deny = 192.168.0.   拒绝某个网段hosts allow = 192.168.0.254  允许某个IPhosts deny = all  拒绝所有hosts allow = 192.168.0. EXCEPT 192.168.0.254  允许某个网段，但拒绝某个单个IP注意：deny和allow同时存在，allow优先<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、总结"><a href="#7、总结" class="headerlink" title="7、总结"></a>7、总结</h2><ol><li>ftp 局域网和外网都可以</li><li>nfs  局域网  挂载方式访问  mount.nfs  侧重于Linux与Linux之间</li><li>samba 局域网  直接访问(smbclinet)挂载的方式mount.cifs  侧重于Windows与Linux之间</li></ol><h1 id="二、DNS域名管理系统"><a href="#二、DNS域名管理系统" class="headerlink" title="二、DNS域名管理系统"></a>二、DNS域名管理系统</h1><h2 id="1、任务背景"><a href="#1、任务背景" class="headerlink" title="1、任务背景"></a>1、任务背景</h2><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415141710221.png" alt="image-20200415141710221"></p><p>解析内网域名，能够访问内网web应用。把 <a href="http://www.itcast.cluster/">www.itcast.cluster</a>   解析到内网服务器IP</p><h2 id="2、DNS概述"><a href="#2、DNS概述" class="headerlink" title="2、DNS概述"></a>2、DNS概述</h2><p><strong>DNS（domain name system ） 域名管理系统</strong></p><ul><li>域名：</li></ul><p>由特定的格式组成，用来表示互联网中==某一台计算机或者计算机组的名称==，能够使人更方便的访问互联网，而不用记住能够被机器直接读取的IP地址。</p><p>计算机 =&gt; IP地址，互联网中的计算机都是通过IP地址进行互相访问的。(IP地址过于复杂)</p><p>域名：代替IP实现计算机的访问（高级 =&gt; 上层应用，底层还是IP地址）</p><p>每个域名 =&gt;  DNS服务器  =&gt; 对应的IP地址</p><h3 id="☆-DNS的正向解析"><a href="#☆-DNS的正向解析" class="headerlink" title="☆ DNS的正向解析"></a>☆ DNS的正向解析</h3><p>域名的==正向解析==</p><p>将主机域名转换为对应的IP 地址，以便网络程序能够通过主机域名访问到对应的服务器主机</p><p><strong>域名——&gt;IP</strong>A记录</p><h3 id="☆-DNS的反向解析"><a href="#☆-DNS的反向解析" class="headerlink" title="☆ DNS的反向解析"></a>☆ DNS的反向解析</h3><p>域名的==反向解析==</p><p>将主机的IP地址转换为对应的域名，以便网络（服务）程序能够通过IP地址查询到主机的域名</p><p><strong>IP——&gt;域名</strong>PTR记录</p><h2 id="3、DNS的结构"><a href="#3、DNS的结构" class="headerlink" title="3、DNS的结构"></a>3、DNS的结构</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">域名：www.itheima.comDNS结构：www.itheima.com.  =&gt;  从右向左解析<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415143616891.png" alt="image-20200415143616891"></p><h3 id="☆-根域（-）"><a href="#☆-根域（-）" class="headerlink" title="☆ 根域（.）"></a>☆ 根域（.）</h3><ul><li>在整个 DNS 系统的最上方一定是 . (小数点) 这个 DNS 服务器 (称为 root)，也叫”根域“。</li><li>根域 （13台 全世界只有13台。1个为主根服务器，放置在美国。其余12个均为辅根服务器，其中9个放置在美国，欧洲2个，位于英国和瑞典，亚洲1个，位于日本。）</li></ul><h3 id="☆-一级域名"><a href="#☆-一级域名" class="headerlink" title="☆ 一级域名<顶级域|国家域>"></a><strong>☆ 一级域名&lt;顶级域|国家域&gt;</strong></h3><p>com net edu gov org cc  io| cn uk us ru ja ko </p><p>.com ： 商业公司</p><p>.net  ：互联网公司</p><p>.edu ：教育（中小学、高中、大学…）</p><p>.gov ：政府</p><p>.io：存储设备，redis</p><p>.cn   ：中国域名（国家域）</p><h3 id="☆-二级域名-自己购买管理"><a href="#☆-二级域名-自己购买管理" class="headerlink" title="☆ 二级域名(自己购买管理)"></a>☆ <strong>二级域名</strong>(自己购买管理)</h3><p>qq.com**.**   baidu.com.    google.com. </p><h3 id="☆-域名机构"><a href="#☆-域名机构" class="headerlink" title="☆ 域名机构"></a><strong>☆ 域名机构</strong></h3><p>收费（新网|万网）<br>老牌免费域名：TK顶级域名、TK域名DNS、TK域名商</p><h2 id="4、DNS工作原理"><a href="#4、DNS工作原理" class="headerlink" title="4、DNS工作原理"></a>4、DNS工作原理</h2><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415145414259.png" alt="image-20200415145414259"></p><p>如果询问一次得到结果  递归查询    C-S<br>如果询问多次得到结果  迭代查询    S-S </p><p>**一次递归 多次迭代 **</p><h2 id="5、dig工具使用"><a href="#5、dig工具使用" class="headerlink" title="5、dig工具使用"></a>5、dig工具使用</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># dig +trace www.itcast.cn  追踪DNS的解析过程# dig www.itcast.cn  正向解析# dig -x IP地址    反向解析<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="三、DNS服务器的搭建"><a href="#三、DNS服务器的搭建" class="headerlink" title="三、DNS服务器的搭建"></a>三、DNS服务器的搭建</h1><h2 id="1、DNS服务器端软件"><a href="#1、DNS服务器端软件" class="headerlink" title="1、DNS服务器端软件"></a>1、DNS服务器端软件</h2><p>DNS 的==域名解析==都是 <strong>==udp/53==</strong> . 主从之间的==数据传输==默认使用**==tcp/53==**</p><p>DNS服务器端软件：</p><p>==Bind==是一款开放源码的DNS服务器软件，Bind由美国加州大学Berkeley（伯克利）分校开发和维护的，全名为Berkeley Internet Name Domain它是目前世界上使用最为广泛的DNS服务器软件，支持各种unix平台和windows平台。BIND现在由互联网系统协会（Internet Systems Consortium）负责开发与维护。</p><h2 id="2、DNS服务器搭建"><a href="#2、DNS服务器搭建" class="headerlink" title="2、DNS服务器搭建"></a>2、DNS服务器搭建</h2><h3 id="☆-第一步：环境准备"><a href="#☆-第一步：环境准备" class="headerlink" title="☆ 第一步：环境准备"></a>☆ 第一步：环境准备</h3><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>备注信息</th></tr></thead><tbody><tr><td>1</td><td>client.itcast.cn</td><td>10.1.1.11</td><td>client客户端，用于测试</td></tr><tr><td>2</td><td>dns.itcast.cn</td><td>10.1.1.12</td><td>dns服务器，用于实现域名解析</td></tr><tr><td>3</td><td>web.itcast.cn</td><td>10.1.1.13</td><td>web服务器，用于搭建内部web服务</td></tr></tbody></table><p>① 更改主机名称与IP地址</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl set-hostname client.itcast.cn# hostnamectl set-hostname dns.itcast.cn# hostnamectl set-hostname web.itcast.cn# su# vim /etc/sysconfig/network-scripts/ifcfg-ens33BOOTPROTO=noneIPADDR=10.1.1.11/10.1.1.12/10.1.1.13更改UUID编号的后3位，必须是唯一的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>② 使用MX进行连接</p><p>③ 关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld# setenforce 0# vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>④ 配置YUM源（有网配置公网YUM源、无网就配置光盘或自建YUM源）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-第二步：安装DNS软件"><a href="#☆-第二步：安装DNS软件" class="headerlink" title="☆ 第二步：安装DNS软件"></a>☆ 第二步：安装DNS软件</h3><p>DNS服务器：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install bind -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完毕后，可以使用rpm  -q查询是否安装成功：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -q bind# rpm -ql bind# 日志轮转文件/etc/logrotate.d/named# 配置文件目录/etc/named# 主配置文件/etc/named.conf# zone文件,定义域/etc/named.rfc1912.zones# 服务管理脚本/usr/lib/systemd/system/named.service# 二进制程序文件/usr/sbin/named# 检测配置文件/usr/sbin/named-checkconf# 检测域文件/usr/sbin/named-checkzone# 根域服务器/var/named/named.ca# 正向解析区域文件模板/var/named/named.localhost# 反向解析区域文件模板/var/named/named.loopback# dns服务器下载文件的默认路径/var/named/slaves# 进程pid/var/rum/named<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>find主要用来搜索计算机中的文件，rpm主要用来检查计算机中是否安装过某个软件</p></blockquote><h3 id="☆-第三步：DNS正向解析配置-域名-IP"><a href="#☆-第三步：DNS正向解析配置-域名-IP" class="headerlink" title="☆ 第三步：DNS正向解析配置(域名=>IP)"></a>☆ 第三步：DNS正向解析配置(域名=&gt;IP)</h3><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415162454902.png" alt="image-20200415162454902"></p><p>/etc/named.conf主要配置访问权限控制（哪些IP或哪些主机可以访问DNS服务器）</p><p>/etc/named.rfc1912.zones主要定义域名如何解析（正向解析），解析到具体哪个IP地址</p><p>① 对named.conf以及named.rfc1912.zones进行备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cp /etc/named.conf /etc/named.conf.bakcp /etc/named.rfc1912.zones /etc/named.rfc1912.zones.bak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>② named.conf主配置文件详解（访问权限控制）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/named.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加任何主机都可以访问的权限：</p><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415163918871.png" alt="image-20200415163918871"></p><p>③ zones子配置文件详解（域名应该指向哪个IP地址）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/named.rfc1912.zones...zone "itcast.cluster" IN {        type master;        file "itcast.cluster.zone";        allow-update { none; };};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>扩展 =&gt; vim =&gt; ：19，23  co  42，把19-23行，copy到42行的后面</p></blockquote><p>④ 在/var/named目录创建itcast.cluster.zone文件定义正向解析</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /var/named# cp -p named.localhost itcast.cluster.zone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>扩展：-p代表复制文件时保留文件的原有属性</p></blockquote><p>⑤ 编辑itcast.cluster.zone文件，定义域名的指向</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim itcast.cluster.zone<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/SAMBA%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E4%B8%8EDNS%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1.assets/image-20200415170447838.png" alt="image-20200415170447838"></p><blockquote><p>扩展：zone文件的格式说明</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">zone文件详解# $TTL  缓存的生存周期# @ = zonename = itcast.com  当前域# IN  互联网# SOA 开始授权# NS  dns服务端nameserver# A   ipv4 正向# AAAA IPV6# CNAME 别名# MX  邮件交互记录  5 数字代表优先级 数字越小优先级越高# 0       ; serial    更新序列号# 1D      ; refresh   更新间隔（从服务器下载数据）# 1H      ; retry     失败重试# 1W      ; expire    区域文件的过期时间# 3H )    ; minimum   缓存的最小生存周期# D Day、H Hour、W Week<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-第四步：检查named-conf与zones文件"><a href="#☆-第四步：检查named-conf与zones文件" class="headerlink" title="☆ 第四步：检查named.conf与zones文件"></a>☆ 第四步：检查named.conf与zones文件</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># named-checkconf /etc/named.conf# named-checkconf /etc/named.rfc1912.zones检查itcast.cluster.zone文件# cd /var/named# named-checkzone itcast.cluster.zone itcast.cluster.zone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-第五步：启动DNS服务（named）"><a href="#☆-第五步：启动DNS服务（named）" class="headerlink" title="☆ 第五步：启动DNS服务（named）"></a>☆ 第五步：启动DNS服务（named）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart named# netstat -tnlp |grep named<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3、Web服务搭建"><a href="#3、Web服务搭建" class="headerlink" title="3、Web服务搭建"></a>3、Web服务搭建</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install httpd -y# systemctl start httpd# echo 'DNS Test ...' &gt; /var/www/html/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、测试DNS服务器的正向解析"><a href="#4、测试DNS服务器的正向解析" class="headerlink" title="4、测试DNS服务器的正向解析"></a>4、测试DNS服务器的正向解析</h2><p>Client：客户端服务器操作</p><h3 id="☆-添加DNS服务器"><a href="#☆-添加DNS服务器" class="headerlink" title="☆ 添加DNS服务器"></a>☆ 添加DNS服务器</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># 临时echo 'nameserver 10.1.1.12' &gt; /etc/resolv.conf注：电脑重启，网络刷新restart network，VMware挂起，临时DNS都会失效# 永久添加vim /etc/sysconfig/network-scripts/ifcfg-ens33DNS=10.1.1.12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-使用nslookup检测正向解析是否生效"><a href="#☆-使用nslookup检测正向解析是否生效" class="headerlink" title="☆ 使用nslookup检测正向解析是否生效"></a>☆ 使用nslookup检测正向解析是否生效</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># nslookup www.itcast.cluster<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-使用elinks命令行浏览器或curl来实现访问"><a href="#☆-使用elinks命令行浏览器或curl来实现访问" class="headerlink" title="☆ 使用elinks命令行浏览器或curl来实现访问"></a>☆ 使用elinks命令行浏览器或curl来实现访问</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install elinks -y# elinks输入www.itcast.cluster<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># curl http://www.itcast.cluster<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP、NFS以及SAMBA服务下</title>
      <link href="/2023/12/23/ftp-nfs-yi-ji-samba-fu-wu-xia/"/>
      <url>/2023/12/23/ftp-nfs-yi-ji-samba-fu-wu-xia/</url>
      
        <content type="html"><![CDATA[<h1 id="FTP、NFS以及SAMBA服务"><a href="#FTP、NFS以及SAMBA服务" class="headerlink" title="FTP、NFS以及SAMBA服务"></a>FTP、NFS以及SAMBA服务</h1><h1 id="一、FTP服务"><a href="#一、FTP服务" class="headerlink" title="一、FTP服务"></a>一、FTP服务</h1><h2 id="1、Linux下ftp客户端管理工具"><a href="#1、Linux下ftp客户端管理工具" class="headerlink" title="1、Linux下ftp客户端管理工具"></a>1、Linux下ftp客户端管理工具</h2><p>ftp、lftp都是Linux下ftp的客户端管理工具，但是需要独立安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install ftp lftp -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-ftp工具"><a href="#☆-ftp工具" class="headerlink" title="☆ ftp工具"></a>☆ ftp工具</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ftp 10.1.1.10Connected to 10.1.1.10 (10.1.1.10).220 (vsFTPd 3.0.2)Name (10.1.1.10:root): 输入FTP的账号331 Please specify the password.Password: 输入FTP账号对应的密码230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>求帮助：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ftp&gt; ?或helpCommands may be abbreviated.  Commands are:!               debug           mdir            sendport        site$               dir             mget            put             sizeaccount         disconnect      mkdir           pwd             statusappend          exit            mls             quit            structascii           form            mode            quote           systembell            get             modtime         recv            suniquebinary          glob            mput            reget           tenexbye             hash            newer           rstatus         tickcase            help            nmap            rhelp           tracecd              idle            nlist           rename          typecdup            image           ntrans          reset           userchmod           lcd             open            restart         umaskclose           ls              prompt          rmdir           verbosecr              macdef          passive         runique         ?delete          mdelete         proxy           send<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一个命令：ls命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ftp&gt; ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看当前连接的FTP目录下有哪些文件。</p><p>第二个命令（快捷键）：Ctrl  + Shift + L</p><p>Ctrl + Shift + L代表清屏命令</p><p>第三个命令：help命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ftp&gt; help putput             send one file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第四个命令：put与get命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ftp&gt; put 本地文件路径+名称 上传ftp&gt; get 远程文件路径+名称 下载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第五个命令：批量上传或下载多个文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ftp&gt; mput 文件名称1 文件名称2 文件名称3 ...ftp&gt; mget 文件名称1 文件名称2 文件名称3 ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第六个命令：prompt屏蔽批量输出信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ftp&gt; promptInteractive mode on.=&gt; 开启提示ftp&gt; promptInteractive mode off.=&gt; 关闭提示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第七个命令：quit命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ftp&gt; quit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-lftp工具：批量操作"><a href="#☆-lftp工具：批量操作" class="headerlink" title="☆ lftp工具：批量操作"></a>☆ lftp工具：批量操作</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># lftp 用户名称@远程IP地址Password:用户名称对应的密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>求帮助：help</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">lftp&gt; help<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>针对某个命令求帮助：help + 命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">lftp&gt; help mirror<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：批量上传（把shop文件夹上传到FTP服务器端）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">lftp&gt; mirror -R 本地文件夹名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：批量下载（把整个FTP下载到本地）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">lftp&gt; mirror 远程FTP路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、FTP知识点补充"><a href="#2、FTP知识点补充" class="headerlink" title="2、FTP知识点补充"></a>2、FTP知识点补充</h2><h3 id="☆-FTP访问对象控制（黑名单）"><a href="#☆-FTP访问对象控制（黑名单）" class="headerlink" title="☆ FTP访问对象控制（黑名单）"></a>☆ FTP访问对象控制（黑名单）</h3><p>ftpusers黑名单</p><p>user_list默认是黑名单（可以成为白名单）</p><p>案例：默认情况下，root账号是否允许登录FTP服务器</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@localhost ftp]# ftp 10.1.1.10Connected to 10.1.1.10 (10.1.1.10).220 (vsFTPd 3.0.2)Name (10.1.1.10:root): root530 Permission denied.Login failed.ftp&gt;原因：root用户在黑名单里/etc/vsftpd/ftpusers黑名单中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：ftpusers与       user_list黑名单效果不同点</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">ftpusers：[root@localhost ftp]# ftp 10.1.1.10Connected to 10.1.1.10 (10.1.1.10).220 (vsFTPd 3.0.2)Name (10.1.1.10:root): kefu331 Please specify the password.Password:530 Login incorrect.=&gt;       ftpusers被禁用，可以输入密码，返回530Login failed.user_list：[root@localhost ftp]# ftp 10.1.1.10Connected to 10.1.1.10 (10.1.1.10).220 (vsFTPd 3.0.2)Name (10.1.1.10:root): kefu530 Permission denied.Login failed.原因：默认情况下user_list文件也是黑名单，如果在该文件里直接拒绝，不给输入密码的机会。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：user_list可以从黑名单变成白名单（允许某个用户登录FTP系统服务器）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">user_list要成为白名单，需要再配置文件里增加：userlist_deny=NO注意：如果user_list是白名单，那么必须在该文件里的用户才可以访问ftp服务。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>总结：</p><ol><li>用户在ftpusers文件中，那么用户不能访问ftp服务器</li><li>用户在user_list文件中，如果该文件是白名单，那么==<strong>只</strong>==在该文件中的用户可以访问ftp服务</li><li>如果user_list文件是白名单，用户即在ftpusers中又在user_list中，那么ftpusers拒绝优先</li></ol><h3 id="☆-FTP网络访问控制（限IP-限速）"><a href="#☆-FTP网络访问控制（限IP-限速）" class="headerlink" title="☆ FTP网络访问控制（限IP+限速）"></a>☆ FTP网络访问控制（限IP+限速）</h3><p>FTP必须支持tcp_wrappers</p><p>/etc/hosts.allow 允许</p><p>/etc/hosts.deny  拒绝</p><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E4%BB%A5%E5%8F%8ASAMBA%E6%9C%8D%E5%8A%A1%E4%B8%8B.assets/image-20200413113242257.png" alt="image-20200413113242257"></p><h4 id="☆-限制IP地址"><a href="#☆-限制IP地址" class="headerlink" title="☆ 限制IP地址"></a>☆ 限制IP地址</h4><p>案例：如何禁止某个IP或IP网段</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/hosts.deny服务程序:主机vsftpd:all                        全部拒绝vsftpd:all EXCEPT 192.168.0.2    拒绝所有除了192.168.0.2  vsftpd:192.168.0.254  拒绝单个IP地址vsftpd:192.168.0.254:allow  //以上是允许192.168.0.254访问，类似/etc/hosts.allow里增加vsftpd:192.168.0.254vsftpd:192.168.0.0/255.255.255.0   拒绝某个网段vsftpd:192.168.0.0/255.255.255.0 EXCEPT 192.168.0.254   拒绝某个网段，但是除了某个ip地址注意：子网掩码不支持192.168.0.0/24这种写法vim /etc/hosts.denyvsftpd,sshd:10.1.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：如何判断某个服务是否支持tcp_wrappers</p><p>1）./configure ==–enable-libwrap==  表示支持tcp_wrappers访问控制（源码安装看配置项）</p><p>2）rpm安装(也包括yum安装)</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ldd命令 +二进制程序，查询某个软件包含哪些模块<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：查询vsftpd与sshd是否支持tcp_wrappers</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ldd /usr/sbin/vsftpd |grep libwrap*libwrap.so.0 =&gt; /lib64/libwrap.so.0 (0x00007f2956480000)# ldd /usr/sbin/sshd |grep libwrap*libwrap.so.0 =&gt; /lib64/libwrap.so.0 (0x00007f015ff29000)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="☆-限制FTP流量"><a href="#☆-限制FTP流量" class="headerlink" title="☆ 限制FTP流量"></a>☆ 限制FTP流量</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/vsftpd/vsftpd.conflocal_max_rate=00代表不限速local_max_rate=数值 + 字节<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、使用第三方平台视频"><a href="#3、使用第三方平台视频" class="headerlink" title="3、使用第三方平台视频"></a>3、使用第三方平台视频</h2><p>第一步：在Linux电脑中安装httpd（阿帕奇）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install httpd -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：启动httpd</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start httpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：在/var/www/html项目目录中创建一个demo.html文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /var/www/html/demo.html&lt;iframe height=498 width=815 src='https://player.youku.com/embed/XNDU4OTM3NzM0NA==' frameborder=0 'allowfullscreen'&gt;&lt;/iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="二、NFS服务概述"><a href="#二、NFS服务概述" class="headerlink" title="二、NFS服务概述"></a>二、NFS服务概述</h1><h2 id="1、任务背景"><a href="#1、任务背景" class="headerlink" title="1、任务背景"></a>1、任务背景</h2><p>① 搭建NFS服务器（用于静态资源的存储如图片、视频、附件）</p><p>② 使用mount指定对NFS服务器进行挂载，挂载到Web服务器中</p><p>③ 对NFS服务器中的静态资源进行实时备份（inotify + rsync）</p><h2 id="2、环境准备"><a href="#2、环境准备" class="headerlink" title="2、环境准备"></a>2、环境准备</h2><table><thead><tr><th>编号</th><th>主机名称FQDN</th><th>IP地址</th><th>作用</th></tr></thead><tbody><tr><td>1</td><td>web.itcast.cn</td><td>10.1.1.11</td><td>Web服务器</td></tr><tr><td>2</td><td>nfs.itcast.cn</td><td>10.1.1.12</td><td>NFS服务器</td></tr><tr><td>3</td><td>backup.itcast.cn</td><td>10.1.1.13</td><td>Backup服务器</td></tr></tbody></table><p>第一步：设置计算机的在主机名称</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Web# hostnamectl set-hostname web.itcast.cnNFS# hostnamectl set-hostname nfs.itcast.cnBackup# hostnamectl set-hostname backup.itcast.cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：设置IP地址</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/sysconfig/network-scripts/ifcfg-ens33BOOTPROTO=noneIPADDR=10.1.1.11   /10.1.1.13   /10.1.1.13NETMASK=255.255.255.0GATEWAY=10.1.1.2DNS1=119.29.29.29DNS2=114.114.114.114UUID必须是唯一的，所以要么删除，要么更改UUID的值（更改后3位）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">关闭防火墙# systemctl stop firewalld# systemctl disable firewalld关闭SELinux# setenforce 0# vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：配置YUM源</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum clean all# yum mackecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3、NFS概述"><a href="#3、NFS概述" class="headerlink" title="3、NFS概述"></a>3、NFS概述</h2><p>NFS（Network File System）网络文件系统，主要用于<strong>Linux系统</strong>上实现文件共享的一种协议，其客户端<strong>主要是Linux</strong></p><p><strong>没有用户认证机制</strong>，且数据在网络上传送的时候是<strong>明文传送</strong>，一般只能在<strong>局域网</strong>中使用</p><p>支持多节点同时挂载及并发写入</p><p><strong>企业应用：为集群中的web server提供后端存储</strong>(做静态资源服务器)</p><h2 id="4、NFS组成"><a href="#4、NFS组成" class="headerlink" title="4、NFS组成"></a>4、NFS组成</h2><p>rpcbind ： 负责NFS的数据传输，远程过程调用  ==tcp/udp协议 端口111==</p><p>nfs-utils ：控制共享哪些文件，权限管理</p><blockquote><p>RPC（Remote Procedure Call Protocol）：<br>远程过程调用协议，它是一种通过网络从远程计算机程序上请求服务，不需要了解底层网络技术的协议。</p></blockquote><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E4%BB%A5%E5%8F%8ASAMBA%E6%9C%8D%E5%8A%A1%E4%B8%8B.assets/image-20200413154315842.png" alt="image-20200413154315842"></p><h2 id="5、与NFS相关的软件包"><a href="#5、与NFS相关的软件包" class="headerlink" title="5、与NFS相关的软件包"></a>5、与NFS相关的软件包</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">nfs-utils-1.2.3-26.el6.x86_64 nfs服务的一个脚本控制工具（服务端与客户端）nfs4-acl-tools-0.3.3-6.el6.x86_64acl 工具包nfs-utils-lib-1.1.5-4.el6.x86_64  nfs 库文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="6、安装NFS软件"><a href="#6、安装NFS软件" class="headerlink" title="6、安装NFS软件"></a>6、安装NFS软件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install rpcbind nfs-utils -y# rpm -q rpcbind# rpm -aq|grep ^nfs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、NFS的配置文件"><a href="#7、NFS的配置文件" class="headerlink" title="7、NFS的配置文件"></a>7、NFS的配置文件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/exports共享目录   共享选项/share    *(ro,sync)/public  *(ro,sync)共享主机：*   ：代表所有主机192.168.0.0/24：代表共享给某个网段192.168.0.1 ~ 192.168.0.254192.168.0.0/24(rw) 192.168.1.0/24(ro) :代表共享给不同网段192.168.0.254：共享给某个IP*.itcast.cn:代表共享给某个域下的所有主机共享选项：ro：只读rw：读写sync：实时同步，直接写入磁盘(安全性最高)async：异步，先缓存数据在内存然后再同步磁盘(效率最高，但是有丢失文件风险)anonuid：设置访问nfs服务的用户的uid，uid需要在/etc/passwd中存在anongid：设置访问nfs服务的用户的gidroot_squash ：默认选项 root用户创建的文件的属主和属组都变成nfsnobody,其他人nfs-server端是它自己，client端是nobody。(访问NFS服务器时，映射为匿名账号)no_root_squash：root用户创建的文件属主和属组还是root，其他人server端是它自己uid，client端是nobody。(访问NFS服务器时，映射为root管理员账号)all_squash： 不管是root还是其他普通用户创建的文件的属主和属组都是nfsnobody说明：anonuid和anongid参数和all_squash一起使用。all_squash表示不管是root还是其他普通用户从客户端所创建的文件在服务器端的拥有者和所属组都是nfsnobody；服务端为了对文件做相应管理，可以设置anonuid和anongid进而指定文件的拥有者和所属组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、NFS任务解决方案"><a href="#三、NFS任务解决方案" class="headerlink" title="三、NFS任务解决方案"></a>三、NFS任务解决方案</h1><h2 id="1、搭建NFS服务器"><a href="#1、搭建NFS服务器" class="headerlink" title="1、搭建NFS服务器"></a>1、搭建NFS服务器</h2><p>第一步：安装软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install rpcbind nfs-utils -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：创建一个共享目录，如/share</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /share<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、编写NFS主配置文件"><a href="#2、编写NFS主配置文件" class="headerlink" title="2、编写NFS主配置文件"></a>2、编写NFS主配置文件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/exports共享目录   共享选项/share    10.1.1.0/24(rw,sync)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3、启动相关的NFS服务"><a href="#3、启动相关的NFS服务" class="headerlink" title="3、启动相关的NFS服务"></a>3、启动相关的NFS服务</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start rpcbind# systemctl start nfs# ss -naltp |grep 111       111端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、搭建Web服务器"><a href="#4、搭建Web服务器" class="headerlink" title="4、搭建Web服务器"></a>4、搭建Web服务器</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install httpd -y# systemctl start httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当Apache软件启动完毕后，会自动占用计算机的80端口。</p><p>80端口指向Web服务器的目录 =&gt; /var/www/html</p><p>所以项目源代码都可以直接存放于/var/www/html目录下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo "NFS实战演练" &gt; /var/www/html/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、在Web服务器中挂载NFS"><a href="#5、在Web服务器中挂载NFS" class="headerlink" title="5、在Web服务器中挂载NFS"></a>5、在Web服务器中挂载NFS</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /var/www/html/media# mount -t nfs 10.1.1.12:/share /var/www/html/media 或# mount.nfs 10.1.1.12:/share /var/www/html/media# df -hFilesystem               Size  Used Avail Use% Mounted on/dev/mapper/centos-root   17G  5.1G   12G  30% /devtmpfs                 894M     0  894M   0% /devtmpfs                    910M     0  910M   0% /dev/shmtmpfs                    910M   11M  900M   2% /runtmpfs                    910M     0  910M   0% /sys/fs/cgroup/dev/sda1               1014M  179M  836M  18% /boottmpfs                    182M   28K  182M   1% /run/user/1000/dev/sr0                 4.3G  4.3G     0 100% /run/media/itheima/CentOS 7 x86_64tmpfs                    182M     0  182M   0% /run/user/010.1.1.12:/share          17G  5.1G   12G  30% /var/www/html/media如果客户端没有安装nfs工具可能导致挂载失败：yum -y install nfs-utils nfs-utils-lib nfs4-acl-tools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6、上传aws-mp4视频到NFS服务器的-share"><a href="#6、上传aws-mp4视频到NFS服务器的-share" class="headerlink" title="6、上传aws.mp4视频到NFS服务器的/share"></a>6、上传aws.mp4视频到NFS服务器的/share</h2><p>第一步：使用MX上传aws.mp4到/share目录（NFS服务器）</p><p>第二步：在Web服务器中，ll  /var/www/html/media目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ll /var/www/html/mediaaws.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7、在html网页中调用aws-mp4文件"><a href="#7、在html网页中调用aws-mp4文件" class="headerlink" title="7、在html网页中调用aws.mp4文件"></a>7、在html网页中调用aws.mp4文件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /var/www/html/index.html&lt;video width="800" height="450" controls&gt;&lt;source src="media/aws.mp4"&gt;&lt;/video&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8、对NFS服务器进行实时备份"><a href="#8、对NFS服务器进行实时备份" class="headerlink" title="8、对NFS服务器进行实时备份"></a>8、对NFS服务器进行实时备份</h2><p>NFS服务器：/share目录有变化，马上rsync进行同步Backup备份服务器的/backup目录</p><p>第一步：安装inotify工具(NFS服务器)</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar xf inotify-tools-3.14.tar.gz# cd inotify-tools-3.14# ./configure &amp;&amp; make &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：编写rsync.sh脚本，监控/share目录的变化</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim rsync.sh#!/bin/bash/usr/local/bin/inotifywait -mrq -e modify,delete,create,attrib,move /share |while read eventsdo    rsync -a --delete /share/ 10.1.1.13:/backup/    echo "`date +%F\ %T`出现事件$events" &gt;&gt; /var/log/rsync.log 2&gt;&amp;1done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：给rsync添加x权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod +x rsync.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：把NFS服务器与Backup备份服务器进行免密登录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh-keygen# ssh-copy-id root@10.1.1.13<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第五步：在Backup服务器中创建一个/backup目录，用于实时备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /backup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第六步：在NFS服务器中执行rsync脚本</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># nohup ./rsync.sh &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP、NFS、SAMBA系统服务上</title>
      <link href="/2023/12/23/ftp-nfs-samba-xi-tong-fu-wu-shang/"/>
      <url>/2023/12/23/ftp-nfs-samba-xi-tong-fu-wu-shang/</url>
      
        <content type="html"><![CDATA[<h1 id="FTP、NFS、SAMBA系统服务"><a href="#FTP、NFS、SAMBA系统服务" class="headerlink" title="FTP、NFS、SAMBA系统服务"></a>FTP、NFS、SAMBA系统服务</h1><h1 id="一、rsync托管xinetd"><a href="#一、rsync托管xinetd" class="headerlink" title="一、rsync托管xinetd"></a>一、rsync托管xinetd</h1><h2 id="1、为什么要进行服务托管"><a href="#1、为什么要进行服务托管" class="headerlink" title="1、为什么要进行服务托管"></a>1、为什么要进行服务托管</h2><p>独立服务：独立启动脚本  ssh  ftp nfs dns …</p><p>依赖服务:   没有独立的启动脚本   rsync telnet  依赖xinetd服务（独立服务）</p><h2 id="2、如何将rsync托管给xinetd服务去管理？"><a href="#2、如何将rsync托管给xinetd服务去管理？" class="headerlink" title="2、如何将rsync托管给xinetd服务去管理？"></a>2、如何将rsync托管给xinetd服务去管理？</h2><p>第一步：在系统中安装xinetd服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum -y install xinetd# rpm -ql xinetd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：编写xinetd.conf文件（/etc/xinetd.conf）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man 5 xinetd.confdefaults{only_from只允许访问no_access拒绝访问access_times控制访问服务的时间段log_type指定日志类型interface并发连接数per_source每个IP的最大连接数}includedir /etc/xinetd.d子配置文件目录（追加rsync、telnet）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：手工创建/etc/xinetd.d/rsync</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/xinetd.d/rsyncservice rsync{disable = noflags = IPv6socket_type = streamwait = nouser = rootserver = /usr/bin/rsyncserver_args = --daemonlog_on_failure += USERID}备注:disable = no //开关；no表示开启该服务；yes表示关闭服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：重启xinetd服务（xinetd服务重启后，rsync服务也会随之重启，检查端口占用）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># pkill rsync# systemctl restart xinetd# ss -naltp |grep 873LISTEN     :::873      users:(("xinetd",pid=45079,fd=5))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在查询873端口占用时，发现只有xinetd服务，没有rsync服务，原因：rsync =&gt; xinetd</p></blockquote><p>常见问题（经验值）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">如果我们在启动xinetd服务时，发现系统中的873端口一直没有被占用，只能有一个问题：配置文件有错误！解决方案：cat /var/log/messages一定要注意颜色的变化，有颜色变化代表是正确选项，没有，就肯定你在复制时惨咋了一些看不见的字符。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="二、FTP服务概述"><a href="#二、FTP服务概述" class="headerlink" title="二、FTP服务概述"></a>二、FTP服务概述</h1><h2 id="1、FTP服务介绍"><a href="#1、FTP服务介绍" class="headerlink" title="1、FTP服务介绍"></a>1、FTP服务介绍</h2><p>FTP（File Transfer Protocol）是一种应用非常广泛并且古老的一个互联网文件传输协议。</p><blockquote><p>文件传输：文件上传与文件下载</p></blockquote><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412105703919.png" alt="image-20200412105703919"></p><ul><li>主要用于互联网中==文件的双向传输==（上传/下载）、文件共享</li><li>跨平台   Linux、Windows</li><li>FTP是==C/S==架构，拥有一个客户端和服务端，使用==TCP协议==作为底层传输协议，提供可靠的数据传输</li><li>FTP的默认端口 ==21号==（命令端口）    ==20号==（数据端口，主动模式下） <strong>默认被动模式</strong>下</li><li>FTP程序（软件）**==vsftpd==**</li></ul><blockquote><p>FTP软件名称 =&gt; vsftpd =&gt; vs（very secure ftp daemon） </p></blockquote><h2 id="2、FTP服务的客户端工具"><a href="#2、FTP服务的客户端工具" class="headerlink" title="2、FTP服务的客户端工具"></a>2、FTP服务的客户端工具</h2><ul><li>Linux：ftp、lftp（客户端程序）</li><li>Windows：FlashFXP(虚拟主机)、FileZilla、IE、Chrome、Firefox</li><li>lftp和ftp工具区别：<ul><li>lftp：默认是以==匿名用户==访问</li><li>ftp：默认是以==用户名/密码==方式访问</li><li>lftp可以批量并且下载目录</li></ul></li></ul><h2 id="3、FTP的两种运行模式（了解）"><a href="#3、FTP的两种运行模式（了解）" class="headerlink" title="3、FTP的两种运行模式（了解）"></a>3、FTP的两种运行模式（了解）</h2><p>在FTP服务中，其一共拥有两种模式（主动模式 + 被动模式）</p><blockquote><p>参考点，FTP的服务器端。如果是FTP服务器端主动连接客户端=&gt;主动模式，如果是客户端主动连接FTP服务器端=&gt;被动模式。</p></blockquote><h3 id="☆-主动模式"><a href="#☆-主动模式" class="headerlink" title="☆ 主动模式"></a>☆ 主动模式</h3><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412114935141.png" alt="image-20200412114935141"></p><p>cmd：命令端口（发送FTP请求）</p><p>data：数据端口（后期用于传输数据）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">1. 客户端打开大于1023的随机命令端口和大于1023的随机数据端口向服务的的21号端口发起请求2. 服务端的21号命令端口响应客户端的随机命令端口3. 服务端的20号端口主动请求连接客户端的随机数据端口4. 客户端的随机数据端口进行确认<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-被动模式"><a href="#☆-被动模式" class="headerlink" title="☆ 被动模式"></a>☆ 被动模式</h3><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412120219384.png" alt="image-20200412120219384"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">1. 客户端打开大于1023的随机命令端口和大于1023的随机数据端口向服务的的21号端口发起请求2. 服务端的21号命令端口响应客户端的随机命令端口3. 客户端主动连接服务端打开的大于1023的随机数据端口4. 服务端进行确认<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>FTP默认使用的就是被动模式！</p><h2 id="4、搭建FTP服务（重要）"><a href="#4、搭建FTP服务（重要）" class="headerlink" title="4、搭建FTP服务（重要）"></a>4、搭建FTP服务（重要）</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">1. 关闭防火墙和selinux2. 配置yum源(mount /dev/sr0 /mnt)3. 软件三部曲4. 了解配置文件5. 根据需求修改配置文件来完成服务的搭建6. 启动服务，开机自启动7. 测试验证<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一步：关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld# setenforce 0# vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：配置YUM源</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">有网配置公网YUM源（阿里、清华、华为），没网就配置本地YUM源# mount /dev/sr0 /mnt# yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：安装vsftpd软件（FTP =&gt; vsftpd）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install vsftpd -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：启动ftp服务并添加到开机启动项中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start vsftpd# systemctl enable vsftpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第五步：测试FTP是否安装成功</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ifconfig ens33inet 10.1.1.10  netmask 255.255.255.0  broadcast 10.1.1.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>☆ 基于浏览器的访问</p><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412141644833.png" alt="image-20200412141644833"></p><p>☆ 基于Windows资源管理器的访问</p><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412142019101.png" alt="image-20200412142019101"></p><p>☆ 基于FlashFxp、FileZilla软件</p><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412142522460.png" alt="image-20200412142522460"></p><p>☆ 基于ftp以及lftp命令进行连接（Linux与Linux之间的FTP文件传输）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"> yum install ftp lftp -y# ftp 10.1.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5、FTP的配置文件详解（重要）"><a href="#5、FTP的配置文件详解（重要）" class="headerlink" title="5、FTP的配置文件详解（重要）"></a>5、FTP的配置文件详解（重要）</h2><p>在Server服务器端，使用rpm  -ql  vsftpd</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ql vsftpd/usr/lib/systemd/system/vsftpd.service启动脚本/etc/vsftpd配置文件的目录/etc/vsftpd/ftpusers    用户列表文件，黑名单/etc/vsftpd/user_list    用户列表文件，可黑可白（默认是黑名单）/etc/vsftpd/vsftpd.conf配置文件(主配置文件)/usr/sbin/vsftpd程序本身（二进制的命令）/var/ftp匿名用户的默认数据根目录/var/ftp/pub匿名用户的扩展数据目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>vsftpd配置文件详解：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep -v ^# /etc/vsftpd/vsftpd.confanonymous_enable=YES支持匿名用户访问local_enable=YES支持非匿名用户,普通账号登录，默认进入到自己家目录write_enable=YES写总开关local_umask=022反掩码  file:644  rw- r-- r-- dir:755dirmessage_enable=YES启用消息功能xferlog_enable=YES开启或启用xferlog日志connect_from_port_20=YES支持主动模式（默认被动模式）xferlog_std_format=YESxferlog日志格式listen=YES    ftp服务独立模式下的监听pam_service_name=vsftpd指定认证文件userlist_enable=YES启用用户列表tcp_wrappers=YES支持tcp_wrappers功能(FTP限速操作)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p># man  5  vsftpd.conf </p></blockquote><h1 id="三、FTP任务解决方案"><a href="#三、FTP任务解决方案" class="headerlink" title="三、FTP任务解决方案"></a>三、FTP任务解决方案</h1><h2 id="1、任务背景"><a href="#1、任务背景" class="headerlink" title="1、任务背景"></a>1、任务背景</h2><p>简单来说：根据我们所学的内容（FTP）搭建一个客户服务系统（主要涉及客服资料上传与下载）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">1. 客服人员必须使用用户名密码(kefu/123)的方式登录服务器来下载相应文档2. 不允许匿名用户访问3. 客服部门的相关文档保存在指定的目录里/data/kefu    local_root=/data/kefu4. 客服用户使用用户kefu/123登录后就只能在默认的/data/kefu目录里活动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、创建客服账号-Server"><a href="#2、创建客服账号-Server" class="headerlink" title="2、创建客服账号(Server)"></a>2、创建客服账号(Server)</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd kefu# echo 123 |passwd --stdin kefu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3、不允许匿名用户访问"><a href="#3、不允许匿名用户访问" class="headerlink" title="3、不允许匿名用户访问"></a>3、不允许匿名用户访问</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/vsftpd/vsftpd.conf12行 anonymous_enable=NO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置修改完毕后，一定要重启vsftpd服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart vsftpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、指定账号访问的目录"><a href="#4、指定账号访问的目录" class="headerlink" title="4、指定账号访问的目录"></a>4、指定账号访问的目录</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /data/kefu -p# vim /etc/vsftpd/vsftpd.conf17行 local_root=/data/kefu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5、限定kefu-123只能在-data-kefu目录下活动"><a href="#5、限定kefu-123只能在-data-kefu目录下活动" class="headerlink" title="5、限定kefu/123只能在/data/kefu目录下活动"></a>5、限定kefu/123只能在/data/kefu目录下活动</h2><p>禁锢kefu用户只能在/data/kefu目录下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/vsftp/vsftpd.conf18行 chroot_local_user=YES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置修改完毕后，一定要重启vsftpd服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart vsftpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="四、经验值"><a href="#四、经验值" class="headerlink" title="四、经验值"></a>四、经验值</h1><h2 id="1、500-OOPS"><a href="#1、500-OOPS" class="headerlink" title="1、500 OOPS"></a>1、500 OOPS</h2><p><img src="/../assets/blog_res/FTP%E3%80%81NFS%E3%80%81SAMBA%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1.assets/image-20200412171758761.png" alt="image-20200412171758761"></p><p>以上问题主要出现在FTP2.3.5以后的版本中，当然你可以使用</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qi vsftpd 查看版本信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解决方案：</p><p>① 去除写权限（治标不治本）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod a-w /home/dhj<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>② 核心解决方案，添加一个选项</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/vsftpd/vsftpd.conf19行 allow_writeable_chroot=YES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2、无法上传"><a href="#2、无法上传" class="headerlink" title="2、无法上传"></a>2、无法上传</h2><p>之所以无法上传，主要原因在于kefu这个账号对于/data/kefu文件夹没有w写权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -R -m u:kefu:rwx /data/kefu# systemctl restart vsftpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3、禁锢目录补充"><a href="#3、禁锢目录补充" class="headerlink" title="3、禁锢目录补充"></a>3、禁锢目录补充</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">18行 chroot_local_user=YES  禁锢所有用户<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需求：我们能不能给一小部分用户开通非禁锢权限。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/vsftpd/vsftpd.conf105行 chroot_list_enable=YES    开启用户列表文件107行 chroot_list_file=/etc/vsftpd/chroot_list指定用户列表文件echo kefu &gt;&gt; /etc/vsftpd/chroot_list        代表客服这个账号不会被禁锢在指定目录# systemctl restart vsftpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统下数据同步服务RSYNC</title>
      <link href="/2023/12/23/linux-xi-tong-xia-shu-ju-tong-bu-fu-wu-rsync/"/>
      <url>/2023/12/23/linux-xi-tong-xia-shu-ju-tong-bu-fu-wu-rsync/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统下数据同步服务RSYNC"><a href="#Linux系统下数据同步服务RSYNC" class="headerlink" title="Linux系统下数据同步服务RSYNC"></a>Linux系统下数据同步服务RSYNC</h1><h1 id="一、RSYNC概述"><a href="#一、RSYNC概述" class="headerlink" title="一、RSYNC概述"></a>一、RSYNC概述</h1><h2 id="1、什么是rsync"><a href="#1、什么是rsync" class="headerlink" title="1、什么是rsync"></a>1、什么是rsync</h2><p>rsync的好姐妹</p><ul><li>sync 同步：刷新文件系统缓存，强制将修改过的数据块写入磁盘，并且更新超级块。</li><li>async 异步：将数据先放到缓冲区，再周期性（一般是30s）的去同步到磁盘。</li><li>rsync 远程同步：==remote  synchronous==</li></ul><p>数据同步过程</p><p>sync数据同步 =&gt; 保存文件（目标）=&gt; 强制把缓存中的数据写入磁盘（立即保存），实时性要求比较高的场景</p><p>asyn数据异步 =&gt; 保存文件（目标）=&gt; 将数据先放到缓冲区，再周期性（一般是30s）的去同步到磁盘，适合大批量数据同步的场景</p><h2 id="2、rsync特点"><a href="#2、rsync特点" class="headerlink" title="2、rsync特点"></a>2、rsync特点</h2><ul><li><p>可以镜像保存整个目录树和文件系统</p></li><li><p>可以保留原有的权限(permission,mode)，owner,group,时间(修改时间,modify time)，软硬链接，文件acl，文件属性(attributes)信息等</p></li><li><p>传输==效率高==，使用同步算法，只比较变化的（增量备份）</p><p>file1.txt file2.txt file3.txt(A服务器)</p><p>rsync实现数据同步=&gt;  只同步file3.txt =&gt; 增量备份</p><p>file1.txt file2.txt(B服务器)</p></li><li><p>支持匿名传输，方便网站镜像；也可以做验证，加强安全</p></li></ul><h2 id="3、rsync与scp的区别"><a href="#3、rsync与scp的区别" class="headerlink" title="3、rsync与scp的区别"></a>3、rsync与scp的区别</h2><p>两者都可以实现远程同步，但是相对比而言，rsync能力更强</p><p>① 支持增量备份<br>② 数据同步时保持文件的原有属性</p><h1 id="二、RSYNC的使用"><a href="#二、RSYNC的使用" class="headerlink" title="二、RSYNC的使用"></a>二、RSYNC的使用</h1><h2 id="1、基本语法"><a href="#1、基本语法" class="headerlink" title="1、基本语法"></a>1、基本语法</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man rsyncNAME       rsync — a fast, versatile, remote (and local) file-copying tool       //一种快速、通用、远程（和本地）的文件复制工具SYNOPSIS   //本地文件同步   Local:rsync [OPTION...] SRC... [DEST]   //远程文件同步       Access via remote shell:         Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]         Push: rsync [OPTION...] SRC... [USER@]HOST:DEST        OPTION选项说明-v    详细模式输出-a    归档模式，递归的方式传输文件，并保持文件的属性，equals -rlptgoD-r    递归拷贝目录-l保留软链接-p    保留原有权限-t     保留原有时间（修改）-g    保留属组权限-o     保留属主权限-D    等于--devices  --specials    表示支持b,c,s,p类型的文件-R    保留相对路径-H    保留硬链接-A    保留ACL策略-e     指定要执行的远程shell命令，ssh更改端口常用选项-E     保留可执行权限-X     保留扩展属性信息  a属性<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>PUSH：推，相当于上传；PULL：拉，相当于下载</p></blockquote><h2 id="2、本地文件同步"><a href="#2、本地文件同步" class="headerlink" title="2、本地文件同步"></a>2、本地文件同步</h2><p>本地文件同步简单理解就是把文件从一个位置（同步=&gt;拷贝）到另外一个位置（类似cp）</p><p>案例：/dir1、/dir2与/dir3，/dir1中创建三个文件file1、file2、file3，使用rsync本地同步</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /dir1# mkdir /dir2# mkdir /dir3# touch /dir1/file{1..3}# rsync -av /dir1/ /dir2=&gt;   把/dir1目录中的所有文件拷贝到/dir2目录中# rsync -av /dir1 /dir3=&gt;   把/dir1目录整体同步到/dir3目录中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：rsync -R选项的应用（保留相对路径）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -avR /dir1/ /dir2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：rsync –delete（删除目标目录里多余的文件）</p><p>/dir1    ===  /dir2</p><p>file1、file2 file1、file2、file3</p><p>rsync –delete同步后，会自动删除file3文件。（让dir1与dir2目录中的文件高度一致）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av --delete /dir1/ /dir2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、远程文件同步"><a href="#3、远程文件同步" class="headerlink" title="3、远程文件同步"></a>3、远程文件同步</h2><p>Push：上传文件到远程服务器端</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av 本地文件或目录 远程用户名@远程服务器的IP地址:目标路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把linux.txt文档传输到远程服务器端（10.1.1.100）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av linux.txt <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把shop文件夹传输到远程服务器端（10.1.1.100）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av shop root@10.1.1.100:/root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Pull：下载文件到本地服务器端</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av 远程用户名@远程服务器的IP:目标文件或目录 本地存储位置<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把远程服务器（10.1.1.100）的/etc/hosts文件下载到本地</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av root@10.1.1.100:/etc/hosts ./<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把远程服务器（10.1.1.100）的/shop文件夹下载到本地</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av root@10.1.1.100:/shop ./<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>思考：</strong></p><p>问题1：rsync远程同步数据时，默认情况下为什么需要密码？如果不想要密码同步怎么实现？</p><p>rsync在远程同步时，之所以要输入密码的主要原因在于其底层还是基于SSH服务的。SSH有两种认证方式，如果没有配置免密则默认使用用户名+密码的认证方式。</p><p>不想要密码同步，可以考虑使用SSH免密操作。</p><p>Code =&gt; Backup</p><p>Code：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh-keygen -t rsa -P ""# ssh-copy-id root@10.1.1.100<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>问题2：如果Backup服务器端更改了SSH的默认密码，那这个数据该如何？</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">#  rsync -e "ssh -p 10086" -av rsync.txt root@10.1.1.100:/root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、rsync作为系统服务"><a href="#4、rsync作为系统服务" class="headerlink" title="4、rsync作为系统服务"></a>4、rsync作为系统服务</h2><p>默认情况下，rsync只是作为一个命令来进行使用的（ps在查询进程时，找不到对应的服务），但是rsync提供了一种作为系统服务的实现方式。</p><p>Linux系统服务的思路：</p><p>对外提供服务——&gt;端口监听——&gt;==启动服务==——&gt;启动脚本——&gt;配置文件</p><p>第一步：启动rsyncd服务（CentOS6中没有，CentOS7中有这个服务）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start rsyncd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果企业中使用到操作系统为CentOS6版本，则没有启动脚本。必须求帮助：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man rsync# rsync --helpUse "rsync --daemon --help" to see the daemon-mode command-line options.CentOS6：rsync作为系统服务# touch /etc/rsyncd.conf# rsync --daemon# ps -ef|grep rsync# netstat -tunlp |grep rsync=&gt;  -t tcp  -u udp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：如果rsync作为系统服务单独运行，则其底层就不需要SSH服务了！</p></blockquote><p>第二步：rsyncd服务的配置文件/etc/rsyncd.conf</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man 5 rsyncd.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1RSYNC.assets/image-20200525153441596.png" alt="image-20200525153441596"></p><h1 id="三、任务解决方案-重点"><a href="#三、任务解决方案-重点" class="headerlink" title="三、任务解决方案(重点)"></a>三、任务解决方案(重点)</h1><h2 id="1、环境准备"><a href="#1、环境准备" class="headerlink" title="1、环境准备"></a>1、环境准备</h2><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1RSYNC.assets/image-20200525111900826.png" alt="image-20200525111900826"></p><table><thead><tr><th>编号</th><th>IP地址</th><th>主机名称</th><th>角色</th></tr></thead><tbody><tr><td>1</td><td>10.1.1.10</td><td>code.itcast.cn</td><td>Code（MIS）</td></tr><tr><td>2</td><td>10.1.1.100</td><td>backup.itcast.cn</td><td>Backup（Backup）</td></tr></tbody></table><p>第一步：关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld# setenforce 0# vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：更改主机名称</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl set-hostname code.itcast.cn# hostnamectl set-hostname backup.itcast.cn# su<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：更改IP地址（静态IP）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/sysconfig/network-scripts/ifcfg-ens33TYPE="Ethernet"BOOTPROTO="none"IPADDR=10.1.1.10NETMASK=255.255.255.0GATEWAY=10.1.1.2DNS1=8.8.8.8DNS2=114.114.114.114NAME="ens33"UUID="a5bb176c-c05c-4bdb-8975-a4aafa2fc90u"=&gt;    更改UUID的后3位DEVICE="ens33"ONBOOT="yes"# vim /etc/sysconfig/network-scripts/ifcfg-ens33TYPE="Ethernet"BOOTPROTO="none"IPADDR=10.1.1.100NETMASK=255.255.255.0GATEWAY=10.1.1.2DNS1=8.8.8.8DNS2=114.114.114.114NAME="ens33"UUID="a5bb176c-c05c-4bdb-8975-a4aafa2fc56y"=&gt;    更改UUID的后3位DEVICE="ens33"ONBOOT="yes"# systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：关闭NetworkManager</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop NetworkManager# systemctl disable NetworkManager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第五步：配置YUM源</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">略<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第六步：时间同步</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate cn.ntp.org.cn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、任务解决方案"><a href="#2、任务解决方案" class="headerlink" title="2、任务解决方案"></a>2、任务解决方案</h2><p>==Code：10.1.1.10服务器==</p><p>第一步：准备代码文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /app/java_project -p# mkdir /app/java_project/aa{1..3}# touch /app/java_project/file{1..9}.java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：把rsync作为系统服务运行</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/rsyncd.conf[app]path=/app/java_projectlog file=/var/log/rsync.log# systemctl start rsyncd# ps -ef |grep rsync# netstat -tnlp |grep rsync<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==Backup：10.1.1.100==</p><p>第三步：创建备份目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /backup/app1_java -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：测试rsync是否可以连接到rsync服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -a root@10.1.1.10::app-a：获取rsync服务对应的同步目录标签<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>下载文件到本地</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av root@10.1.1.10::app /backup/app1_java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第五步：编写计划任务 + Shell的脚本文件，自动实现代码备份</p><p>① 编写计划任务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab -e3 1 * * * /root/rsync_java.sh <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>② 编写rsync_java.sh脚本程序</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim rsync_java.sh#!/bin/bashrsync -av root@10.1.1.10::app /backup/app1_java &amp;&gt;/dev/null# chmod +x rsync_java.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、任务总结"><a href="#3、任务总结" class="headerlink" title="3、任务总结"></a>3、任务总结</h2><p>Code代码服务器 =&gt; 10.1.1.10/app/java_project</p><p>Backup备份服务器 =&gt; 10.1.1.100</p><p>Code：</p><p>① 准备代码</p><p>② 编写/etc/rsyncd.conf文件，定义同步代码目录</p><p>③ 启动rsyncd服务</p><p>Backup：</p><p>① 测试rsync是否可以连接到Code服务器上的rsyncd服务</p><p>② 创建备份目录</p><p>③ 编写计划任务，凌晨1点03去Code服务器同步代码</p><p>④ 编写rsync_java.sh文件，实现同步操作</p><h1 id="四、RSYNC课程扩展"><a href="#四、RSYNC课程扩展" class="headerlink" title="四、RSYNC课程扩展"></a>四、RSYNC课程扩展</h1><h2 id="1、给RSYNC服务添加密码"><a href="#1、给RSYNC服务添加密码" class="headerlink" title="1、给RSYNC服务添加密码"></a>1、给RSYNC服务添加密码</h2><p>Code服务器：</p><p>① 打开/etc/rsyncd.conf配置文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/rsyncd.conf[app]path=/app/java_projectlog file=/var/log/rsync.logauth users = user1,user2=&gt;   用户名secrets file = /etc/rsyncd.secrets=&gt;   密码文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>② 在/etc目录下创建rsyncd.secrets文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/rsyncd.secretsuser1:123 =&gt;   设置密码，用户名:密码user2:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>③ 更改密码文件权限为600</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod 600 /etc/rsyncd.secrets <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>④ 重启rsyncd服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart rsyncd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Backup备份服务器：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av user1@10.1.1.10::app ./Password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2、RSYNC集合INOTIFY工具实现代码实时同步-重点"><a href="#2、RSYNC集合INOTIFY工具实现代码实时同步-重点" class="headerlink" title="2、RSYNC集合INOTIFY工具实现代码实时同步(重点)"></a>2、RSYNC集合INOTIFY工具实现代码实时同步(重点)</h2><p>第一步：在Code服务器端安装inotify-tools工具（监控器）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar xf inotify-tools-3.13.tar.gz -C /usr/local/# cd /usr/local/inotify-tools-3.14# ./configure# make # make install安装完后，就会产生下面两个命令/usr/local/bin/inotifywait      等待/usr/local/bin/inotifywatch     看守/usr/local/bin/inotifywait-m : 一直监控某个目录，create、delete、modify等行为-r : 递归，不仅仅监控目录还要监控目录下的文件-q : 获取操作信息，但是不输出-e : 哪些行为需要被监控，modify,delete,create,attrib,movemodify: 文件被修改delete: 文件被删除create: 文件被创建attrib: 文件属性被修改move: 文件被移动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：编写inotify.sh</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim inotify.sh/usr/local/bin/inotifywait -mrq -e modify,delete,create,attrib,move /app/java_project |while read eventsdorsync -av --delete /app/java_project/ root@10.1.1.100:/backup/app1_javaecho "`date +%F\ %T`出现事件$events" &gt;&gt; /var/log/rsync.log 2&gt;&amp;1done我对/app/java_project做了两件事① 在目录下创建了一个file9.java=&gt;   create② 在目录下删除了一个file5.java=&gt;   deletecreate,delete =&gt; while =&gt; 执行两次creatersync数据同步deletersync数据同步<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>/usr/local/bin/inotifywait -mrq -e modify,delete,create,attrib,move</p></blockquote><p>第三步：添加可执行权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod +x inotify.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：让inotify.sh文件一直执行下去</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># nohup ./inotify.sh  &amp;&amp; : 让inotify.sh在计算机后台运行，可以使用jobs命令查看，kill %编号结束，当我们退出终端时，这个执行会自动结束nohup : 让程序一直在后台运行，即使我们关闭了终端<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>扩展：如何查看rsync.log日志文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cat /var/log/rsync.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程管理SSH服务</title>
      <link href="/2023/12/23/yuan-cheng-guan-li-ssh-fu-wu/"/>
      <url>/2023/12/23/yuan-cheng-guan-li-ssh-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="远程管理SSH服务"><a href="#远程管理SSH服务" class="headerlink" title="远程管理SSH服务"></a>远程管理SSH服务</h1><h1 id="一、搭建SSH服务"><a href="#一、搭建SSH服务" class="headerlink" title="一、搭建SSH服务"></a>一、搭建SSH服务</h1><h2 id="1、关闭防火墙与SELinux"><a href="#1、关闭防火墙与SELinux" class="headerlink" title="1、关闭防火墙与SELinux"></a>1、关闭防火墙与SELinux</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># 关闭firewalld防火墙# 临时关闭systemctl stop firewalld# 关闭开机自启动systemctl disable firewalld# 关闭selinux# 临时关闭setenforce 0# 修改配置文件  永久关闭vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、配置yum源"><a href="#2、配置yum源" class="headerlink" title="2、配置yum源"></a>2、配置yum源</h2><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524092213836.png" alt="image-20200524092213836"></p><p>JumpServer配置外网YUM源 =&gt; 阿里云</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup# wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo# yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>RealServer配置本地YUM源 =&gt; 把光盘镜像作为仓库（自建YUM仓库）</p><p>① 挂载光盘</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /mnt/cdrom# mount -o ro /dev/sr0 /mnt/cdrom# chmod +x /etc/rc.local# echo 'mount -o ro /dev/sr0 /mnt/cdrom' &gt;&gt; /etc/rc.local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>② 编写local.repo文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /etc/yum.repos.d# vim local.repo[local]name=local yumbaseurl=file:///mnt/cdromenabled=1gpgcheck=0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、openssh软件的安装"><a href="#3、openssh软件的安装" class="headerlink" title="3、openssh软件的安装"></a>3、openssh软件的安装</h2><p>SSH服务底层的软件名称叫做openssh，open开源，ssh就是ssh服务。openssh属于C/S架构软件，其拥有客户端与服务器端。</p><p>客户端：ssh</p><p>服务端：openssh-server</p><p>安装步骤：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install openssh -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查openssh是否安装成功</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa |grep openssh或# yum list installed |grep openssh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>获取openssh生成的文件列表</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ql openssh-server# 配置文件/etc/ssh/sshd_config    =&gt;      ssh服务的主配置文件/etc/sysconfig/sshd# 服务管理脚本/usr/lib/systemd/system/sshd.service=&gt;      systemctl start sshd# 文件共享服务 提供文件上传下载的服务/usr/libexec/openssh/sftp-server# 二进制文件程序文件/usr/sbin/sshd# 公钥生成工具/usr/sbin/sshd-keygen# man手册/usr/share/man/man5/sshd_config.5.gz/usr/share/man/man8/sftp-server.8.gz/usr/share/man/man8/sshd.8.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ql openssh-clients# 客户端配置文件/etc/ssh/ssh_config# 远程copy命令 服务器间进行文件传输/usr/bin/scp# sftp客户端  上传下载文件操作/usr/bin/sftp/usr/bin/slogin/usr/bin/ssh/usr/bin/ssh-add/usr/bin/ssh-agent/usr/bin/ssh-copy-id/usr/bin/ssh-keyscan# 客户端man手册/usr/share/man/man1/scp.1.gz/usr/share/man/man1/sftp.1.gz/usr/share/man/man1/slogin.1.gz/usr/share/man/man1/ssh-add.1.gz/usr/share/man/man1/ssh-agent.1.gz/usr/share/man/man1/ssh-copy-id.1.gz/usr/share/man/man1/ssh-keyscan.1.gz/usr/share/man/man1/ssh.1.gz/usr/share/man/man5/ssh_config.5.gz/usr/share/man/man8/ssh-pkcs11-helper.8.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、查看并修改ssh服务端的配置文件"><a href="#4、查看并修改ssh服务端的配置文件" class="headerlink" title="4、查看并修改ssh服务端的配置文件"></a>4、查看并修改ssh服务端的配置文件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man 5 sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>RealServer：禁止root账号远程登录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man 5 sshd_configPermitRootLogin=&gt; yes or no，默认为yes 代表允许通过root账号远程登录此服务器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/ssh/sshd_config38行 PermitRootLogin no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5、sshd服务管理"><a href="#5、sshd服务管理" class="headerlink" title="5、sshd服务管理"></a>5、sshd服务管理</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart sshd=&gt;   重启# systemctl status sshd=&gt;  状态# systemctl stop sshd=&gt;   停止# systemctl start sshd=&gt;   启动# systemctl enable sshd=&gt; 开机自启动# systemctl disable sshd=&gt;  开机不自启# ps -ef |grep sshd=&gt; 进程或# netstat -tnlp |grep sshd=&gt;  端口或# ss -naltp |grep sshd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、SSH服务任务解决方案"><a href="#二、SSH服务任务解决方案" class="headerlink" title="二、SSH服务任务解决方案"></a>二、SSH服务任务解决方案</h1><h2 id="1、创建用户并授权"><a href="#1、创建用户并授权" class="headerlink" title="1、创建用户并授权"></a>1、创建用户并授权</h2><p>JumpServer跳板机创建用户并授权</p><p>第一步：创建用户与用户组（html前端组，tom与jerry）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># 创建html前端组# groupadd html# 创建组内用户tom与jerry# useradd -g html tom# useradd -g html jerry<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：为用户添加密码</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo 123456 |passwd --stdin tom# echo 123456 |passwd --stdin jerry<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：为开发人员创建数据目录并且设置相应的权限</p><p>① 创建用户的数据目录：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir -p /code/html=&gt;    前端组# ll -d /code/htmldrwxr-xr-x. 2 root root 6 May 24 10:36 /code/html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>② 更改目录的文件所属组（更改为html，代表html组内成员可以对这个目录进行管理）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chgrp -R html /code/htmldrwxr-xr-x. 2 root html 6 May 24 10:36 /code/html# chmod -R g+w /code/htmldrwxrwxr-x. 2 root html 6 May 24 10:36 /code/html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>③ 添加粘滞位权限，防止误删除操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod 1770 /code/htmldrwxrwx--T. 2 root html 6 May 24 10:36 /code/html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2、测试用户权限"><a href="#2、测试用户权限" class="headerlink" title="2、测试用户权限"></a>2、测试用户权限</h2><p>测试用户权限是否设置成功，可以结合第1步一起完成</p><h2 id="3、禁用root登录"><a href="#3、禁用root登录" class="headerlink" title="3、禁用root登录"></a>3、禁用root登录</h2><p>RealServer服务器端：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/ssh/sshd_configPermitRootLogin no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、更改SSH默认端口"><a href="#4、更改SSH默认端口" class="headerlink" title="4、更改SSH默认端口"></a>4、更改SSH默认端口</h2><p>RealServer服务器端：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/ssh/sshd_config17行 Port 3712<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5、重启SSH服务"><a href="#5、重启SSH服务" class="headerlink" title="5、重启SSH服务"></a>5、重启SSH服务</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart sshd或# systemctl reload sshd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>restart与reload的本质区别：</p><p>① restart其实相当于stop然后在start</p><p>② reload不停止现有业务，只是重新加载sshd对应的配置文件</p><h2 id="6、在RealServer创建一个code账号"><a href="#6、在RealServer创建一个code账号" class="headerlink" title="6、在RealServer创建一个code账号"></a>6、在RealServer创建一个code账号</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd code# echo 123456 |passwd --stdin code<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>测试：在JumpServer远程连接RealServer</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh -p 3721 code@11.1.1.100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7、SSH客户端不验证指纹"><a href="#7、SSH客户端不验证指纹" class="headerlink" title="7、SSH客户端不验证指纹"></a>7、SSH客户端不验证指纹</h2><p>第一次连接远程服务器时：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">The authenticity of host '11.1.1.100 (11.1.1.100)' can't be established.ECDSA key fingerprint is SHA256:Y/cQNWWkX15o2MsJ5HOQBI2m8S33qIA+x3zys8J4pOY.ECDSA key fingerprint is MD5:76:61:86:8b:d5:ee:bf:9c:60:e6:12:fa:f6:f0:74:36.Are you sure you want to continue connecting (yes/no)?yesWarning: Permanently added '11.1.1.100' (ECDSA) to the list of known hosts.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果我们不想验证指纹，可以通过更改SSH客户端的配置文件</p><p>JumpServer：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/ssh/ssh_config35行 StrictHostKeyChecking no<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="8、用专业工具pwgen生成用户密码"><a href="#8、用专业工具pwgen生成用户密码" class="headerlink" title="8、用专业工具pwgen生成用户密码"></a>8、用专业工具pwgen生成用户密码</h2><p>在实际生产环境中，其用户密码一定不要手工设置，建议使用专业的密码生成工具如pwgen。</p><p>① 安装随机密码生成工具pwgen</p><p>② 使用pwgen工具生成随机密码</p><p>③ 给账号code设置密码</p><p>第一步：创建code开发者账号</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd code<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：配置EPEL源，安装pwgen工具</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo# yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第三步：安装pwgen密码生成工具</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install pwgen -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：使用pwgen生成随机密码</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># pwgen -cnBs1 10 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>扩展：pwgen密码生成器的使用</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># pwgen --help# 用法: pwgen 选项参数 长度 生成个数Usage: pwgen [ OPTIONS ] [ pw_length ] [ num_pw ]# 密码中至少包含一个大写字母-c or –capitalize# 密码中不包含大写字母-A or –no-capitalize# 密码中至少包含一个数字-n or –numerals# 密码中不包含数字-0 or –no-numerals# 密码中至少包含一个特殊符号-y or –symbols# 生成完全随机密码-s or –secure# 密码中不包含歧义字符（例如1,l,O,0）-B or –ambiguous# 使用SHA1 hash给定的文件作为一个随机种子-H or –sha1=path/to/file[#seed]# 在列中打印生成的密码-C# 不要在列中打印生成的密码，即一行一个密码-1# 不要使用任何元音，以避免偶然的脏话-v or –no-vowels<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、SSH服务补充"><a href="#三、SSH服务补充" class="headerlink" title="三、SSH服务补充"></a>三、SSH服务补充</h1><h2 id="1、scp命令"><a href="#1、scp命令" class="headerlink" title="1、scp命令"></a>1、scp命令</h2><p>主要功能：用于Linux系统与Linux系统之间进行文件的传输（上传、下载）</p><p>上传：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp [选项] 本地文件路径 远程用户名@远程服务器的IP地址:远程文件存储路径-r : 递归上传，主要针对文件夹-P : 更换了SSH服务的默认端口必须使用-P选项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>下载：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp [选项] 远程用户名@远程服务器的IP地址:远程文件路径 本地文件存储路径-r : 递归上传，主要针对文件夹-P : 更换了SSH服务的默认端口必须使用-P选项<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2、踢出用户"><a href="#2、踢出用户" class="headerlink" title="2、踢出用户"></a>2、踢出用户</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># 查看当前在线用户w# 踢出某个账号pkill -kill -t pts/1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、SSH免密登录解决方案"><a href="#四、SSH免密登录解决方案" class="headerlink" title="四、SSH免密登录解决方案"></a>四、SSH免密登录解决方案</h1><h2 id="1、为什么需要免密登录"><a href="#1、为什么需要免密登录" class="headerlink" title="1、为什么需要免密登录"></a>1、为什么需要免密登录</h2><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524154610968.png" alt="image-20200524154610968"></p><h2 id="2、SSH认证原理（基于用户名密码-基于密钥对）"><a href="#2、SSH认证原理（基于用户名密码-基于密钥对）" class="headerlink" title="2、SSH认证原理（基于用户名密码+基于密钥对）"></a>2、SSH认证原理（基于用户名密码+基于密钥对）</h2><p>① 回顾基于用户名密码的认证方式</p><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524155050868.png" alt="image-20200524155050868"></p><p>② 基于密钥对（公钥与私钥）的认证方式 =&gt; 免密登录</p><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524155421332.png" alt="image-20200524155421332"></p><p>A主机 =&gt; JumpServer，B主机 =&gt; RealServer</p><p>第一步：在A主机（JumpServer）生成一个密钥对（公钥和私钥）</p><p>第二步：把A主机的公钥通过网络拷贝到B主机（RealServer）上，然后把其内容追加到B主机的~/.ssh/authorized_keys</p><p>第三步：由A主机（JumpServer）向B主机（RealServer）发起登录请求，然后直接在B主机上进行公钥比对（判断A主机的公钥是否已经存储在B主机的authorized_keys文件中），如果存在且正确，则生成一个随机的字符串（如itcast），然后使用A主机的公钥对其加密得到加密的后字符串（如dXdh,34njasz!z.）</p><p>第四步：通过网络，由B主机讲刚才生成的加密后的字符串传输给主机A，主机A接收到加密后的字符串以后，使用自己本地存储的私钥进行解密操作（得到itcast）</p><p>第五步：把解密得到的itcast发送到B主机，然后验证与刚才生成的字符串是否一致，如果一致，返回登录成功。反之，则返回登录失败。</p><p>到此免密登录全部完成！</p><h2 id="3、SSH免密登录的具体实现"><a href="#3、SSH免密登录的具体实现" class="headerlink" title="3、SSH免密登录的具体实现"></a>3、SSH免密登录的具体实现</h2><p>SSH免密的实现思路一共分为三个步骤（三步走）</p><p>第一步：在A主机针对某个账号（tom或jerry）生成公钥与私钥</p><p>第二步：使用某些方法把公钥发送到B主机中，然后追加到authorized_keys文件中</p><p>第三步：测试是否实现免密登录</p><h3 id="☆-方法一：比较常用-tom"><a href="#☆-方法一：比较常用-tom" class="headerlink" title="☆ 方法一：比较常用(tom)"></a>☆ 方法一：比较常用(tom)</h3><p>① 在A主机针对某个账号生成公钥与私钥</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh-keygen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86SSH%E6%9C%8D%E5%8A%A1.assets/image-20200524163237742.png" alt="image-20200524163237742"></p><blockquote><p>注：如果不想一路确认，可以在ssh-keygen -P “”，直接生成公私钥</p></blockquote><p>② 使用ssh-copy-id把公钥文件中的内容传输到服务器端的~/.ssh/authorized_keys文件中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh-copy-id -p 3712 code@11.1.1.100code@11.1.1.100's password:123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>③ 在JumpServer客户端测试免密登录是否成功</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh -p 3721 code@11.1.1.100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-方法二：集群常用-jerry"><a href="#☆-方法二：集群常用-jerry" class="headerlink" title="☆ 方法二：集群常用(jerry)"></a>☆ 方法二：集群常用(jerry)</h3><p>① 生成公钥与私钥</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh-keygen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>② 把id_rsa.pub文件，scp到RealServer服务器端</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp -P 3721 ~/.ssh/id_rsa.pub code@11.1.1.100:/home/code/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>③ 在RealServer服务器端，把id_rsa.pub文件中的内容追加到~/.ssh/authorized_keys文件中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd ~# cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意事项：以上配置也比较简单，但是实际应用时要注意文件的权限</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">RealServer：~/.ssh : 700~/.ssh/authorized_keys : 600<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>④ 测试免密是否成功</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh -p 3721 code@11.1.1.100<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下yum源配置实战</title>
      <link href="/2023/12/23/linux-xia-yum-yuan-pei-zhi-shi-zhan/"/>
      <url>/2023/12/23/linux-xia-yum-yuan-pei-zhi-shi-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux下yum源配置实战"><a href="#Linux下yum源配置实战" class="headerlink" title="Linux下yum源配置实战"></a>Linux下yum源配置实战</h1><h1 id="一、Linux下软件包的管理"><a href="#一、Linux下软件包的管理" class="headerlink" title="一、Linux下软件包的管理"></a>一、Linux下软件包的管理</h1><h2 id="1、软件安装方式"><a href="#1、软件安装方式" class="headerlink" title="1、软件安装方式"></a>1、软件安装方式</h2><p>① RPM包管理（需要单独解决依赖问题）</p><p>② YUM包管理（需要有网络及YUM仓库的支持，会自动从互联网下载软件，自动解决依赖）</p><p>③ 源码安装（安装过程比较复杂，源码安装三步走。优点：定制性很强）</p><p>软件：主线版（mainline），稳定版（stable）</p><h2 id="2、源码安装的配置过程"><a href="#2、源码安装的配置过程" class="headerlink" title="2、源码安装的配置过程"></a>2、源码安装的配置过程</h2><p>在Linux系统中，源码安装一共分为三步（三步走）：</p><p>第一步：配置过程（配置软件的安装路径）</p><p>第二步：编译过程（把软件由源代码编译成可以安装的程序）</p><p>第三步：安装过程（把编译后的程序进行安装）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ./configure &amp;&amp; make &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、详解源码安装的配置过程（定制）"><a href="#3、详解源码安装的配置过程（定制）" class="headerlink" title="3、详解源码安装的配置过程（定制）"></a>3、详解源码安装的配置过程（定制）</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd 软件源码包# ./configure [选项]# ./configure --help--prefix=... Directories to put files in /usr/local 软件家目录--bindir=... $prefix/bin 命令的目录--etcdir=... $prefix/etc 配置文件的目录 httpd =&gt; /etc/httpd/httpd.conf--mandir=... $prefix/share/man man文档路径--locale=... $prefix/share/locale 语言编码...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、详解编译过程"><a href="#4、详解编译过程" class="headerlink" title="4、详解编译过程"></a>4、详解编译过程</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># make<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在Linux操作系统中，make主要功能就是将其他语言的源代码打包成Linux可以识别安装的程序。编译过程需要一个gcc软件（开发工具）的支持！</p></blockquote><h2 id="5、安装过程"><a href="#5、安装过程" class="headerlink" title="5、安装过程"></a>5、安装过程</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、axel多线程下载软件源码安装"><a href="#6、axel多线程下载软件源码安装" class="headerlink" title="6、axel多线程下载软件源码安装"></a>6、axel多线程下载软件源码安装</h2><p>第一步：获取axel多线程下载软件</p><p>第二步：上传axel软件包到Linux系统中</p><p>第三步：安装axel软件(源码安装三步走=&gt;配置+编译+安装)</p><p>① 对软件进行解压缩操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zxf axel-2.4.tar.gz或# tar -xf axel-2.4.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>② 使用cd命令切换到axel目录中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd axel-2.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>③ 对axel软件进行配置（不采用默认配置）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ./configure --helpUsage: ./configure [OPTIONS]Option          Description                             Default--prefix=...    Directories to put files in             /usr/local--bindir=...                                            $prefix/bin--etcdir=...                                            $prefix/etc--mandir=...                                            $sharedir/man--locale=...                                            $sharedir/locale<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置axel软件的安装路径为/opt/axel</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ./configure --prefix=/opt/axel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>④ 对axel软件进行编译与安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># make# make install或# make &amp;&amp; make install&amp;&amp; ：逻辑与，如果make编译成功会立即执行右边的make install安装程序，如果make编译失败，则以上程序会停止执行，然后抛出错误。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：测试与使用</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@yunwei ~]# axel http://mirrors.163.com/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7bash: axel: command not found...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>出现以上问题的主要原因在于：我们没有采用默认的安装方式，所以导致当我们执行axel命令时，其找不到对应的软件。</p><p>第五步：解决命令无法访问问题</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一种方式：采用软链接形式（类似Windows中的快捷方式）第二种方式：使用环境变量（重要，Linux中的环境变量）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7、使用软链接解决command-not-found"><a href="#7、使用软链接解决command-not-found" class="headerlink" title="7、使用软链接解决command not found"></a>7、使用软链接解决command not found</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># which axel/usr/bin/which: no axel in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)# ll /opt/axel/binaxel解决方案：给/opt/axel/bin/axel创建一个快捷方式到/usr/local/bin# ln -s /opt/axel/bin/axel /usr/local/bin/axel 基本语法：# ln -s  源文件路径 软链接路径# axel http://mirrors.163.com/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8、使用环境变量解决command-not-found"><a href="#8、使用环境变量解决command-not-found" class="headerlink" title="8、使用环境变量解决command not found"></a>8、使用环境变量解决command not found</h2><p>环境变量</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">终端 =&gt; 命令 =&gt; 系统的环境变量(PATH =&gt; /etc/profile) =&gt; 一些命令的存放路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>axel多线程下载软件，通过源码的方式安装成功后，由于没有使用默认的安装路径，导致axel这个命令没有出现在系统的环境变量中，所以其会出现command not found。</p><p>第一步：查询当前系统的环境变量</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo $PATH/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第二步：把axel所在目录添加到环境变量</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">① 使用vim编辑/etc/profile文件，追加到最后一行# vim /etc/profile...export PATH=$PATH:/opt/axel/bin# source /etc/profile=&gt;   代表让以上配置立即生效② 使用echo命令向/etc/profile文件中追加一行# echo 'export PATH=$PATH:/opt/axel/bin' &gt;&gt; /etc/profile# source /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：测试axel命令是否可以使用</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># axel http://mirrors.163.com/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="9、解决源码安装软件手册找不到问题"><a href="#9、解决源码安装软件手册找不到问题" class="headerlink" title="9、解决源码安装软件手册找不到问题"></a>9、解决源码安装软件手册找不到问题</h2><p>问题重现：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@localhost axel]# man axelNo manual entry for axel原因：找不到指定的man文档<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>解决方案：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@localhost axel]# vim /etc/man.config...增加如下内容：MANPATH /opt/axel/share/man<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10、卸载源码安装的软件"><a href="#10、卸载源码安装的软件" class="headerlink" title="10、卸载源码安装的软件"></a>10、卸载源码安装的软件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一步：进入到源码的安装包中# cd axel-2.4# make uninstall=&gt;   安装软件的安装包等程序# make distclean    =&gt;   卸载编译与配置过程第二步：删除软件的目录# rm -rf /opt/axel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、YUM源概述"><a href="#二、YUM源概述" class="headerlink" title="二、YUM源概述"></a>二、YUM源概述</h1><h2 id="1、yum源作用"><a href="#1、yum源作用" class="headerlink" title="1、yum源作用"></a>1、yum源作用</h2><p>==软件包管理器==，类似360的软件管家</p><p><img src="/../assets/blog_res/Linux%E4%B8%8Byum%E6%BA%90%E9%85%8D%E7%BD%AE%E5%AE%9E%E6%88%98.assets/image-20200405144405069.png" alt="image-20200405144405069"></p><h2 id="2、yum源优点"><a href="#2、yum源优点" class="headerlink" title="2、yum源优点"></a>2、yum源优点</h2><p>RPM安装（下载软件、单独安装、需要解决依赖关系）</p><p>源码安装（下载软件的源码包，解压，进入目录=&gt;配置+编译+安装）</p><p>yum源：相当于rpm软件包管理的升级版</p><p>能够==解决软件包之间的依赖关系==，提高运维人员的工作效率。</p><blockquote><p>yum源底层还是基于RPM进行软件安装操作的，所以yum安装软件后，我们也可以通过rpm  -qa  |grep  软件名称</p></blockquote><h2 id="3、yum源分类"><a href="#3、yum源分类" class="headerlink" title="3、yum源分类"></a>3、yum源分类</h2><h3 id="☆-本地yum源"><a href="#☆-本地yum源" class="headerlink" title="☆ 本地yum源"></a>☆ 本地yum源</h3><p>yum仓库在==本地==（系统光盘/镜像文件） =&gt;  不需要网络的支持</p><h3 id="☆-网络yum源"><a href="#☆-网络yum源" class="headerlink" title="☆ 网络yum源"></a>☆ 网络yum源</h3><p>yum仓库不在本地，在==远程==</p><ul><li><p>国内较知名的网络源（aliyun源，163源，sohu源，知名大学开源镜像等）</p><p>​阿里源：<a href="https://opsx.alibaba.com/mirror">https://opsx.alibaba.com/mirror</a></p><p>​网易源：<a href="http://mirrors.163.com/">http://mirrors.163.com/</a></p><p>​搜狐源：<a href="http://mirrors.sohu.com/">http://mirrors.sohu.com/</a></p><p>​清华源：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></p></li><li><p>国外较知名的网络源（centos源、redhat源、扩展[^epel]源等）</p></li><li><p>==特定软件==相关的网络源（Nginx、MySQL、Zabbix等）</p></li></ul><h2 id="4、本机yum源备份（重要）"><a href="#4、本机yum源备份（重要）" class="headerlink" title="4、本机yum源备份（重要）"></a>4、本机yum源备份（重要）</h2><p>第一步：使用cd命令切换到/etc/yum.repos.d目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /etc/yum.repos.d/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：对所有的仓库文件进行备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zcf repo.tar.gz *.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：删除所有的以.repo结尾的仓库文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf *.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三、本地YUM源配置"><a href="#三、本地YUM源配置" class="headerlink" title="三、本地YUM源配置"></a>三、本地YUM源配置</h1><h2 id="1、本地YUM配置"><a href="#1、本地YUM配置" class="headerlink" title="1、本地YUM配置"></a>1、本地YUM配置</h2><p>① 使用光盘镜像作为YUM源仓库</p><p>② 下载很多软件，使用软件包作为YUM源仓库</p><h2 id="2、使用光盘镜像作为YUM源仓库"><a href="#2、使用光盘镜像作为YUM源仓库" class="headerlink" title="2、使用光盘镜像作为YUM源仓库"></a>2、使用光盘镜像作为YUM源仓库</h2><p>第一步：在VMware系统中装在CentOS7.6系统的光盘镜像</p><p> <img src="/../assets/blog_res/Linux%E4%B8%8Byum%E6%BA%90%E9%85%8D%E7%BD%AE%E5%AE%9E%E6%88%98.assets/image-20200405151939433.png" alt="image-20200405151939433"></p><p>第二步：把光盘挂载到某个目录下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd ~# rm -rf /mnt/*# mount -o ro /dev/sr0 /mnt选项说明：-o ：挂载方式，ro代表以readonly=&gt;只读的方式进行挂载              rw代表以read/write=&gt;读写的方式进行挂载# lsblkNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTsda               8:0    0   20G  0 disk├─sda1            8:1    0    1G  0 part /boot└─sda2            8:2    0   19G  0 part  ├─centos-root 253:0    0   17G  0 lvm  /  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]sr0              11:0    1  4.3G  0 rom  /mnt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>卸载或解挂可以使用umount /mnt</p></blockquote><p>第三步：把光盘挂载添加到开机启动文件中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod +x /etc/rc.local# echo 'mount -o ro /dev/sr0 /mnt' &gt;&gt; /etc/rc.local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>/etc/rc.local，属于系统的开机启动文件。系统启动后，会自动加载并执行这个文件</p></blockquote><p>第四步：编写本地YUM仓库文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /etc/yum.repos.d/创建一个以*.repo结尾的文件，名称任意# vim local.repo[local]name=local yumbaseurl=file:///mntgpgcheck=0enabled=1# yum clean all# yum makecache# yum repolist all注：file://本地协议路径，后面跟仓库的具体路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>yum仓库的标准格式</p><p>[仓库标识名称]，名称任意，在一个文件中可以拥有多个标识</p><p>name=仓库名称</p><p>baseurl=仓库的路径，支持多种格式，file://本地路径，ftp://，http://或https://</p><p>gpgcheck=gpg密钥，值可以是0（代表不检测），1（代表检测，如果是1，下方还要定义一个gpgkey=密钥连接）</p><p>enabled=是否启动当前仓库，值可以0，也可以是1，默认为1，代表启动仓库</p></blockquote><p>第五步：测试本地YUM仓库是否可用</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install httpd -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、扩展man-5"><a href="#3、扩展man-5" class="headerlink" title="3、扩展man 5"></a>3、扩展man 5</h2><p>在Linux系统中，给定我们一个配置文件，怎么查询这个文件中每一个选项的作用呢？</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man 命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>扩展：man  5   配置文件名称</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man 5 yum.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="四、网络YUM源配置"><a href="#四、网络YUM源配置" class="headerlink" title="四、网络YUM源配置"></a>四、网络YUM源配置</h1><h2 id="1、网络YUM源的分类"><a href="#1、网络YUM源的分类" class="headerlink" title="1、网络YUM源的分类"></a>1、网络YUM源的分类</h2><p>① 使用比较知名平台的YUM源（阿里云、腾讯、清华）</p><p>② 有些特定软件（如Nginx、MySQL、Zabbix等等）需要根据官网文档自定义网络YUM源</p><h2 id="2、使用知名平台的YUM源"><a href="#2、使用知名平台的YUM源" class="headerlink" title="2、使用知名平台的YUM源"></a>2、使用知名平台的YUM源</h2><p>​阿里源：<a href="https://opsx.alibaba.com/mirror">https://opsx.alibaba.com/mirror</a></p><p>​网易源：<a href="http://mirrors.163.com/">http://mirrors.163.com/</a></p><p>​搜狐源：<a href="http://mirrors.sohu.com/">http://mirrors.sohu.com/</a></p><p>​清华源：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></p><p>腾讯源、华为源…</p><blockquote><p>百度搜索 =&gt; 华为 mirror镜像源</p></blockquote><p>案例：配置阿里云的yum源</p><p>第一步：百度，搜索你想要的YUM源，进入官网，找到CentOS</p><p><img src="/../assets/blog_res/Linux%E4%B8%8Byum%E6%BA%90%E9%85%8D%E7%BD%AE%E5%AE%9E%E6%88%98.assets/image-20200405162153722.png" alt="image-20200405162153722"></p><p>第二步：根据官网提示，配置阿里云的YUM源</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo# yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、扩展：EPEL源配置"><a href="#3、扩展：EPEL源配置" class="headerlink" title="3、扩展：EPEL源配置"></a>3、扩展：EPEL源配置</h2><p>什么是EPEL源？</p><p>答：EPEL是对官网源的一个扩展。</p><p>CentOS-Base.repo文件 =&gt; 基础源（官方在带的YUM源）</p><p>epel.repo文件 =&gt; 扩展源，是对官方YUM源的一个补充</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install epel-release -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>比如：会跑的小火车就是在epel源中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install sl -y# sl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、特定软件的YUM源配置"><a href="#4、特定软件的YUM源配置" class="headerlink" title="4、特定软件的YUM源配置"></a>4、特定软件的YUM源配置</h2><p>比如特殊的几个软件，如Nginx、MySQL、Zabbix</p><p>Nginx：<a href="http://www.nginx.org/">http://www.nginx.org</a></p><p>MySQL：<a href="https://www.mysql.com/">https://www.mysql.com/</a></p><p>Zabbix：<a href="https://www.zabbix.com/">https://www.zabbix.com/</a></p><p>找到官方文档，把YUM源配置，写入到一下文件中（repo文件）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /etc/yum.repos.d# vim nginx.repo[nginx-stable]name=nginx stable repobaseurl=http://nginx.org/packages/centos/$releasever/$basearch/gpgcheck=1enabled=1gpgkey=https://nginx.org/keys/nginx_signing.keymodule_hotfixes=true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>清理缓存：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装Nginx：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install nginx -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="五、自建YUM源仓库"><a href="#五、自建YUM源仓库" class="headerlink" title="五、自建YUM源仓库"></a>五、自建YUM源仓库</h1><h2 id="1、缓存安装软件包"><a href="#1、缓存安装软件包" class="headerlink" title="1、缓存安装软件包"></a>1、缓存安装软件包</h2><p>什么时候需要缓存软件？</p><ul><li>下次还需要安装相同版本的软件包</li><li>由于网络原因导致网络安装非常慢，将软件包缓存下来，配置本地仓库</li></ul><h2 id="2、如何缓存软件安装包"><a href="#2、如何缓存软件安装包" class="headerlink" title="2、如何缓存软件安装包"></a>2、如何缓存软件安装包</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/yum.conf[main]cachedir=/var/cache/yum/$basearch/$releasever定义软件包的缓存路径keepcache=11开启缓存；0关闭debuglevel=2logfile=/var/log/yum.log...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、把软件及依赖软件全部下载到某个路径"><a href="#3、把软件及依赖软件全部下载到某个路径" class="headerlink" title="3、把软件及依赖软件全部下载到某个路径"></a>3、把软件及依赖软件全部下载到某个路径</h2><p>只下载不安装软件：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install --downloadonly --downloaddir=保存路径 软件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：下载samba软件及依赖软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /soft# yum install --downloadonly --downloaddir=/soft samba<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、自定义YUM仓库"><a href="#4、自定义YUM仓库" class="headerlink" title="4、自定义YUM仓库"></a>4、自定义YUM仓库</h2><p>第一步：在系统中安装createrepo制作仓库的软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install createrepo -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：把/soft文件夹做成一个本地的自建仓库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># createrepo /soft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：在/etc/yum.repos.d目录中创建一个soft.repo的仓库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /etc/yum.repos.d/# vim soft.repo[soft]name=soft yumbaseurl=file:///softgpgcheck=0enabled=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>清理缓存+重建缓存：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux高级命令（扩展）</title>
      <link href="/2023/12/23/linux-gao-ji-ming-ling-kuo-zhan/"/>
      <url>/2023/12/23/linux-gao-ji-ming-ling-kuo-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux高级命令（扩展）"><a href="#Linux高级命令（扩展）" class="headerlink" title="Linux高级命令（扩展）"></a>Linux高级命令（扩展）</h1><h1 id="一、find命令"><a href="#一、find命令" class="headerlink" title="一、find命令"></a>一、find命令</h1><h2 id="1、find命令作用"><a href="#1、find命令作用" class="headerlink" title="1、find命令作用"></a>1、find命令作用</h2><p>在Linux操作系统中，find命令主要用于进行文件的搜索。</p><h2 id="2、基本语法"><a href="#2、基本语法" class="headerlink" title="2、基本语法"></a>2、基本语法</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find 搜索路径 [选项 选项的值] ...选项说明：-name ：根据文件的名称搜索文件，支持*通配符-type ：f代表普通文件、d代表文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：搜索计算机中的所有文件，然后找到httpd.conf文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /etc -name "httpd.conf" -type f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、-星号通配符"><a href="#3、-星号通配符" class="headerlink" title="3、*星号通配符"></a>3、*星号通配符</h2><p>在Linux操作系统中，我们想要查找的文件名称不是特别清晰（只记住了前面或后面的字符），这个时候就可以使用*星号通配符了。</p><p>案例：获取/etc目录下，所有后缀名为.conf的文件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /etc -name "*.conf" -type f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：在/etc目录下，搜索所有以httpd开头的文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /etc -name "httpd*" -type f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、根据文件修改时间搜索文件"><a href="#4、根据文件修改时间搜索文件" class="headerlink" title="4、根据文件修改时间搜索文件"></a>4、根据文件修改时间搜索文件</h2><h3 id="☆-聊一下Windows中的文件时间概念？"><a href="#☆-聊一下Windows中的文件时间概念？" class="headerlink" title="☆ 聊一下Windows中的文件时间概念？"></a>☆ 聊一下Windows中的文件时间概念？</h3><p> <img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331112114347.png" alt="image-20200331112114347"></p><p>创建时间：代表这个文件什么时间被创建</p><p>访问时间：代表这个文件什么时间被访问</p><p>修改时间：代表这个文件什么时间被修改</p><h3 id="☆-使用stat命令获取文件的最后修改时间"><a href="#☆-使用stat命令获取文件的最后修改时间" class="headerlink" title="☆ 使用stat命令获取文件的最后修改时间"></a>☆ 使用stat命令获取文件的最后修改时间</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># stat 文件名称Modify: 2020-03-31 10:25:20.609010605 +0800<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-创建文件时设置修改时间以及修改文件的修改时间"><a href="#☆-创建文件时设置修改时间以及修改文件的修改时间" class="headerlink" title="☆ 创建文件时设置修改时间以及修改文件的修改时间"></a>☆ 创建文件时设置修改时间以及修改文件的修改时间</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch -m -d "日期时间格式" 文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>作用：① 如果文件不存在，则自动创建该文件，然后设置其最后的修改时间</p><p>​     ② 如果文件存在，touch命令就是只修改文件的最后修改时间</p><p>案例：创建一个a.txt文件，设置最后修改时间为2020-03-30 00:00</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch -m -d "2020-03-30 00:00" a.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：创建一个b.txt文件，然后在设置文件的最后修改时间为2020-03-29 00:00</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch b.txt# touch -m -d "2020-03-29 00:00" b.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：创建一个c.txt文件，设置最后修改时间为2020-03-28 00:00</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch -m -d "2020-03-28 00:00" c.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-根据文件的-最后修改时间-搜索文件"><a href="#☆-根据文件的-最后修改时间-搜索文件" class="headerlink" title="☆ 根据文件的==最后修改时间==搜索文件"></a>☆ 根据文件的==最后修改时间==搜索文件</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find 搜索路径 -mtime +days/-day3-mtime ：根据文件的最后修改时间搜索文件+ ：加号，代表搜索几天之前的文件信息- ：减号，代表搜索几天以内的文件信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：搜索3天以前的文件信息（不包含第3天的，而且只搜索.txt格式）</p><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331113956170.png" alt="image-20200331113956170"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find ./ -name "*.txt" -mtime +3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：搜索3天以内的文件信息（只搜索.txt格式）</p><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331120315628.png" alt="image-20200331120315628"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find ./ -name "*.txt" -mtime -3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、扩展选项-exec选项"><a href="#5、扩展选项-exec选项" class="headerlink" title="5、扩展选项-exec选项"></a>5、扩展选项-exec选项</h2><p>案例：删除Linux系统中/var/log目录下10天以前的日志信息（日志文件格式*.log结尾）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /var/log -name "*.log" -mtime +10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第一种解决方案：使用管道命令|</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /var/log -name "*.log" -mtime +10 |rm -rf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上命令并不能正确的执行删除操作，原因在于rm命令和ls命令一样，都不支持管道。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /var/log -name "*.log" -mtime +10 |xargs rm -rf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二种解决方案：使用find命令 + -exec选项</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /var/log -name "*.log" -mtime +10 -exec rm -rf {} \;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、根据文件的大小搜索文件"><a href="#6、根据文件的大小搜索文件" class="headerlink" title="6、根据文件的大小搜索文件"></a>6、根据文件的大小搜索文件</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find 搜索路径 -size [文件大小，常用单位：k，M，G]size值  : 搜索等于size值大小的文件-size值 : [0, size值)+size值 : (size值,正无穷大)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：搜索/root目录下大小为5M的文件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find ./ -type f -size 5M<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：搜索/root目录下大小为5M以内的文件信息（5M&gt;size&gt;=0）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find ./ -type f -size -5M<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：搜索/目录中，文件大小大于100M的文件信息（size&gt;100M）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find / -type f -size +100M<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7、dd扩展命令"><a href="#7、dd扩展命令" class="headerlink" title="7、dd扩展命令"></a>7、dd扩展命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># dd if=/dev/zero of=文件名称 bs=1M count=1选项说明：if代表输入文件of代表输出文件bs代表字节为单位的块大小。count代表被复制的块。其中/dev/zero是一个字符设备，会不断返回0值字节。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主要功能：在Linux操作系统中，生成某个大小的测试文件！</p><p>案例：使用dd创建一个1M大小的sun.txt文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># dd if=/dev/zero of=moon.txt bs=1M count=1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：使用dd创建一个5M大小的moon.txt文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># dd if=/dev/zero of=moon.txt bs=5M count=1if = input fileof = output file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、tree命令"><a href="#二、tree命令" class="headerlink" title="二、tree命令"></a>二、tree命令</h1><h2 id="1、tree命令的主要作用"><a href="#1、tree命令的主要作用" class="headerlink" title="1、tree命令的主要作用"></a>1、tree命令的主要作用</h2><p>Windows和Linux都有tree命令，主要功能是创建文件列表，将所有文件以树的形式列出来</p><h2 id="2、使用yum命令安装tree"><a href="#2、使用yum命令安装tree" class="headerlink" title="2、使用yum命令安装tree"></a>2、使用yum命令安装tree</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install tree -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、以树状结构显示路径下的文件信息"><a href="#3、以树状结构显示路径下的文件信息" class="headerlink" title="3、以树状结构显示路径下的文件信息"></a>3、以树状结构显示路径下的文件信息</h2><p>案例：以树状结构显示当前目录下的文件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tree <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：以树状结构显示/var/log目录下的文件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tree /var/log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三、scp命令"><a href="#三、scp命令" class="headerlink" title="三、scp命令"></a>三、scp命令</h1><h2 id="1、scp命令的主要作用"><a href="#1、scp命令的主要作用" class="headerlink" title="1、scp命令的主要作用"></a>1、scp命令的主要作用</h2><p>scp命令的主要作用是实现Linux与Linux系统之间的文件传输。</p><blockquote><p>完成以上实战需要两个Linux系统，解决方案可以使用克隆操作（先关机后克隆）快速生成一个Linux系统</p></blockquote><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331153615311.png" alt="image-20200331153615311"></p><h2 id="2、scp效果图"><a href="#2、scp效果图" class="headerlink" title="2、scp效果图"></a>2、scp效果图</h2><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331154917349.png" alt="image-20200331154917349"></p><p>scp传输要求：两台计算机所使用的操作系统都必须是Linux操作系统。</p><blockquote><p>ssh: connect to host 10.1.1.17 port 22: Connection refused<br>lost connection</p><p>出现以上问题的主要原因在于SCP命令时基于SSH协议，所以两台服务器的sshd服务必须处于开启状态，否则无法完成上传与下载操作。</p></blockquote><h2 id="3、下载文件或目录"><a href="#3、下载文件或目录" class="headerlink" title="3、下载文件或目录"></a>3、下载文件或目录</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp [选项] 用户名@linux主机地址:资源路径  linux本地文件路径选项说明：-r ：代表递归操作，主要针对文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：从10.1.1.17服务器下载/root路径下的video.mp4文件到本地的/root目录下</p><p>10.1.1.16：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp root@10.1.1.17:/root/video.mp4 ./The authenticity of host '10.1.1.17 (10.1.1.17)' can't be established.ECDSA key fingerprint is SHA256:Wcxibo2ZQulm6bV+jEakz8IniwFgE6CUHopCxYjexrI.ECDSA key fingerprint is MD5:48:25:21:93:ef:2b:22:25:5f:95:39:56:0c:8e:ff:75.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added '10.1.1.17' (ECDSA) to the list of known hosts.root@10.1.1.17's password:123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：从10.1.1.17服务器下载/root路径下的shop文件夹到本地的/root目录下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp -r root@10.1.1.17:/root/shop ./root@10.1.1.17's password:123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、上传文件或目录"><a href="#4、上传文件或目录" class="headerlink" title="4、上传文件或目录"></a>4、上传文件或目录</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp [选项] linux本地文件路径 用户名@linux主机地址:远程路径选项说明：-r ：递归操作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把10.1.1.16服务器上的/root/video.mp4上传到10.1.1.17服务器的/root目录下</p><p>10.1.1.16：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp /root/video.mp4 root@10.1.1.17:/root/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把10.1.1.16服务器上的/root/shop文件夹上传到10.1.1.17服务器的/root目录下</p><p>10.1.1.16：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># scp -r /root/shop root@10.1.1.17:/root/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="四、计划任务-tar命令实现文件备份"><a href="#四、计划任务-tar命令实现文件备份" class="headerlink" title="四、计划任务+tar命令实现文件备份"></a>四、计划任务+tar命令实现文件备份</h1><h2 id="1、回顾计划任务"><a href="#1、回顾计划任务" class="headerlink" title="1、回顾计划任务"></a>1、回顾计划任务</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab [选项]-l : list缩写，查询当前用户的计划任务信息-e : edit缩写，编辑计划任务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2、计划任务格式"><a href="#2、计划任务格式" class="headerlink" title="2、计划任务格式"></a>2、计划任务格式</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">分 时 日 月 周 执行的命令（要求使用完整路径,which命令）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89.assets/image-20200331164953190.png" alt="image-20200331164953190"></p><blockquote><p>周的范围比较特殊，正常情况下，只有周一 ~ 周日 1-7，但是计划任务范围0-7，0和7都代表周日</p></blockquote><h2 id="3、案例"><a href="#3、案例" class="headerlink" title="3、案例"></a>3、案例</h2><p>案例：每天的凌晨2点0分把/etc目录备份一次/tmp目录下，要求把/etc打包成etc.tar.gz格式</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab -e分 时 日 月 周 /usr/bin/tar -zcf /tmp/etc.tar.gz /etc0 2 * * * /usr/bin/tar -zcf /tmp/etc.tar.gz /etc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上案例虽然可以实现对/etc目录的备份，但是有一个小缺点：每次备份时，生成的文件名称是一致的，这样后面备份的文件就会把前面备份的文件进行覆盖！</p><p>==案例：备份文件时，要求按时间作为备份文件的名称==</p><p>/tmp/etc-20200331.tar.gz</p><p>/tmp/etc-20200401.tar.gz</p><p>…</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab -e0 2 * * * /usr/bin/tar -zcf /tmp/etc-$(date +"\%Y\%m\%d").tar.gz/etc重点：/tmp/etc-$(date +"\%Y\%m\%d").tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>经验之谈：如果在编写计划任务时，出现了%百分号，前面必须添加一个反斜杠\进行转义，否则计划任务会失效！</p></blockquote><h2 id="4、扩展命令：date"><a href="#4、扩展命令：date" class="headerlink" title="4、扩展命令：date"></a>4、扩展命令：date</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date +"时间格式"%F : 年-月-日%T : 小时:分钟:秒%Y : Year,年%m : month,月%d : day,日%H : Hour,小时%M : Minute,分钟%S : Second,秒<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：获取计算机的系统时间</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取年月日信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date +""<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux高级命令（扩展）三</title>
      <link href="/2023/12/23/linux-gao-ji-ming-ling-kuo-zhan-san/"/>
      <url>/2023/12/23/linux-gao-ji-ming-ling-kuo-zhan-san/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux高级命令（扩展）"><a href="#Linux高级命令（扩展）" class="headerlink" title="Linux高级命令（扩展）"></a>Linux高级命令（扩展）</h1><h1 id="一、date命令"><a href="#一、date命令" class="headerlink" title="一、date命令"></a>一、date命令</h1><h2 id="1、date命令的作用"><a href="#1、date命令的作用" class="headerlink" title="1、date命令的作用"></a>1、date命令的作用</h2><p>date命令的主要作用：用于获取计算机操作系统的系统时间</p><h2 id="2、获取计算机的系统时间"><a href="#2、获取计算机的系统时间" class="headerlink" title="2、获取计算机的系统时间"></a>2、获取计算机的系统时间</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、定制时间格式"><a href="#3、定制时间格式" class="headerlink" title="3、定制时间格式"></a>3、定制时间格式</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date +"%F %T %Y %m %d %H %M %S"%F : 2020-04-03%T : 09:45:36%Y : 年%m : 月%d : 日%H : 小时%M : 分钟%S : 秒<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：获取系统时间，时间格式要求20200403</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date +"%Y%m%d"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、设置计算机的系统时间（慎用）"><a href="#4、设置计算机的系统时间（慎用）" class="headerlink" title="4、设置计算机的系统时间（慎用）"></a>4、设置计算机的系统时间（慎用）</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date -s "年-月-日 小时:分钟:秒"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把当前系统时间设置为2020-04-10</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date -s "2020-04-10"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、ntpdate手工同步时间"><a href="#5、ntpdate手工同步时间" class="headerlink" title="5、ntpdate手工同步时间"></a>5、ntpdate手工同步时间</h2><p>如果时间错乱了，没有关系，只需要使用ntpdate手工重置一下即可。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate cn.ntp.org.cn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二、普通权限rwx"><a href="#二、普通权限rwx" class="headerlink" title="二、普通权限rwx"></a>二、普通权限rwx</h1><h2 id="1、rwx对文件的影响"><a href="#1、rwx对文件的影响" class="headerlink" title="1、rwx对文件的影响"></a>1、rwx对文件的影响</h2><h3 id="☆-r对文件的影响"><a href="#☆-r对文件的影响" class="headerlink" title="☆ r对文件的影响"></a>☆ r对文件的影响</h3><ul><li><p>针对==目录==</p><p>一个目录拥有r权限，说明可以查看该==目录里的内容==（ls命令列出）</p></li><li><p>针对==普通文件==</p><p>一个普通文件拥有r权限，说明可以查看该==文件的内容==(cat/head/tail/less/more等命令查看)</p></li><li><p>读权限==<strong>r</strong>==（read）用数字表示是**==4==**</p></li></ul><h3 id="☆-w对文件的影响"><a href="#☆-w对文件的影响" class="headerlink" title="☆ w对文件的影响"></a>☆ w对文件的影响</h3><ul><li><p>针对==目录==</p><p>一个目录拥有w权限，说明可以在该目录里==<strong>创建、删除、重命名</strong>==等操作（mkdir/touch/mv/rm等）</p></li><li><p>针对==普通文件==</p><p>一个普通文件拥有w权限，说明可以==<strong>修改</strong>==该==文件的<strong>内容</strong>==（vi/vim编辑器编辑文件）</p></li><li><p>写权限==<strong>w</strong>==（write）用数字表示是==<strong>2</strong>==</p></li></ul><blockquote><p>如果我们想在Linux系统中删除某个文件，不是看这个文件有什么权限，而是要看这个文件所处的上级目录是否具有w权限。</p></blockquote><h3 id="☆-x对文件的影响"><a href="#☆-x对文件的影响" class="headerlink" title="☆ x对文件的影响"></a>☆ x对文件的影响</h3><ul><li><p>针对==目录==</p><p>一个目录拥有x权限，说明可以==<strong>进入或切换到</strong>==该目录里（cd命令）</p></li><li><p>针对==普通文件==</p><p>一个普通文件拥有x权限，说明可以==<strong>执行</strong>==该文件（一般程序文件、脚本文件、命令都需要执行权限）</p><p>shell.sh =&gt; 类似Windows中的exe文件</p></li><li><p>执行权限==<strong>x</strong>==（execute）用数字表示是==<strong>1</strong>==</p></li></ul><h2 id="2、图解常见操作权限"><a href="#2、图解常见操作权限" class="headerlink" title="2、图解常见操作权限"></a>2、图解常见操作权限</h2><p>/</p><p>/dir1  /dir2</p><p>/dir1/file1</p><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403113406787.png" alt="image-20200403113406787"></p><h2 id="3、用户身份"><a href="#3、用户身份" class="headerlink" title="3、用户身份"></a>3、用户身份</h2><p>U ： user，代表文件的拥有者（默认为文件的创建者）</p><p>G ：group，与文件所属组同组的用户（组内用户）</p><p>O ：other，既不是拥有者，也不是所属组内的用户，这些用户就称之为其他用户</p><p>a = UGO，代表所有用户</p><h2 id="4、如何判断不同身份的用户对文件的权限"><a href="#4、如何判断不同身份的用户对文件的权限" class="headerlink" title="4、如何判断不同身份的用户对文件的权限"></a>4、如何判断不同身份的用户对文件的权限</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls -l或# ll注：ll代表红帽以及CentOS系统专有的一个命令，等价于ls -l。但是其他系统可能并不支持<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403114702172.png" alt="image-20200403114702172"></p><h2 id="5、权限的设置（重点）"><a href="#5、权限的设置（重点）" class="headerlink" title="5、权限的设置（重点）"></a>5、权限的设置（重点）</h2><p>① 字母方式（ugo + rwx）</p><p>② 数字方式（4 2 1）</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod [选项] 字母形式或数字形式 文件名称选项说明：-R : 递归设置，针对文件家（目录）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="☆-字母形式-三步走"><a href="#☆-字母形式-三步走" class="headerlink" title="☆ 字母形式(三步走)"></a>☆ 字母形式(三步走)</h3><p>第一步：确认给谁设置权限（u，g，o，ugo=a）</p><p>第二步：怎么设置权限（+， -， =）</p><p>第三步：授予什么样的权限（r，w，x）</p><p>案例：给readme.txt设置权限，要求文件拥有者rwx权限，所属组内用户rw，其他用户r权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod u=rwx,g=rw,o=r readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-数字形式-421"><a href="#☆-数字形式-421" class="headerlink" title="☆ 数字形式(421)"></a>☆ 数字形式(421)</h3><p>read = 4</p><p>write = 2</p><p>execute = 1</p><p>777</p><p>644</p><p>755</p><blockquote><p>7 = 4 + 2 + 1 = r + w + x = rwx</p><p>6 = 4 + 2 = rw</p><p>5 = 4 + 1 = rx</p></blockquote><p>案例：设置shop文件夹权限为777（所有拥有都拥有rwx）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod -R 777 shop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、练习题"><a href="#6、练习题" class="headerlink" title="==6、练习题=="></a>==6、练习题==</h2><ol><li>创建5个用户user01~user05和一个admin组</li><li>将user01~user03用户加入到admin组里</li><li>user01用户在其家目录里创建file1~file3三个文件</li><li>user02用户编辑/home/user01/file1文件的内容：good good study,day day up!</li><li>user05用户往/home/user01/file1文件里追加内容：I known</li><li>user04用删除/home/user01家目录的所有文件</li></ol><h1 id="三、高级权限"><a href="#三、高级权限" class="headerlink" title="三、高级权限"></a>三、高级权限</h1><h2 id="1、在Linux系统中有哪些高级权限"><a href="#1、在Linux系统中有哪些高级权限" class="headerlink" title="1、在Linux系统中有哪些高级权限"></a>1、在Linux系统中有哪些高级权限</h2><p>① 冒险位（u + s） =&gt; S</p><ul><li>冒险位，指文件操作者(用户)==临时拥有==文件==拥有者==的权限</li><li>冒险位，一般针对的是==命令==或者==脚本文件==</li><li>冒险位，用字母表示是==s或S==；数字表示是==4==</li><li>冒险位的设置：<code>chmod u+s 文件名</code>或者<code>chmod 4xxx 文件名</code></li></ul><blockquote><p>主要针对可执行的二进制文件，如/usr/bin/passwd文件</p></blockquote><p>② 强制位（g + s）</p><ul><li><p>强制位，一般针对的是==目录==</p><p>如果一个目录拥有强制位，那么==任何用户==在该目录里所创建的任何文件的==属组==都会继承==该目录的属组==。</p></li><li><p>强制位，用字母表示是==s或S==；数字表示是==2==</p></li><li><p>强制位的设置：<code>chmod g+s 文件名</code>或者<code>chmod 2xxx 文件名</code></p></li></ul><blockquote><p>主要针对目录进行设置，比如shop目录，文件拥有者root，所属组itheima，g+s</p><p>这样以后我们在shop目录下创建的所有文件的所属组都会继承shop文件夹的itheima</p></blockquote><p>③ 粘滞位（o + t） =&gt; T</p><ul><li><p>粘滞位，一般针对的是==公共目录==</p><p>如果一个公共目录拥有粘滞位，那么该目录下的文件，只有==root==和==文件的创建==者可以删除，其他人只能自己管理自己。（A用户不能删除B用户创建的文件）</p></li><li><p>粘滞位，用字母表示是==t或T==；数字表示是==1==</p></li><li><p>粘滞位的设置：<code>chmod o+t 文件名</code>或者<code>chmod 1xxx 文件名</code></p></li></ul><h1 id="四、默认权限-了解"><a href="#四、默认权限-了解" class="headerlink" title="四、默认权限(了解)"></a>四、默认权限(了解)</h1><h2 id="1、什么是文件的默认权限"><a href="#1、什么是文件的默认权限" class="headerlink" title="1、什么是文件的默认权限"></a>1、什么是文件的默认权限</h2><p>所谓文件的默认权限(遮罩权限)，是指用户创建文件后，==文件天生==就有的权限，不需要设置。</p><h2 id="2、文件默认权限由谁控制"><a href="#2、文件默认权限由谁控制" class="headerlink" title="2、文件默认权限由谁控制"></a>2、文件默认权限由谁控制</h2><p>文件默认权限由一个叫做**==umask==**的东西来控制。</p><h2 id="3、文件或目录的最高权限"><a href="#3、文件或目录的最高权限" class="headerlink" title="3、文件或目录的最高权限"></a>3、文件或目录的最高权限</h2><p>目录：最高权限0777，简写就是777</p><p>文件：最高权限0666，简写就是666</p><p>默认目录权限 = 0777 - umask</p><p>默认文件权限 = 0666 - umask</p><h2 id="4、获取umask值"><a href="#4、获取umask值" class="headerlink" title="4、获取umask值"></a>4、获取umask值</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># umask<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>默认umask值，root账号0022</p><h2 id="5、临时或永久更改umask值（慎用，只了解）"><a href="#5、临时或永久更改umask值（慎用，只了解）" class="headerlink" title="5、临时或永久更改umask值（慎用，只了解）"></a>5、临时或永久更改umask值（慎用，只了解）</h2><h3 id="☆-临时设置umask值"><a href="#☆-临时设置umask值" class="headerlink" title="☆ 临时设置umask值"></a>☆ 临时设置umask值</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># umask 0002只在当前终端当前进程中有效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-永久设置umask值（写入系统配置）"><a href="#☆-永久设置umask值（写入系统配置）" class="headerlink" title="☆ 永久设置umask值（写入系统配置）"></a>☆ 永久设置umask值（写入系统配置）</h3><p>配置文件说明：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">全局配置文件（针对所有用户所有进程） =&gt;  针对所有用户有效/etc/profile系统和用户的环境变量信息，当用户第一次登录时,该文件被读取/etc/bashrc每个运行的bash信息（系统别名、函数及默认权限的定义），当bash被打开时,该文件被读取局部配置文件（针对某个特定用户以及用户的所有进程）=&gt;  针对当前用户有效~/.bashrc当前用户的bash信息，当用户登录和每次打开新的shell时该文件被读取~/.bash_profile当前用户的环境变量，当用户登录时，该文件被读取~/.bash_history保存当前用户历史命令的文件~/.bash_logout当用户退出bash或者终端时，会首先执行该文件里的代码，然后再退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：更改umask值，针对所有用户有效，umask值设置为0002</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/bashrc...umask 0002# source /etc/bashrc   =&gt;   让umask值立即生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：更改umask值，只针对itheima用户有效，umask值设置为0002</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - itheima[itheima@localhost ~] # vim ~/.bashrc...umask 0002<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="五、更改文件的拥有者以及所属组"><a href="#五、更改文件的拥有者以及所属组" class="headerlink" title="五、更改文件的拥有者以及所属组"></a>五、更改文件的拥有者以及所属组</h1><h2 id="1、什么是拥有者什么是所属组"><a href="#1、什么是拥有者什么是所属组" class="headerlink" title="1、什么是拥有者什么是所属组"></a>1、什么是拥有者什么是所属组</h2><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403153324872.png" alt="image-20200403153324872"></p><h2 id="2、更改文件的拥有者与所属组"><a href="#2、更改文件的拥有者与所属组" class="headerlink" title="2、更改文件的拥有者与所属组"></a>2、更改文件的拥有者与所属组</h2><p>有些软件或程序要求比较特殊，其如果想正常运行，拥有者与所属组必须是某个值。</p><blockquote><p>如mysql数据库，其要求系统中必须有一个mysql的系统账号，而且要求其安装目录的文件拥有者以及所属组都必须是mysql</p></blockquote><h2 id="3、chown更改文件拥有者"><a href="#3、chown更改文件拥有者" class="headerlink" title="3、chown更改文件拥有者"></a>3、chown更改文件拥有者</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown [选项] 新文件拥有者 文件名称选项说明：-R ：递归设置，主要针对文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4、chgrp更改文件的所属组"><a href="#4、chgrp更改文件的所属组" class="headerlink" title="4、chgrp更改文件的所属组"></a>4、chgrp更改文件的所属组</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chgrp [选项] 新文件所属组 文件名称选项说明：-R ：递归设置，主要针对文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5、chown同时修改文件属主以及属组"><a href="#5、chown同时修改文件属主以及属组" class="headerlink" title="5、chown同时修改文件属主以及属组"></a>5、chown同时修改文件属主以及属组</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown [选项] 新的文件拥有者:新的文件所属组 文件名称# chown [选项] 新的文件拥有者.新的文件所属组 文件名称选项说明：-R ：递归设置，主要针对文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="六、ACL访问权限控制（扩展）"><a href="#六、ACL访问权限控制（扩展）" class="headerlink" title="六、ACL访问权限控制（扩展）"></a>六、ACL访问权限控制（扩展）</h1><h2 id="1、ACL能做什么"><a href="#1、ACL能做什么" class="headerlink" title="1、ACL能做什么"></a>1、ACL能做什么</h2><ol><li>ACL访问控制策略可以作为前面所讲==权限的补充==，==更加细==的来控制文件的权限</li><li>ACL策略可以==只针对某个用户==在文件上有相应权限</li><li>ACL策略也可以==只针对多个用户或者一个组==里的所有用户在文件上有相应权限</li></ol><h2 id="2、getfacl"><a href="#2、getfacl" class="headerlink" title="2、getfacl"></a>2、getfacl</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># getfacl = get + file + acl =&gt; 获取某个文件的ACL权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取readme.txt文件的ACL权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># getfacl readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、setfacl"><a href="#3、setfacl" class="headerlink" title="3、setfacl"></a>3、setfacl</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">常用选项：-m 修改或者设置ACL策略-R 递归授权，对目录下已存在的目录或文件有acl策略，但新建的文件没有-x 去掉某个用户或者某个组的权限-b 删除所有的acl策略-d 默认ACL策略，只针对目录，该目录下新建的目录和文件都会继承acl策略mask: 定义除其他人和所有者外的最大权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：修改readme.txt文件的ACL权限（给itheima这个账号开通rw权限）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -m u:itheima:rw readme.txtu代表useritheima代表具体的某个用户rw代表权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：修改shop文件夹的ACL权限（给itheima组开通rwx权限）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -R -m g:itheima:rwx shopg代表groupitheima代表具体的某个用户组名称rwx代表用户组权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：删除某个用户权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -x u:itheima readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除所有的ACL权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -b readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="七、Linux下软件的安装方式"><a href="#七、Linux下软件的安装方式" class="headerlink" title="七、Linux下软件的安装方式"></a>七、Linux下软件的安装方式</h1><h2 id="1、Linux下有哪些软件安装方式"><a href="#1、Linux下有哪些软件安装方式" class="headerlink" title="1、Linux下有哪些软件安装方式"></a>1、Linux下有哪些软件安装方式</h2><p>① RPM软件包管理（软件名称.rpm）</p><p>② YUM软件包管理（使用yum命令install + 软件名称） =&gt; 下载 + 安装一体化</p><p>③ 源码编译安装（相对来说是最复杂的一种方式）</p><h2 id="2、软件包类型"><a href="#2、软件包类型" class="headerlink" title="2、软件包类型"></a>2、软件包类型</h2><h3 id="☆-二进制软件包-rpm包"><a href="#☆-二进制软件包-rpm包" class="headerlink" title="☆ 二进制软件包(rpm包)"></a>☆ 二进制软件包(rpm包)</h3><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403162253401.png" alt="image-20200403162253401"></p><ol><li>二进制包，指的是已经[^编译]好了的软件包，只需要==直接安装==就可以使用。</li><li>二进制包，==不需要编译==，直接下载安装即可</li><li>二进制包，需要根据自己的计算机CPU以及操作系统去==选择合适==的</li></ol><blockquote><p>类似Windows中的.exe文件，如qq.exe</p></blockquote><h3 id="☆-软件源码包（重点）"><a href="#☆-软件源码包（重点）" class="headerlink" title="☆ 软件源码包（重点）"></a>☆ 软件源码包（重点）</h3><p>什么是源码包？有什么特点？</p><ol><li>源码包，指的是程序员写的原始的==程序代码文件==，==不能==够==直接==在计算机上==运行==。</li><li>源码包，需要进行==编译==，变成==二进制的软件包后==，才可安装使用</li><li>源码包，一般可以在任何的计算机上安装使用</li><li>源码包，命名方式一般为：<ul><li><code>软件包名.tar.gz</code></li><li><code>软件包名.tar.bz2</code></li><li><code>软件包名.tar.xz</code></li><li><code>软件包名.zip</code></li></ul></li></ol><blockquote><p>类似于腾讯QQ开发工程师 =&gt; QQ的源代码发给你了 .c =&gt;  编译 =&gt; QQ.exe文件</p></blockquote><h3 id="☆-二进制源码包-src-rpm"><a href="#☆-二进制源码包-src-rpm" class="headerlink" title="☆ 二进制源码包(.src.rpm)"></a>☆ 二进制源码包(.src.rpm)</h3><p>什么是二进制源码包？有什么特点？</p><ol><li>二进制源码包，是一个==半成品==，安装后不能直接使用</li><li>二进制源码包，需要使用<code>rpmbuild</code>工具重建成真正的<code>rpm</code>包或者重建成源码包才可安装使用</li><li>二进制源码包，命名方式一般为：<ul><li>mysql-community-5.7.25-1.el6.==src.==rpm</li><li>mysql-community-5.7.25-1.el7.==src==.rpm</li></ul></li></ol><h2 id="3、常见的二进制软件包"><a href="#3、常见的二进制软件包" class="headerlink" title="3、常见的二进制软件包"></a>3、常见的二进制软件包</h2><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403163136297.png" alt="image-20200403163136297"></p><h2 id="4、总结二进制包和源码包区别"><a href="#4、总结二进制包和源码包区别" class="headerlink" title="4、总结二进制包和源码包区别"></a>4、总结二进制包和源码包区别</h2><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%B8%89.assets/image-20200403163218589.png" alt="image-20200403163218589"></p><h2 id="5、二进制软件包的安装方式"><a href="#5、二进制软件包的安装方式" class="headerlink" title="5、二进制软件包的安装方式"></a>5、二进制软件包的安装方式</h2><p>① 基于RPM进行安装（先下载软件然后本地进行安装）</p><p>② 基于YUM进行安装（在线下载然后安装）</p><h2 id="6、RPM软件包安装"><a href="#6、RPM软件包安装" class="headerlink" title="6、RPM软件包安装"></a>6、RPM软件包安装</h2><h3 id="☆-获取软件"><a href="#☆-获取软件" class="headerlink" title="☆ 获取软件"></a>☆ 获取软件</h3><p>Linux只是内核，Linux发行版本：GNU/Linux</p><ol><li>RedHat/Centos光盘或官方网站 <a href="ftp://ftp.redhat.com/">ftp://ftp.redhat.com</a></li><li>推荐网站<ul><li><a href="http://www.rpmfind.net/">www.rpmfind.net</a></li><li>rpm.pbone.net</li></ul></li><li>相应软件官方网站 <ul><li><a href="http://www.mysql.com/">http://www.mysql.com</a></li><li><a href="http://nginx.org/packages/">http://nginx.org/packages/</a></li></ul></li></ol><h3 id="☆-如何选择合适的软件"><a href="#☆-如何选择合适的软件" class="headerlink" title="☆ 如何选择合适的软件"></a>☆ 如何选择合适的软件</h3><ol><li>选择==适合当前系统==的版本号<ul><li>找不到适合的，才去尝试别的系统版本号  </li><li>el6兼容el5；el5无法安装 el6</li></ul></li><li>选择==适合当前计算机cpu==的架构<ul><li>x86_64包，只能安装在64位的系统上 </li><li>i386,i586,i686的软件包可以安装在32和64位系统上  </li><li>noarch表示这个软件包与硬件构架无关，可以通用  </li><li>32位系统不能安装64位包</li></ul></li></ol><p><strong>建议</strong>： 建议不要跨大版本号去安装软件包，尽量使用当前系统版本自带软件包安装</p><h3 id="☆-rpm软件包的安装、卸载以及升级"><a href="#☆-rpm软件包的安装、卸载以及升级" class="headerlink" title="☆ rpm软件包的安装、卸载以及升级"></a>☆ rpm软件包的安装、卸载以及升级</h3><p>安装：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ivh 软件包名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>卸载：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -e 软件包名称 [--nodeps强制]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查询：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -q 软件名称或# rpm -qa |grep 软件名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>升级：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -Uvh 软件包名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注：rpm -Uvh不仅可以升级软件，其实它也可以安装软件。</p></blockquote><p>RPM包管理：以上操作都比较简单，但是在实际应用过程中，可能会遇到问题，很多rpm软件包在安装时都会提示软件依赖。那这个问题如何解决呢？</p><p>方法一：根据提示一个一个软件包安装，先解决依赖在回来安装软件</p><p>方法二：使用yum  install 安装rpm软件包</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install 软件名称.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>以上安装方式的最大好处是，如果安装软件时，产生了依赖，不用担心，yum会自动帮助我们解决这些问题的！</p></blockquote><h2 id="7、源码安装"><a href="#7、源码安装" class="headerlink" title="7、源码安装"></a>7、源码安装</h2><h3 id="☆-获取软件的源码包"><a href="#☆-获取软件的源码包" class="headerlink" title="☆ 获取软件的源码包"></a>☆ 获取软件的源码包</h3><p>可以去某个软件的官网获取，官网一般摆放的都是源码包*.tar.gz</p><h3 id="☆-源码安装三步走"><a href="#☆-源码安装三步走" class="headerlink" title="☆ 源码安装三步走"></a>☆ 源码安装三步走</h3><p>① 配置./configure（配置软件安装路径，也可以不配置，不配置使用默认路径）</p><p>② 编译make（把软件的源代码做成类似rpm的可以直接按照的软件）</p><p>③ 安装make install（把刚才编译好的程序进行安装到Linux系统）</p><h3 id="☆-使用源码安装安装cmatrix代码雨"><a href="#☆-使用源码安装安装cmatrix代码雨" class="headerlink" title="☆ 使用源码安装安装cmatrix代码雨"></a>☆ 使用源码安装安装cmatrix代码雨</h3><p>第一步：对软件进行解压缩</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zxf cmatrix-1.2a.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p># tar   xf   cmatrix-1.2a.tar.gz，因为默认解压都是使用gzip工具</p></blockquote><p>第二步：进入到cmatrix文件夹，然后对软件进行配置</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd cmatrix-1.2a# ./configure=&gt;  设置软件默认安装的位置等信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：编译软件，使用make命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># make<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>常见错误：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cmatrix.c:37:20: fatal error: curses.h: No such file or directory出现以上问题的主要原因在于系统中没有找到ncurses-devel软件包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解决方案：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install gcc gcc-c++ ncurses-devel -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：安装软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>总结：</p><p>进入解压后的软件目录  =&gt;  ./configure =&gt; make =&gt; make install</p><h3 id="☆-测试代码雨效果"><a href="#☆-测试代码雨效果" class="headerlink" title="☆ 测试代码雨效果"></a>☆ 测试代码雨效果</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cmatrix<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux高级命令（扩展）二</title>
      <link href="/2023/12/23/linux-gao-ji-ming-ling-kuo-zhan-er/"/>
      <url>/2023/12/23/linux-gao-ji-ming-ling-kuo-zhan-er/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux高级命令（扩展）"><a href="#Linux高级命令（扩展）" class="headerlink" title="Linux高级命令（扩展）"></a>Linux高级命令（扩展）</h1><h1 id="一、Linux下用户管理"><a href="#一、Linux下用户管理" class="headerlink" title="一、Linux下用户管理"></a>一、Linux下用户管理</h1><h2 id="1、用户概念以及基本作用"><a href="#1、用户概念以及基本作用" class="headerlink" title="1、用户概念以及基本作用"></a>1、用户概念以及基本作用</h2><p><strong>用户：</strong>指的是==Linux操作系统中==用于管理系统或者服务的==人==</p><p>一问：管理系统到底在<strong>管理什么</strong>？</p><p>答：Linux下一切皆<strong>文件</strong>，所以用户管理的是相应的==文件==</p><p>二问：<strong>如何管理</strong>文件呢？</p><p>答：</p><ol><li>文件==基本管理==，比如文件的创建、删除、复制、查找、打包压缩等；文件的权限增加、减少等；</li><li>文件==高级管理==，比如<strong>程序文件</strong>的安装、卸载、配置等。终极目的是对外提供稳定的服务。</li></ol><h2 id="2、用户的类别"><a href="#2、用户的类别" class="headerlink" title="2、用户的类别"></a>2、用户的类别</h2><p>① root超级管理员，==在Linux系统中拥有至高无上的权力==。</p><p>② 系统用户，CentOS6=&gt; 1 ~ 499，CentOS7=&gt; 1 ~ 999，系统账号==默认不允许登录==</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd -s /sbin/nologin 系统用户<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>③ 普通用户，大部分是由root管理员创建的，UID的取值范围：CentOS6=&gt; 500 ~ 60000，CentOS7=&gt; 1000 ~ 60000，==对系统进行有限的管理维护操作==</p><p>总结</p><p>① 用户指的是操作系统上==管理系统或服务==的==人==，是人，就有相关的==属性信息==</p><p>② 用户的属性信息包括但不限于，如：==家目录、唯一身份标识(UID)、所属组(GID)==等</p><p>③ 今天我们讨论的用户指的是==普通用户==，即由管理员创建的用户</p><h2 id="3、用户管理"><a href="#3、用户管理" class="headerlink" title="3、用户管理"></a>3、用户管理</h2><p>与用户管理相关的几个单词 =&gt; user（用户）、add（添加）、mod（修改）、del（删除）</p><p>① 用户添加  useradd</p><p>② 用户修改  usermod</p><p>③ 用户删除  userdel</p><h3 id="☆-useradd用户添加"><a href="#☆-useradd用户添加" class="headerlink" title="☆ useradd用户添加"></a>☆ useradd用户添加</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd [选项 选项的值] 新用户名称-u指定用户uid，唯一标识，必须唯一-g指定用户的默认组(主组)-G指定用户附加组(一个用户可以加入多个组，但是默认组只有一个)-d指定用户家目录(每个用户都有一个自己的家，并且默认在/home/xxx)-s指定用户默认shell，常见/bin/bash或/sbin/nologin扩展：-r  指定用户为系统用户，如创建一个系统账号mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：在Linux系统中创建一个账号zhangsan</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>问题：一个用户创建成功后，如何判断是否添加到系统？</p><p>答：第一种方案我们可以通过tail命令查看/etc/passwd文件</p><p>​ 第二种方案我们可以使用id命令查看zhangsan信息</p><p>案例：在Linux系统中创建一个账号lisi，指定用户的家目录为/rhome/lisi</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /rhome# useradd -d /rhome/lisi lisi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>当我们为用户自定义家目录时，其上级目录必须是真实存在的，如/rhome</p></blockquote><p>案例：在Linux系统中创建一个mysql账号，要求真实存在的，但是其不允许登录操作系统</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd -s /sbin/nologin mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：在Linux系统中创建一个mysql系统账号，要求真实存在，但是不允许登录操作系统</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># userdel -r mysql# useradd -r -s /sbin/nologin mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-与用户相关的文件"><a href="#☆-与用户相关的文件" class="headerlink" title="☆ 与用户相关的文件"></a>☆ 与用户相关的文件</h3><p>Linux中一切皆文件，所以保存用户的信息的也是一个文件 =&gt; /etc/passwd</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/passwdroot:x:0:0:root:/root:/bin/bash第1列：用户名称第2列：用户密码，使用一个x占位符，真实密码存储在/etc/shadow文件中第3列：用户的编号UID，0，1-999，1000 ~ 60000第4列：用户的主组编号GID第5列：用户的备注信息（扩展，可以使用-c进行指定） useradd -c "mysql" mysql第6列：用户的家目录，/root，超级管理员的家/home，普通账号的家第7列：用户的Shell文件，常见/bin/bash或/sbin/nologin=&gt;/bin/false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-usermod用户修改"><a href="#☆-usermod用户修改" class="headerlink" title="☆ usermod用户修改"></a>☆ usermod用户修改</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod [选项 选项的值] 用户名称-u指定用户uid，唯一标识，必须唯一-g指定用户的默认组(主组)-G指定用户附加组(一个用户可以加入多个组，但是默认组只有一个)-d指定用户家目录(每个用户都有一个自己的家，并且默认在/home/xxx)-s指定用户默认shell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：修改zhangsan账号的主组为itheima组（只能指定一个）</p><p>① 可以获取itheima组的编号信息GID</p><p>② 使用usermod  -g  GID编号修改某个用户的主组信息</p><blockquote><p>其实在usermod修改用户的主组中，usermod  -g  可以使用GID编号也可以使用组名称</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cat /etc/group |grep itheima# usermod -g 1000 zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>或</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -g itheima zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：修改lisi账号的附加组，将其添加到itheima中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -G 1000 lisi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -G itheima lisi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：创建一个itcast组，在创建一个wangwu的账号，修改wangwu的附加组为itcast与itheima</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupadd itcast# useradd wangwu# usermod -G itcast,itheima wangwu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>问题：如果一个用户同时拥有多个附属组，怎么查看呢？</p><p>答：使用id命令即可</p><p>案例：修改用户zhangsan的家目录为/rhome/zhangsan（默认/home/zhangsan）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /rhome/zhangsan# usermod -d /rhome/zhangsan zhangsan# su - zhangsan-bash-4.2$出现以上问题的主要原因在于：我们迁移用户的家目录时，没有迁移家目录中的配置文件"家具"解决方案：① 家目录已经迁移，我们把/etc/skel中的文件，copy到新家中# cp -a /etc/skel/. /rhome/zhangsan/选项说明：-a ：all所有，复制时，保留文件的原有属性② 家目录还没有迁移，准备迁移时，使用usermod -md /rhome/zhangsan 用户名-m ：move，迁移家目录时，把"家具"一起迁移到新的家目录# usermod -md /rhome/zhangsan zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：要求/rhome/zhangsan必须是真实存在的！</p></blockquote><p>案例：当我们创建了某个账号，但是不希望这个账号登录操作系统</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -s /sbin/nologin 用户名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-userdel用户的删除"><a href="#☆-userdel用户的删除" class="headerlink" title="☆ userdel用户的删除"></a>☆ userdel用户的删除</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># userdel [选项] 用户名称选项说明：-r ：删除用户的同时，删除用户的家目录-f ：强制删除用户（即使用户处于登录状态）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：删除zhangsan这个账号</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># userdel zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除zhangsan这个账号，同时删除这个账号的家</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># userdel -r zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除某个正在使用的账号（强制删除）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># userdel -f zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、用户密码"><a href="#4、用户密码" class="headerlink" title="4、用户密码"></a>4、用户密码</h2><h3 id="☆-passwd修改用户密码"><a href="#☆-passwd修改用户密码" class="headerlink" title="☆ passwd修改用户密码"></a>☆ passwd修改用户密码</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># passwd [用户名称]说明：1.管理员root可以给任何用户修改密码2.普通用户可以自己给自己修改密码，但是密码复杂度要符合规范(大小写、特殊字符、长度)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：使用root账号给itheima用户修改密码，新密码为123456</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - root# passwd itheimaChanging password for user itheima.New password:BAD PASSWORD: The password is shorter than 8 charactersRetype new password:passwd: all authentication tokens updated successfully.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：切换到itheima这个账号，自己给自己修改密码（密码规范）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - itheima# passwdChanging password for user itheima.Changing password for itheima.(current) UNIX password:New password:Retype new password:passwd: all authentication tokens updated successfully.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-–stdin修改用户密码"><a href="#☆-–stdin修改用户密码" class="headerlink" title="☆ –stdin修改用户密码"></a>☆ –stdin修改用户密码</h3><p>–stdin ：标准输入</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo 123 |passwd --stdin itheima# history -c =&gt;         清除history历史记录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意：以上方式操作非常简单，但是以上命令会留在history历史命令中！</p></blockquote><h2 id="5、chage更改用户的账号信息"><a href="#5、chage更改用户的账号信息" class="headerlink" title="5、chage更改用户的账号信息"></a>5、chage更改用户的账号信息</h2><p>背景：很多公司运维工程师刚入职，都会默认得到一个服务器的管理账号，密码默认，如123456，我们有没有办法让运维工程师在第一次登陆操作系统后，强制要求其更新密码。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chage --help-l：列出用户的详细密码状态;-d 日期：修改 /etc/shadow 文件中指定用户密码信息的第3个字段，也就是最后一次修改密码的日期，格式为 YYYY-MM-DD;-m 天数：修改密码最短保留的天数，也就是 /etc/shadow 文件中的第4个字段;注：几天后才能修改一次密码-M 天数：修改密码的有效期，也就是 /etc/shadow 文件中的第5个字段;注：每隔多少天更新一次密码-W 天数：修改密码到期前的警告天数，也就是 /etc/shadow 文件中的第6个字段;-i 天数：修改密码过期后的宽限天数，也就是 /etc/shadow 文件中的第7个字段;注：过期后还可以使用的天数，达到这个天数后，账号失效-E 日期：修改账号失效日期，格式为 YYYY-MM-DD，也就是 /etc/shadow 文件中的第8个字段;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==案例：新创建一个账号lamp，设置初始化密码为123456。要求用户第一次登陆后必须强制修改用户的密码。==</p><p>解决思路：把密码的最后修改时间重置为0（回到1970年1月1日）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd lamp# echo 123456 |passwd --stdin lamp# chage -d 0 lamp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>运行效果：</p><p> <img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%BA%8C.assets/image-20200401154801244.png" alt="image-20200401154801244"></p><p>案例：设置lamp账号的过期时间为2010-04-10</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chage -E "2020-04-10" lamp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：设置lamp账号的10天后过期（延伸）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chage -E $(date +%F -d '+10 days') lamp%F：YYYY-mm-dd，格式2020-04-01-d：多少天以后的日期<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：设置mysql用户60天后密码过期，至少7天后才能修改密码，密码过期前7天开始收到告警信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd mysql# echo 123456 |passwd --stdin mysql# chage -M 60 -m 7 -W 7 mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="☆-练习题-："><a href="#☆-练习题-：" class="headerlink" title="☆ ==练习题==："></a>☆ ==练习题==：</h2><p>创建3个普通用户stu1~stu3,要求如下：</p><ol><li>stu1默认创建，密码为123</li><li>stu2的家目录为/rhome/redhat/stu2,密码为123</li><li>stu3用户不能登录操作系统，密码为123</li></ol><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、用户组管理"><a href="#6、用户组管理" class="headerlink" title="6、用户组管理"></a>6、用户组管理</h2><h3 id="☆-用户和组的关系"><a href="#☆-用户和组的关系" class="headerlink" title="☆ 用户和组的关系"></a>☆ 用户和组的关系</h3><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%BA%8C.assets/image-20200401112755448.png" alt="image-20200401112755448"></p><p><strong>核心：</strong>==组的目的是为了方便管理用户==</p><ul><li>用户是操作系统上管理维护系统或服务的人</li><li>组是用户的一个==属性信息==</li><li>任何一个用户==默认都会有==一个==主组==(默认组)</li><li>一个用户除了主组也==可以有多个其他组==(<strong>附加组</strong>)</li></ul><p><strong>一问：</strong>用户的主组和附加组到底有啥关系呢？</p><p><strong>答：</strong>用户的主组和附加组==半毛钱关系都木有==</p><p><strong>二问：</strong>那要这个主组或者附加组有啥用呢？</p><p><strong>答：</strong>肯定是<strong>有用</strong>的，组的目的是方便管理用户，用户的目的是管理==操作文件==，文件就有==权限==这个属性。</p><ol><li>用户要操作一些文件，文件是由用户创建，不同用户创建的文件的==属性信息==也就不一样</li><li>文件的属性都有啥呢？比如，文件的==创建者==，文件==属于哪个组==，文件大小，文件时间等</li><li>其中，不同用户所创建的==文件的属组==就是==该用户的主组==(默认组)</li><li>A用户附加组也有可能是其他用户的主组，道理同上（权限章节再细细体会组的作用）</li></ol><h3 id="☆-用户组管理"><a href="#☆-用户组管理" class="headerlink" title="☆ 用户组管理"></a>☆ 用户组管理</h3><p>group组，添加add，修改mod，删除del</p><p>groupadd 添加用户组</p><p>groupmod 修改用户组</p><p>groupdel  删除用户组</p><h3 id="☆-添加用户组"><a href="#☆-添加用户组" class="headerlink" title="☆ 添加用户组"></a>☆ 添加用户组</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupadd [选项 选项的值] 用户组名称选项说明：-g ：创建用户组时指定用户组编号GID，0代表超级管理员root组，1-999代表系统用户组，1000以后代表普通用户组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：在系统中创建一个admin组</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupadd admin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：在系统中创建一个itcast组，并指定用户组的编号为1200</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupadd -g 1200 itcast<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>问题：用户组创建完成后，如何判断是否创建成功？</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail -1 /etc/group<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-与用户组相关的文件"><a href="#☆-与用户组相关的文件" class="headerlink" title="☆ 与用户组相关的文件"></a>☆ 与用户组相关的文件</h3><p>在Linux系统中，与用户组相关的文件 =&gt; /etc/group</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/grouproot:x:0:第1列：代表用户组的组名称第2列：代表用户组的组密码，使用一个x占位符（基本已经不使用了）第3列：代表用户的组ID编号GID的值第4列：代表用户组内的用户信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-修改用户组"><a href="#☆-修改用户组" class="headerlink" title="☆ 修改用户组"></a>☆ 修改用户组</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupmod [选项 选项的值] 用户组名称选项说明：-g ：gid缩写，代表修改用户所属组的ID编号-n ：name缩写，代表修改用户组的名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：更改itcast用户的GID编号（从1200 =&gt; 1005）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupmod -g 1005 itcast<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-删除用户组"><a href="#☆-删除用户组" class="headerlink" title="☆ 删除用户组"></a>☆ 删除用户组</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupdel 用户组的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：在Linux操作系统中，如果想删除某个用户组，必须要保证这个组不能是某个用户的主组。</p></blockquote><p>案例：删除itcast用户组</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupdel itcast<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除admin用户组</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupdel admin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7、附属组管理"><a href="#7、附属组管理" class="headerlink" title="7、附属组管理"></a>7、附属组管理</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># gpasswd [选项 选项的值] 用户组的名称-a ：添加用户到组，append追加-d ：从组中删除成员，delete移除-A ：指定管理员，Admin管理员-M ：指定组成员，可以批量添加用户到组中问题解析：-a与-M到底有啥区别？-a一次只能追加一个用户到附属组中（-a，append，追加的形式，原有用户不覆盖）-M一次可以追加多个用户到附属组中（覆盖追加，先把原有用户删除，然后添加我们的用户）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：创建3个用户user01~user03，将user01添加到sysadmin组里（附属组）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd user01# useradd user02# useradd user03# groupadd sysadmin① 方案1# usermod -G sysadmin user01② 方案2# gpasswd -a user01 sysadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：把user02、user03添加到sysadmin组中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">① 方案1# gpasswd -a user02 sysadmin# gpasswd -a user03 sysadmin② 方案2# gpasswd -M user02,user03 sysadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：从附属组中移除某个账号</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># gpasswd -d 移除的用户名称 附属组名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># gpasswd -d user03 sysadminRemoving user user03 from group sysadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="☆-练习题-：-1"><a href="#☆-练习题-：-1" class="headerlink" title="☆ ==练习题==："></a>☆ ==练习题==：</h2><p>1、创建一个admin组，组id为900</p><p>2、创建一个用户tom,并且admin组作为tom用户的附加组（要求在建立用户的时候就完成）,密码为123</p><p>3、创建一个用户jack,要求在建立用户之后使用gpasswd把jack加入到admin组，密码为123</p><p>4、给admin组设定一个默认密码为123 （gpasswd命令）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># gpasswd admin组名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>移除gpasswd -r  admin组名称，代表移除组密码</p></blockquote><p>5、把tom用户设定为admin组的组管理员</p><blockquote><p>gpasswd -A tom admin</p></blockquote><h2 id="☆-作业1"><a href="#☆-作业1" class="headerlink" title="☆ ==作业1=="></a>☆ ==作业1==</h2><ol><li><p>创建一个公司itcast，3个部门财务(cw)，人事(rs)，市场(sc)</p><p>说明：==实际是创建4个组==，分别为itcast、cw、rs、sc，没有包含的关系</p></li><li><p>每个部门创建2个用户，如 cw01 cw02，rs01，rs02，sc01，sc02；boss01管理公司所有部门；说明：boss01管理所有部门说明，boss01的附加组为财务、人事和市场部门</p></li><li><p>所有用户账号有效期3个月&lt;90天&gt;，第一次登录强制修改密码，每隔15天更新一次密码；默认密码为123456</p></li></ol><h2 id="☆-作业2"><a href="#☆-作业2" class="headerlink" title="☆ ==作业2=="></a>☆ ==作业2==</h2><ol><li>添加3个用户，用户harry，natasha，sarsh，要求harry，natasha用户的附加组为admin组，sarsh用户的登录shell为非交互式shell。密码均为redhat</li><li>修改harry用户的家目录为/home/heima/redhat/harry</li><li>修改natasha，sarsh用户的主组为heima，并且可以登录系统</li></ol><h1 id="二、文件权限管理"><a href="#二、文件权限管理" class="headerlink" title="二、文件权限管理"></a>二、文件权限管理</h1><h2 id="1、什么是权限"><a href="#1、什么是权限" class="headerlink" title="1、什么是权限"></a>1、什么是权限</h2><p><strong>权限：</strong>在计算机==系统中==，权限是指某个==计算机用户==具有==使用软件资源的权利==。</p><h2 id="2、权限的目的"><a href="#2、权限的目的" class="headerlink" title="2、权限的目的"></a>2、权限的目的</h2><p>文件权限的设置目的：==是想让某个用户有权利操作文件==</p><h2 id="3、权限的分类"><a href="#3、权限的分类" class="headerlink" title="3、权限的分类"></a>3、权限的分类</h2><ul><li><p><strong>普通权限</strong>rwx</p><p>用户正常情况去操作文件所具有的权限</p></li><li><p><strong>高级权限</strong>st</p><p>用户对某个文件操作有特殊需求，而普通权限不能满足，需要给文件设置高级权限</p></li><li><p><strong>默认权限</strong>umask</p><p>用户在系统中创建一个文件，该文件默认都会有一个权限，该权限是默认有的</p></li></ul><p><strong>注意：</strong></p><p>权限是==设置在文件上==的，而不是用户</p><h2 id="4、普通权限rwx（重点）"><a href="#4、普通权限rwx（重点）" class="headerlink" title="4、普通权限rwx（重点）"></a>4、普通权限rwx（重点）</h2><h3 id="☆-read读权限"><a href="#☆-read读权限" class="headerlink" title="☆ read读权限"></a>☆ read读权限</h3><ul><li><p>针对==目录==</p><p>一个目录拥有r权限，说明可以查看该==目录里的内容==（ls命令列出）</p></li><li><p>针对==普通文件==</p><p>一个普通文件拥有r权限，说明可以查看该==文件的内容==(cat/head/tail/less/more等命令查看)</p></li><li><p>读权限==<strong>r</strong>==（read）用数字表示是**==4==**</p></li></ul><h3 id="☆-write写权限"><a href="#☆-write写权限" class="headerlink" title="☆ write写权限"></a>☆ write写权限</h3><ul><li><p>针对==目录==</p><p>一个目录拥有w权限，说明可以在该目录里==<strong>创建、删除、重命名</strong>==等操作（mkdir/touch/mv/rm等）</p></li><li><p>针对==普通文件==</p><p>一个普通文件拥有w权限，说明可以==<strong>修改</strong>==该==文件的<strong>内容</strong>==（vi/vim编辑器编辑文件）</p></li><li><p>写权限==<strong>w</strong>==（write）用数字表示是==<strong>2</strong>==</p></li></ul><h3 id="☆-execute执行权限"><a href="#☆-execute执行权限" class="headerlink" title="☆ execute执行权限"></a>☆ execute执行权限</h3><ul><li><p>针对==目录==</p><p>一个目录拥有x权限，说明可以==<strong>进入或切换到</strong>==该目录里（cd命令）</p></li><li><p>针对==普通文件==</p><p>一个普通文件拥有x权限，说明可以==<strong>执行</strong>==该文件（一般程序文件、脚本文件、命令都需要执行权限）</p></li><li><p>执行权限==<strong>x</strong>==（execute）用数字表示是==<strong>1</strong>==</p></li></ul><p>rwx = 读写执行 = 4 + 2 + 1</p><h3 id="☆-没有权限"><a href="#☆-没有权限" class="headerlink" title="☆ -没有权限"></a>☆ -没有权限</h3><p>没有任何权限用横杠==-==表示，数字表示是==<strong>0</strong>==</p><h2 id="5、理解UGO"><a href="#5、理解UGO" class="headerlink" title="5、理解UGO"></a>5、理解UGO</h2><p>UGO，指的是==<strong>用户身份</strong>==，每个字母代表==不同的==用户身份。</p><ul><li><p>U（the user who owns it）</p><p>文件的==拥有者==(owner)或者==创建者==</p></li><li><p>G（other users in the file’s ==g==roup）</p><p>在文件的所属组（默认是创建文件的用户的主组）里的用户</p></li><li><p>O（==o==ther users ==not in== the file’s group）</p><p>既不是文件的创建者，也不在文件属组里的用户，称为其他人</p></li></ul><p>注意：</p><p>​除了上面ugo以外，还有一个字母==<strong>a</strong>==（all users）,表示==所有用户==，包含ugo</p><h2 id="6、查看文件的权限"><a href="#6、查看文件的权限" class="headerlink" title="6、查看文件的权限"></a>6、查看文件的权限</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls -l 文件名称或# ll 文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>注：如果查看一个文件夹的权限，建议使用-d</p></blockquote><p><img src="/../assets/blog_res/Linux%E9%AB%98%E7%BA%A7%E5%91%BD%E4%BB%A4%EF%BC%88%E6%89%A9%E5%B1%95%EF%BC%89%E4%BA%8C.assets/image-20231223170850987.png" alt="image-20231223170850987"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH远程管理服务</title>
      <link href="/2023/12/23/ssh-yuan-cheng-guan-li-fu-wu/"/>
      <url>/2023/12/23/ssh-yuan-cheng-guan-li-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="SSH远程管理服务"><a href="#SSH远程管理服务" class="headerlink" title="SSH远程管理服务"></a>SSH远程管理服务</h1><h1 id="一、SSH概述"><a href="#一、SSH概述" class="headerlink" title="一、SSH概述"></a>一、SSH概述</h1><p>​     熟悉Linux的人那肯定都对SSH不陌生。ssh是一种用于安全访问远程服务器的协议，远程管理工具。它之所以集万千宠爱为一身，就是因为它的安全性。那么它到底是怎么样来保证安全的呢？到底是如何工作的呢？</p><h2 id="1、加密算法（了解）"><a href="#1、加密算法（了解）" class="headerlink" title="1、加密算法（了解）"></a>1、加密算法（了解）</h2><h3 id="☆-对称加密算法-DES"><a href="#☆-对称加密算法-DES" class="headerlink" title="☆ 对称加密算法(DES)"></a>☆ 对称加密算法(DES)</h3><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523093832693.png" alt="image-20200523093832693"></p><ol><li>Jack想要给Harry发送信息一个信息Ａ，为了安全起见，Jack使用一种加密算法，比如给信息通过加一个数字B得到一个新的数字C，然后以公开的方式发送给Harry</li><li>Harry接受到数字C后，通过减去一个数字B得到最终的真正的信息A</li><li>Jack发送给Harry的信息A称为明文；加密后的信息C称为密文；加密用的B称之为密钥</li><li>加密算法（方法）可以很复杂，不一定是加和减，也可以是乘和除等等</li><li>以上过程中，加密和解密的秘钥是同一个密钥B</li></ol><p><strong>总结：</strong></p><ol><li>发送方使用**==密钥==<strong>将==<strong>明文数据</strong>==加密成</strong>==密文==**，然后发送出去</li><li>接收方收到密文后，使用==同一个密钥==将密文解密成明文进行读取</li></ol><h3 id="☆-非对称加密算法-RSA"><a href="#☆-非对称加密算法-RSA" class="headerlink" title="☆ 非对称加密算法(RSA)"></a>☆ 非对称加密算法(RSA)</h3><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523095219704.png" alt="image-20200523095219704"></p><ol><li>首先Harry生成一对有相互关系的密钥对，比如e（公钥）和f（私钥）；其中公钥是可以公开给所有人的，私钥必须Harry本人私自留存，不得泄露。</li><li>当Jack发送请求时，Harry会把自己的公钥e发送给Jack</li><li>Jack拿着Harry的公钥e通过一种加密算法将信息Ａ加密成密文Ｃ，以公开的方式发送给Harry</li><li>Harry收到密文Ｃ后，通过自己本地留存的私钥ｆ将密文解密成最终的信息A</li><li>以上过程中，加密使用的是公钥e，解密使用的是私钥f；使用不同的秘钥加解密</li></ol><p><strong>总结：</strong></p><ol><li>发送方使用接收方发送过来的**==公钥==<strong>将==<strong>明文数据</strong>==加密成</strong>==密文==**，然后发送出去</li><li>接收方收到密文后，使用自己本地留存的==<strong>私钥</strong>==将密文解密成明文进行读取</li></ol><h3 id="☆-对称加密与非对称加密区别"><a href="#☆-对称加密与非对称加密区别" class="headerlink" title="☆ 对称加密与非对称加密区别"></a>☆ 对称加密与非对称加密区别</h3><ul><li>==<strong>对称加密</strong>==<ol><li>使用==同一个密钥==进行加密和解密，密钥容易泄露</li><li>==加密速度快==，效率高，==数据传输==速度==快==，安全性较==低==</li></ol></li><li>==<strong>非对称加密</strong>==<ol><li>使用==不同的密钥==（公钥和私钥）进行加密和解密</li><li>==加密速度==远远==慢==于对称加密，==数据传输==速度==慢==，安全性较==高==</li></ol></li></ul><h2 id="2、环境准备（任务背景）"><a href="#2、环境准备（任务背景）" class="headerlink" title="2、环境准备（任务背景）"></a>2、环境准备（任务背景）</h2><p>第一步：把现有的CentOS7操作系统恢复快照（刚装完系统的Linux服务器） =&gt; 母机（模板机）</p><p>第二步：对CentOS7操作系统进行克隆，生成JumpServer与RealServer（线上生产服务器）</p><table><thead><tr><th>编号</th><th>IP地址</th><th>主机名称</th><th>角色信息</th></tr></thead><tbody><tr><td>1</td><td>10.1.1.37(NAT)<br>11.1.1.10(仅主机)</td><td>jumpserver.itcast.cn</td><td>JumpServer</td></tr><tr><td>2</td><td>11.1.1.100(仅主机)</td><td>realserver.itcast.cn</td><td>RealServer</td></tr></tbody></table><h2 id="3、SSH基于用户名密码的认证原理"><a href="#3、SSH基于用户名密码的认证原理" class="headerlink" title="3、SSH基于用户名密码的认证原理"></a>3、SSH基于用户名密码的认证原理</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh [选项] 远程服务器的用户名@远程服务器的IP地址选项说明：-p：指定ssh服务的端口号，默认为22<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：通过JumpServer与RealServer远程连接，了解SSH基于用户名密码的认证原理</p><p>JumpServer：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh root@10.1.1.38<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>认证原理：</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523112338294.png" alt="image-20200523112338294"></p><ol><li><p>SSH客户端向SSH服务端发起一个登录请求</p></li><li><p>SSH服务端将自己的公钥发送给SSH客户端</p><p>注意：如果是第一次访问，则提示以下内容：</p></li></ol><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ssh远程登录操作 首次ssh 192.168.19.101# 显示结果# 无法确认主机的真实性The authenticity of host '192.168.19.101 (192.168.19.101)' can't be established.ECDSA key fingerprint is SHA256:Y/cQNWWkX15o2MsJ5HOQBI2m8S33qIA+x3zys8J4pOY.ECDSA key fingerprint is MD5:76:61:86:8b:d5:ee:bf:9c:60:e6:12:fa:f6:f0:74:36.Are you sure you want to continue connecting (yes/no)?yesWarning: Permanently added '192.168.19.101' (ECDSA) to the list of known hosts.#说明：#当客户端输入yes确认对方的公钥指纹后,server端的公钥就会被存放到客户机的用户家目录里~/.ssh/known_hosts文件中，下次再访问就直接通过密码登录，不需要再确认公钥。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>SSH客户端使用服务端发过来的公钥将自己的密码加密并且发送给SSH服务端</p></li><li><p>SSH服务端收到SSH客户端发过来的加密密码后使用本地留存的私钥进行解密</p></li><li><p>SSH服务端将解密出来的密码和<code>/etc/shadow</code>文件里的用户密码对比认证</p></li><li><p>SSH服务端认证成功，则返回登录成功结果，并发送一个随机会话口令给客户端，该口令用于后面两台主机进行数据传输的一个临时加密会话口令</p></li></ol><h2 id="4、SSH总结"><a href="#4、SSH总结" class="headerlink" title="4、SSH总结"></a>4、SSH总结</h2><ul><li>SSH是Linux下远程管理的工具，相比Telnet安全，运维人员必备的神器！</li><li>SSH的全称Secure Shell，安全的shell，是Client/Server架构，默认==端口号为22，TCP协议==</li><li>SSH其实用于商业，而OpenSSH即为开源的，在Linux中默认安装</li></ul><h1 id="二、SSH服务搭建"><a href="#二、SSH服务搭建" class="headerlink" title="二、SSH服务搭建"></a>二、SSH服务搭建</h1><h2 id="1、所有服务的搭建思路"><a href="#1、所有服务的搭建思路" class="headerlink" title="1、所有服务的搭建思路"></a>1、所有服务的搭建思路</h2><ul><li>关闭防火墙和selinux(实验环境都先关闭掉)</li><li>配置yum源(公网源或者本地源)</li><li>软件安装和检查</li><li>了解并修改配置文件（核心）</li><li>启动服务检查运行状态并设置开机自启动</li></ul><h2 id="2、搭建SSH服务器（JumpServer与RealServer）"><a href="#2、搭建SSH服务器（JumpServer与RealServer）" class="headerlink" title="2、搭建SSH服务器（JumpServer与RealServer）"></a>2、搭建SSH服务器（JumpServer与RealServer）</h2><p>第一步：关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld# setenforce 0# vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：配置YUM源</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523142205752.png" alt="image-20200523142205752"></p><p>JumpServer配置外网YUM源 =&gt; 阿里云</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup# wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo# yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>RealServer配置本地YUM源 =&gt; 把光盘镜像作为仓库（自建YUM仓库）</p><p>① 挂载光盘</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /mnt/cdrom# mount -o ro /dev/sr0 /mnt/cdrom# chmod +x /etc/rc.local# echo 'mount -o ro /dev/sr0 /mnt/cdrom' &gt;&gt; /etc/rc.local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>② 编写local.repo文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /etc/yum.repos.d# vim local.repo[local]name=local yumbaseurl=file:///mnt/cdromenabled=1gpgcheck=0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、VMware中的三种网络"><a href="#3、VMware中的三种网络" class="headerlink" title="3、VMware中的三种网络"></a>3、VMware中的三种网络</h2><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523145610295.png" alt="image-20200523145610295"></p><p> <img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523145635628.png" alt="image-20200523145635628"></p><p>由上图可知：在VMware中，一共存在3种网络模式。</p><table><thead><tr><th>选择网络连接属性</th><th>意义</th></tr></thead><tbody><tr><td>Use bridged networking（使用桥接网络）</td><td>使用（连接）VMnet0虚拟交换机，此时虚拟机相当于网络上的一台独立计算机，与主机一样，拥有一个独立的IP地址</td></tr><tr><td>Use network address translation（NAT）（使用NAT网络）</td><td>使用（连接）VMnet8虚拟交换机，此时虚拟机可以通过主机单向访问网络上的其他工作站（包括Internet网络），其他工作站不能访问虚拟机</td></tr><tr><td>Use Host-Only networking（仅主机网络）</td><td>使用（连接）VMnet1虚拟交换机，此时虚拟机只能与虚拟机、主机互连，与网络上的其他工作站不能访问</td></tr></tbody></table><p>VMnet0 桥接模式 ： 和物理真机连接在同一交换机，相当于系统与Windows处于同一个网段</p><p>① 与物理真机同网段，如192.168.43.X</p><p>② 桥接模式可以连接外网（有网络）</p><p>桥接模式中，Linux系统就相当于一台独立的计算机，与Windows物理真机处于同一个网络环境中。</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523152614843.png" alt="image-20200523152614843"></p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523155503251.png" alt="image-20200523155503251"></p><p>VMnet1 仅主机模式：封闭的网络环境，仅能与Windows物理真机进行连接。无法连接外网</p><p>① 与物理真机不在同一个网段，拥有独立的IP网段</p><p>② 仅主机模式仅能用于内部连通（VMware=&gt;JumpServer、RealServer）</p><p>③ 仅主机模式无法连接外网</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523152724509.png" alt="image-20200523152724509"></p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523160615196.png" alt="image-20200523160615196"></p><p>VMnet8 NAT模式：相当于一个独立的网络环境，与物理真机不处于同一个网段。但是其可以通过虚拟网络路由器（NAT地址转化）连接外网。</p><p>①  与物理真机不在同一个网段，拥有独立的IP网段</p><p>② 不仅可以进行内部连接（VMware=&gt; CentOS6、CentOS7）</p><p>③ 拥有一个虚拟的路由器（NAT设备）可以让我们虚拟机连接到外网环境</p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523153126141.png" alt="image-20200523153126141"></p><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523162436168.png" alt="image-20200523162436168"></p><h2 id="4、静态IP配置"><a href="#4、静态IP配置" class="headerlink" title="4、静态IP配置"></a>4、静态IP配置</h2><h3 id="☆-JumpServer网卡配置"><a href="#☆-JumpServer网卡配置" class="headerlink" title="☆ JumpServer网卡配置"></a>☆ JumpServer网卡配置</h3><p>给JumpServer配置两张网卡（NAT模式 + 仅主机模式）</p><p> <img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523163054314.png" alt="image-20200523163054314"></p><p>添加仅主机模式网卡：</p><p> <img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523163439258.png" alt="image-20200523163439258"></p><p>重启network网络，然后使用ifconfig获取仅主机模式的网卡信息。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart network# ifconfig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523163634762.png" alt="image-20200523163634762"></p><p>由上图可知，仅主机模式的网卡为ens37，NAT模式网卡为ens33。遇到一个问题，ens37这张网卡没有配置文件：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /etc/sysconfig/network-scripts/# ls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>添加ens37配置文件：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp ifcfg-ens33 ifcfg-ens37# vim ifcfg-ens37TYPE="Ethernet"BOOTPROTO="none"IPADDR=11.1.1.10NETMASK=255.255.255.0NAME="ens37"DEVICE="ens37"ONBOOT="yes"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启计算机网络：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-关闭NetworkManager"><a href="#☆-关闭NetworkManager" class="headerlink" title="☆ 关闭NetworkManager"></a>☆ 关闭NetworkManager</h3><p>Linux图形化界面中的网络管理器，有些时候我们设置了静态IP。但是重启网络后，其并没有生效或者和你设置的IP地址不一致，很可能是由于NetworkManager工具的影响。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop NetworkManager# systemctl disable NetworkManager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-RealServer网卡配置"><a href="#☆-RealServer网卡配置" class="headerlink" title="☆ RealServer网卡配置"></a>☆ RealServer网卡配置</h3><p>把NAT模式的网卡更改为仅主机模式，然后设置一个静态IP地址。</p><p> <img src="/../assets/blog_res/SSH%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1.assets/image-20200523170732237.png" alt="image-20200523170732237"></p><p>由于现在只有一张网卡，所以仅主机模式对应的网卡为ens33，配置：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/sysconfig/network-scripts/ifcfg-ens33TYPE="Ethernet"BOOTPROTO="none"IPADDR=11.1.1.100NETMASK=255.255.255.0NAME="ens33"DEVICE="ens33"ONBOOT="yes"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置完成后，重启计算机网络</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop NetworkManager# systemctl disable NetworkManager# systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2D安装指南</title>
      <link href="/2023/12/23/live2d-an-zhuang-zhi-nan/"/>
      <url>/2023/12/23/live2d-an-zhuang-zhi-nan/</url>
      
        <content type="html"><![CDATA[<h1 id="个人博客安装live2d插件"><a href="#个人博客安装live2d插件" class="headerlink" title="个人博客安装live2d插件"></a>个人博客安装live2d插件</h1><p>参考资料：</p><p><a href="https://polar-bear.eu.org/2023/06/27/wei-wang-zhan-tian-jia-live2d">为网站添加live2D | polar-bear～Blog</a></p><h3 id="第一步，安装插件"><a href="#第一步，安装插件" class="headerlink" title="第一步，安装插件"></a>第一步，安装插件</h3><pre class="line-numbers language-none"><code class="language-none">npm install --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="第二步，选择安装的模型"><a href="#第二步，选择安装的模型" class="headerlink" title="第二步，选择安装的模型"></a>第二步，选择安装的模型</h3><pre class="line-numbers language-none"><code class="language-none">npm install live2d-widget-model-miku<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此处的：live2d-widget-model-tororo就是模型安装的名称</p><p>模型数量很多，个人选择的是miku的模型。</p><p>效果如图：</p><p><img src="/../assets/blog_res/live2D%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97.assets/image-20231223123135263.png" alt="image-20231223123135263"></p><p>非q版，有其他模型人物选择，如参考的资料作者选择的就是猫猫。</p><p>其他可选插件模型：</p><pre class="line-numbers language-none"><code class="language-none">live2d-widget-model-chitoselive2d-widget-model-epsilon2_1live2d-widget-model-gflive2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)live2d-widget-model-harutolive2d-widget-model-hibikilive2d-widget-model-hijikilive2d-widget-model-izumilive2d-widget-model-koharulive2d-widget-model-mikulive2d-widget-model-ni-jlive2d-widget-model-nicolive2d-widget-model-nietzschelive2d-widget-model-nipsilonlive2d-widget-model-nitolive2d-widget-model-shizukulive2d-widget-model-tororolive2d-widget-model-tsumikilive2d-widget-model-unitychanlive2d-widget-model-wankolive2d-widget-model-z16<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需替换后面的名称即可下载。</p><h3 id="第三步，添加live2d的代码使其运行在网站博客之中"><a href="#第三步，添加live2d的代码使其运行在网站博客之中" class="headerlink" title="第三步，添加live2d的代码使其运行在网站博客之中"></a>第三步，添加live2d的代码使其运行在网站博客之中</h3><p>在站点配置下的_config.yml文件之中添加以下代码：</p><pre class="line-numbers language-none"><code class="language-none">live2d:  enable: true  scriptFrom: local  pluginRootPath: live2dw/  pluginJsPath: lib/  pluginModelPath: assets/  tagMode: false  debug: false  model:    use: live2d-widget-model-tororo #这里改为你模型的名字  display:    position: right  #left放左，right放右    width: 180    height: 300  mobile:    show: true  react:    opacity: 0.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下是代码的参数含义，引用原文解释：</p><pre class="line-numbers language-none"><code class="language-none">- `enable`：设置为 `true` 表示启用Live2D插件，允许在网站上显示Live2D模型。- `scriptFrom`：设置为 `local` 表示从本地加载插件的JavaScript文件。- `pluginRootPath`：Live2D插件根目录的路径。在这个示例中，设置为 `live2dw/`。- `pluginJsPath`：插件JavaScript文件存放的路径。在这个示例中，设置为 `lib/`。- `pluginModelPath`：Live2D模型文件存放的路径。在这个示例中，设置为 `assets/`。- `tagMode`：设置为 `false` 表示不以标签形式展示Live2D模型。- `debug`：设置为 `false` 表示关闭调试模式。接下来是具体的模型相关设置：- `model.use`：指定使用的Live2D模型的名称。在这个示例中，模型名字被设置为 `live2d-widget-model-tororo`，您可以更改为您想要使用的模型的名字。- `display.position`：指定Live2D模型在网页中的位置，可以设置为 `left` 或 `right`。- `display.width`：指定Live2D模型的宽度。- `display.height`：指定Live2D模型的高度。接下来是移动设备的显示设置：- `mobile.show`：设置为 `true` 表示在移动设备上显示Live2D模型。最后是交互相关设置：- `react.opacity`：指定Live2D模型的透明度。请注意，这些参数可以根据您的需求进行调整和修改，以适应您的网站设计和Live2D模型的要求。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置好之后运行就可以正常显示了，中途未出现任何错误，感谢大佬polar-bear的教程。</p><p>这里是大佬的博客：<a href="https://polar-bear.eu.org/">polar-bear～Blog - Websites that record life</a></p><p>这里是大佬的b站：<a href="https://space.bilibili.com/1326131544">阿巴吧吧巴啊的个人空间-阿巴吧吧巴啊个人主页-哔哩哔哩视频 (bilibili.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>半同步复制与MHA高可用架构设计</title>
      <link href="/2023/12/23/ban-tong-bu-fu-zhi-yu-mha-gao-ke-yong-jia-gou-she-ji/"/>
      <url>/2023/12/23/ban-tong-bu-fu-zhi-yu-mha-gao-ke-yong-jia-gou-she-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="半同步复制与MHA高可用架构设计"><a href="#半同步复制与MHA高可用架构设计" class="headerlink" title="半同步复制与MHA高可用架构设计"></a>半同步复制与MHA高可用架构设计</h1><h1 id="一、半同步复制"><a href="#一、半同步复制" class="headerlink" title="一、半同步复制"></a>一、半同步复制</h1><h2 id="1、什么是半同步复制"><a href="#1、什么是半同步复制" class="headerlink" title="1、什么是半同步复制"></a>1、什么是半同步复制</h2><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/image-20200901093404443.png" alt="image-20200901093404443"></p><p>所谓的半同步复制就是master每commit一个事务(简单来说就是做一个改变数据的操作）,要确保slave接受完主服务器发送的binlog日志文件==并写入到自己的中继日志relay log里==，然后会给master信号，告诉对方已经接收完毕，这样master才能把事物成功==commit==。这样就保证了master-slave的==数据绝对的一致==（但是以牺牲==master的性能为代价==).但等待时间也是可以调整的。</p><h2 id="2、半同步复制的基本实现"><a href="#2、半同步复制的基本实现" class="headerlink" title="2、半同步复制的基本实现"></a>2、半同步复制的基本实现</h2><p>第一步：准备一套M-S的主从架构（建议使用基于GTIDs架构设计）</p><p>第二步：给MASTER与SLAVE安装plugin插件(`$basedir/lib/plugin/)</p><p>MASTER：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; install plugin rpl_semi_sync_master soname 'semisync_master.so';mysql&gt; show global variables like 'rpl_semi_sync%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>SLAVE：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; install plugin rpl_semi_sync_slave soname 'semisync_slave.so';mysql&gt; show global variables like 'rpl_semi_sync%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：激活MASTER与SLAVE服务器中的半同步复制插件</p><p>MASTER：</p> <pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; set global rpl_semi_sync_master_enabled=on;mysql&gt; show global status like 'rpl_semi_sync%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>SLAVE：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; set global rpl_semi_sync_slave_enabled=on;mysql&gt; show global variables like 'rpl_semi_sync%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第四步：在SLAVE服务器中重启IO线程</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; stop slave IO_THREAD;mysql&gt; start slave IO_THREAD;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第五步：测试验证半同步复制</p><p>当slave从库的IO_Thread 线程将binlog日志接受完毕后，要给master一个确认，如果超过10s未收到slave的接收确认信号，那么就会自动转换为传统的异步复制模式。</p><p>1）master插入一条记录，查看slave是否有成功返回</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; insert into db_itheima.tb_student values (null,'j');mysql&gt; show global status like 'rpl_semi_sync%_yes_tx'; +-----------------------------+-------+| Variable_name               | Value |+-----------------------------+-------+| Rpl_semi_sync_master_yes_tx |  1    |表示这次事物成功从slave返回一次确认信号+-----------------------------+-------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2）模拟slave服务器故障</p><p>SLAVE：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>MASTER：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; insert into db_itheima.tb_student values (null,'k'); mysql&gt; insert into db_itheima.tb_student values (null,'l'); 这次插入一个值需要等待10秒（默认的等待时间)mysql&gt; insert into db_itheima.tb_student values (null,'m'); 现在自动转成了原来的异步模式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3）重新启动半同步复制</p><p>SLAVE：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld start# mysql -P 3310 -pmysql&gt; set global rpl_semi_sync_slave_enabled=on;mysql&gt; stop slave IO_THREAD;mysql&gt; start slave IO_THREAD;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>master需要等到slave确认后才能提交，如果等不到确认消息，master等待10s种后自动变成异步同步;slave启起来后，master上改变的数据还是会自动复制过来，数据又回到一致。</p><h2 id="3、等待时间的修改（默认10s）"><a href="#3、等待时间的修改（默认10s）" class="headerlink" title="3、等待时间的修改（默认10s）"></a>3、等待时间的修改（默认10s）</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; set global rpl_semi_sync_master_timeout=3600000;mysql&gt; show global variables like 'rpl_semi_sync%';+------------------------------------+---------+| Variable_name                      | Value   |+------------------------------------+---------+| rpl_semi_sync_master_enabled       | ON      || rpl_semi_sync_master_timeout       | 3600000 || rpl_semi_sync_master_trace_level   | 32      || rpl_semi_sync_master_wait_no_slave | ON      |+------------------------------------+---------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、卸载半同步复制插件（不需要时）"><a href="#4、卸载半同步复制插件（不需要时）" class="headerlink" title="4、卸载半同步复制插件（不需要时）"></a>4、卸载半同步复制插件（不需要时）</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select plugin_name,load_option from information_schema.plugins;mysql&gt; uninstall plugin 插件名称;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="补充：mysqld重启后，需要手工启动主从同步"><a href="#补充：mysqld重启后，需要手工启动主从同步" class="headerlink" title="补充：mysqld重启后，需要手工启动主从同步"></a>补充：mysqld重启后，需要手工启动主从同步</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld stop# service mysqld start# mysql -P 3310 -pmysql&gt; show slave status\GSlave_IO_Running: NoSlave_SQL_Running: No<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上情况代表，mysqld重启后，主从同步也会随之关闭，需要手工开启。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; start slave;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二、MHA简介"><a href="#二、MHA简介" class="headerlink" title="二、MHA简介"></a>二、MHA简介</h1><h2 id="1、什么是MHA"><a href="#1、什么是MHA" class="headerlink" title="1、什么是MHA"></a>1、什么是MHA</h2><p>MHA（Master High Availability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本DeNA公司youshimaton（现就职于Facebook公司）开发，是一套优秀的作为MySQL高可用性环境下==故障切换和主从提升==的高可用软件。在MySQL故障切换过程中，MHA能做到在0~30秒之内自动完成数据库的故障切换操作，并且在进行故障切换的过程中，MHA能在==较大程度==上保证数据的一致性，以达到真正意义上的高可用。</p><h2 id="2、MHA工作原理"><a href="#2、MHA工作原理" class="headerlink" title="2、MHA工作原理"></a>2、MHA工作原理</h2><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/image-20200901105954602.png" alt="image-20200901105954602"></p><ol><li>当master出现故障时，通过对比slave之间I/O线程读取master上binlog的位置，选取最接近的slave做为最新的slave（latest slave）。 </li><li>其它slave通过与latest slave对比==生成差异中继日志，并应用==。</li><li>在latest slave上==应用从master保存的binlog==，同时将latest slave==提升为master==。</li><li>最后在其它slave上应用相应的差异中继日志并开始从新的master开始复制.</li></ol><h2 id="3、MHA组件"><a href="#3、MHA组件" class="headerlink" title="3、MHA组件"></a>3、MHA组件</h2><ul><li><p><strong>MHA Manager</strong>(管理节点) </p><p>MHA Manager可以单独部署在一台独立的机器上管理多个==master-slave集群==，也可以部署在一台slave节点上。</p></li><li><p><strong>MHA Node</strong>（数据节点）</p><p>MHA Node运行在==每台MySQL服务器==上，MHA Manager会定时探测集群中的master节点，当master出现故障时，它可以自动将数据的slave提升为新的master，然后将所有其他的slave重新指向新的master。整个故障转移过程对应用程序完全透明。</p></li></ul><h2 id="4、MHA组件介绍"><a href="#4、MHA组件介绍" class="headerlink" title="4、MHA组件介绍"></a>4、MHA组件介绍</h2><ul><li>MHA Manager</li></ul><p> 运行一些工具，比如masterha_manager工具实现==自动监控MySQL Master==和实现==master故障切换==，其它工具手动实现master故障切换、在线mater转移、连接检查等等。一个Manager可以管理多 个master-slave集群</p><ul><li>MHA Node</li></ul><p> 部署在所有运行MySQL的服务器上，无论是master还是slave。主要有三个作用：</p><p>1）保存二进制日志</p><pre><code> 如果能够访问故障master，会拷贝master的二进制日志</code></pre><p> 2）应用差异中继日志</p><p>​从拥有最新数据的slave上生成差异中继日志，然后应用差异日志。</p><p> 3）清除中继日志</p><pre><code> 在不停止SQL线程的情况下删除中继日志</code></pre><h2 id="5、MHA中工具介绍"><a href="#5、MHA中工具介绍" class="headerlink" title="5、MHA中工具介绍"></a>5、MHA中工具介绍</h2><h4 id="㈠-Manager工具"><a href="#㈠-Manager工具" class="headerlink" title="㈠ Manager工具"></a>㈠ Manager工具</h4><table><thead><tr><th>工具</th><th>说明</th></tr></thead><tbody><tr><td>==masterha_check_ssh==</td><td>检查MHA的SSH配置</td></tr><tr><td>==masterha_check_repl==</td><td>检查MySQL复制</td></tr><tr><td>==masterha_manager==</td><td>启动MHA</td></tr><tr><td>==masterha_check_status==</td><td>检测当前MHA运行状态</td></tr><tr><td>masterha_master_monitor</td><td>监测master是否宕机</td></tr><tr><td>masterha_master_switch</td><td>控制故障转移(自动或手动)</td></tr><tr><td>masterha_conf_host</td><td>添加或删除配置的server信息</td></tr></tbody></table><h4 id="㈡-Node工具"><a href="#㈡-Node工具" class="headerlink" title="㈡ Node工具"></a>㈡ Node工具</h4><table><thead><tr><th>工具</th><th>说明</th></tr></thead><tbody><tr><td>save_binary_logs</td><td>保存和复制master的二进制日志</td></tr><tr><td>apply_diff_relay_logs</td><td>识别差异的中继日志事件并应用于其它slave</td></tr><tr><td>filter_mysqlbinlog</td><td>去除不必要的ROLLBACK事件(MHA已不再使用这个工具)</td></tr><tr><td>purge_relay_logs</td><td>清除中继日志(不会阻塞SQL线程)</td></tr></tbody></table><p><em>==注意：Node这些工具通常由MHA Manager的脚本触发,无需人手操作==。</em></p><h1 id="三、MHA部署架构"><a href="#三、MHA部署架构" class="headerlink" title="三、MHA部署架构"></a>三、MHA部署架构</h1><h2 id="1、部署规划"><a href="#1、部署规划" class="headerlink" title="1、部署规划"></a>1、部署规划</h2><table><thead><tr><th>角色</th><th>IP</th><th>主机名</th><th>server-id</th><th>功能</th><th>备注</th></tr></thead><tbody><tr><td>MHA-Manager</td><td>10.1.1.40</td><td>mha.itcast.cn</td><td>—</td><td>管理节点</td><td></td></tr><tr><td>MHA-Node（Master）</td><td>10.1.1.10</td><td>master.itcast.cn</td><td>10</td><td>数据节点</td><td>写</td></tr><tr><td>MHA-Node（Slave1）</td><td>10.1.1.20</td><td>slave1.itcast.cn</td><td>20</td><td>数据节点</td><td>读</td></tr><tr><td>MHA-Node（Slave2）</td><td>10.1.1.30</td><td>slave2.itcast.cn</td><td>30</td><td>数据节点</td><td>读</td></tr></tbody></table><p>##2、系统和软件版本</p><table><thead><tr><th>系统版本</th><th>MySQL版本</th><th>MHA版本</th></tr></thead><tbody><tr><td>CentOS  7.6</td><td>MySQL-5.7.31</td><td>mha4mysql-manager-0.57      mha4mysql-node-0.57</td></tr></tbody></table><h2 id="3、系统环境初始化"><a href="#3、系统环境初始化" class="headerlink" title="3、系统环境初始化"></a>3、系统环境初始化</h2><p>第一步：克隆机器，首先启动MASTER，然后在一次启动SLAVE1、SLAVE2以及MHA</p><p>第二步：更改计算机的主机名称</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl set-hostname master.itcast.cn# su# hostnamectl set-hostname slave1.itcast.cn# su# hostnamectl set-hostname slave2.itcast.cn# su# hostnamectl set-hostname mha.itcast.cn# su<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：更改IP地址以及绑定主机名称及IP地址到/etc/hosts文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/sysconfig/network-scripts/ifcfg-ens33...IPADDR=10.1.1.10、IPADDR=10.1.1.20、IPADDR=10.1.1.30、IPADDR=10.1.1.40...# systemctl stop NetworkManager# systemctl disable NetworkManager# systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用MX连接4台服务器，绑定IP地址与主机名称到/etc/hosts文件中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/hosts10.1.1.10 master.itcast.cn10.1.1.20 slave1.itcast.cn10.1.1.30 slave2.itcast.cn10.1.1.40 mha.itcast.cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld# setenforce 0# sed -i '/SELINUX=enforcing/cSELINUX=disabled' /etc/selinux/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第五步：配置YUM源</p><p>基础源（略，建议使用腾讯源）</p><p>配置epel源</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.cloud.tencent.com/repo/epel-7.repo# yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置本地自建仓库的yum源</p><p>① 上传mha-yum软件包到/soft/mha目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir -p /soft/mha<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>② 配置本地yum源，当我们使用yum时，可以自动找到mha-yum这个仓库目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/yum.repos.d/local.repo[mha]name=mha softbaseurl=file:///soft/mha/mha-yumenabled=1gpgcheck=0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试MHA依赖软件库的安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">yum -y install perl-DBD-MySQL \perl-Config-Tiny \perl-Time-HiRes \perl-Mail-Sender \perl-Mail-Sendmail \perl-MIME-Base32 \perl-MIME-Charset \perl-MIME-EncWords \perl-Params-Classify \perl-Params-Validate.x86_64 \perl-Log-Dispatch \perl-Parallel-ForkManager \net-tools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：ntpdate时间同步（非常重要）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate 182.92.12.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、部署MySQL主从复制环境"><a href="#4、部署MySQL主从复制环境" class="headerlink" title="4、部署MySQL主从复制环境"></a>4、部署MySQL主从复制环境</h2><p>数据库安装位置：/usr/local/mysql</p><p>数据库的数据目录：/usr/local/mysql/data</p><p>套接字文件：/tmp/mysql.sock</p><p>端口设置：3306</p><p>配置文件位置：/usr/local/mysql/my.cnf（MySQL =&gt; 安装目录下 =&gt; /etc目录下）</p><h3 id="☆-MASTER主服务器"><a href="#☆-MASTER主服务器" class="headerlink" title="☆ MASTER主服务器"></a>☆ MASTER主服务器</h3><p>第一步：上传软件到/root目录</p><p>第二步：使用脚本安装MySQL软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim mysql.sh#!/bin/bashyum install libaio -ytar -xf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gzmv mysql-5.7.31-linux-glibc2.12-x86_64 /usr/local/mysqluseradd -r -s /sbin/nologin mysqlrm -rf /etc/my.cnfcd /usr/local/mysqlmkdir mysql-fileschown mysql:mysql mysql-fileschmod 750 mysql-filesbin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql &amp;&gt; /root/password.txtbin/mysql_ssl_rsa_setup --datadir=/usr/local/mysql/datacp support-files/mysql.server /etc/init.d/mysqldservice mysqld startecho 'export PATH=$PATH:/usr/local/mysql/bin' &gt;&gt; /etc/profilesource /etc/profile# source mysql.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：设置MySQL密码</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -pmysql&gt; set password='123';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第四步：进行安全初始化</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第五步：编写MASTER主机中my.cnf配置文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /usr/local/mysql/my.cnf[mysqld]basedir=/usr/local/mysqldatadir=/usr/local/mysql/datasocket=/tmp/mysql.sockport=3306log-error=/usr/local/mysql/data/master.errlog-bin=/usr/local/mysql/data/binlogserver-id=10character_set_server=utf8mb4gtid-mode=onlog-slave-updates=1enforce-gtid-consistency# service mysqld restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-SLAVE1-SLAVE2从服务器"><a href="#☆-SLAVE1-SLAVE2从服务器" class="headerlink" title="☆ SLAVE1/SLAVE2从服务器"></a>☆ SLAVE1/SLAVE2从服务器</h3><p>第一步：上传MySQL软件到服务器端</p><p>第二步：使用脚本安装MySQL，但是不需要进行初始化</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim mysql.sh#!/bin/bashyum install libaio -ytar -xf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gzrm -rf /usr/local/mysqlmv mysql-5.7.31-linux-glibc2.12-x86_64 /usr/local/mysqluseradd -r -s /sbin/nologin mysqlrm -rf /etc/my.cnfcd /usr/local/mysqlmkdir mysql-fileschown mysql:mysql mysql-fileschmod 750 mysql-filescp support-files/mysql.server /etc/init.d/mysqldecho 'export PATH=$PATH:/usr/local/mysql/bin' &gt;&gt; /etc/profilesource /etc/profile# source mysql.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：使用rsync把MASTER服务器中的data数据目录同步到SLAVE1与SLAVE2</p><p>MASTER：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /usr/local/mysql/data/auto.cnf# rsync -av /usr/local/mysql/data root@10.1.1.20:/usr/local/mysql/# rsync -av /usr/local/mysql/data root@10.1.1.30:/usr/local/mysql/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第四步：给SLAVE1与SLAVE2配置my.cnf文件</p><p>SLAVE1：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /usr/local/mysql/my.cnf[mysqld]basedir=/usr/local/mysqldatadir=/usr/local/mysql/datasocket=/tmp/mysql.sockport=3306log-error=/usr/local/mysql/data/slave1.errlog-bin=/usr/local/mysql/data/binlogrelay-log=/usr/local/mysql/data/relaylogserver-id=20character_set_server=utf8mb4gtid-mode=onlog-slave-updates=1enforce-gtid-consistencyskip-slave-start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SLAVE2：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /usr/local/mysql/my.cnf[mysqld]basedir=/usr/local/mysqldatadir=/usr/local/mysql/datasocket=/tmp/mysql.sockport=3306log-error=/usr/local/mysql/data/slave2.errlog-bin=/usr/local/mysql/data/binlogrelay-log=/usr/local/mysql/data/relaylogserver-id=30character_set_server=utf8mb4gtid-mode=onlog-slave-updates=1enforce-gtid-consistencyskip-slave-start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置完成后，启动MySQL软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-配置主从数据同步"><a href="#☆-配置主从数据同步" class="headerlink" title="☆ 配置主从数据同步"></a>☆ 配置主从数据同步</h3><p>第一步：在MASTER服务器中创建一个slave同步账号</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'slave'@'10.1.1.%' identified by '123';mysql&gt; grant replication slave on *.* to 'slave'@'10.1.1.%';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：创建一个mha账号（方便后期MHA监控主从同步状态）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'mha'@'10.1.1.40' identified by '123';mysql&gt; grant all privileges on *.* to 'mha'@'10.1.1.40';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第三步：在SLAVE1与SLAVE2中配置主从数据同步</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; change master to master_host='10.1.1.10',master_port=3306,master_user='slave',master_password='123',master_auto_position=1;mysql&gt; start slave;mysql&gt; show slave status\G<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>到此整个一主两从就配置完毕了！</p><h2 id="5、MHA软件的安装"><a href="#5、MHA软件的安装" class="headerlink" title="5、MHA软件的安装"></a>5、MHA软件的安装</h2><h3 id="㈠-不同节点安装软件"><a href="#㈠-不同节点安装软件" class="headerlink" title="㈠ 不同节点安装软件"></a>㈠ 不同节点安装软件</h3><p>说明：在所有节点安装 ==mha-node== 软件包，在 ==mha 管理==端再安装 mha-manager 软件包</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@mha ~]# yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm[root@master ~]# yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm[root@slave1 ~]# yum -y install mha4mysql-node-0.57-0.el7.noarch.rpm[root@slave2 ~]# yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm[root@mha ~]# yum –y install mha4mysql-manager-0.57-0.el7.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果已经提前安装依赖软件，则大家可以使用rpm -ivh直接安装</p></blockquote><h3 id="㈡-配置ssh互信（免密登录）"><a href="#㈡-配置ssh互信（免密登录）" class="headerlink" title="㈡ 配置ssh互信（免密登录）"></a>㈡ 配置ssh互信（免密登录）</h3><p>说明：</p><ol><li>在生产环境中几乎都是禁止root远程登陆服务器的，所以ssh免密码登陆要在admin用户下进行配置，这是处于安全角度考虑出发。 </li><li>admin用户可以是任意普通用户</li><li>该普通用户用于mha的管理节点远程访问mysql复制组中的所有主机，完成一些其他工作</li></ol><p>第一步：在所有机器上创建一个普通账号admin，密码123</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd admin# echo 123|passwd --stdin admin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第二步：配置mha主机到其他主机的admin用户互信</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mha端：[root@mha ~]# su - admin[admin@mha ~]$ ssh-keygen -P "" -f ~/.ssh/id_rsa[admin@mha ~]$ cd .ssh/[admin@mha .ssh]$ lsid_rsa  id_rsa.pub[admin@mha .ssh]$ mv id_rsa.pub authorized_keys[admin@mha .ssh]$ for i in 10 20 30;do scp -r ../.ssh/ 10.1.1.$i:~/;done测试免密登录：[admin@mha .ssh]$ ssh 10.1.1.10[admin@mha .ssh]$ ssh 10.1.1.20[admin@mha .ssh]$ ssh 10.1.1.30<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>疑问：SSH免密只需要拷贝公钥，但是以上代码是把整个.ssh目录拷贝过去了。</p><p>答：因为MHA的互信，要求不仅仅是MHA免密到MASTER、SLAVE1、SLAVE2，MASTER也要免密到MHA、SLAVE1、SLAVE2…</p></blockquote><h3 id="㈢-配置admin用户的sudo权限"><a href="#㈢-配置admin用户的sudo权限" class="headerlink" title="㈢ 配置admin用户的sudo权限"></a>㈢ 配置admin用户的sudo权限</h3><p>MASTER主机上：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@master ~]# vim /etc/sudoers.d/admin#User_Alias  表示具有sudo权限的用户列表; Host_Alias表示主机的列表User_Alias MYSQL_USERS = admin#Runas_Alias  表示用户以什么身份登录Runas_Alias MYSQL_RUNAS = root#Cmnd_Alias  表示允许执行命令的列表（命令需要使用完整路径）Cmnd_Alias MYSQL_CMNDS = /sbin/ifconfig,/sbin/arpingMYSQL_USERS ALL = (MYSQL_RUNAS) NOPASSWD: MYSQL_CMNDS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把这个权限分发给SLAVE1与SLAVE2一份（当故障发生时，从服务器也可以自己设置VIP）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@master ~]# for i in 20 30;do scp /etc/sudoers.d/admin 10.1.1.$i:/etc/sudoers.d/;done<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试admin用户是否可以挂载VIP（只能在MASTER机器上挂载VIP）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - admin[admin@master ~]$ sudo /sbin/ifconfig ens33:1 10.1.1.100 broadcast 10.1.1.255 netmask 255.255.255.0[admin@master ~]$ sudo /sbin/arping -fqc 5 -w 5 -I ens33 -s 10.1.1.100 -U 10.1.1.10[admin@master ~]$ ip a 补充：arping：用来向局域网内的其它主机发送ARP请求的指令，可以用来测试局域网内的某个IP是否已被使用。-f：收到第一个响应包后退出。-q：quite模式，不显示输出。 -c：发送指定的count个ARP REQUEST包后停止。如果指定了-w参数，则会等待相同数量的ARP REPLY包，直到超时为止。-w：指定一个超时时间，单位为秒，arping在到达指定时间后退出，无论期间发送或接收了多少包。在这种情况下，arping在发送完指定的count（-c）个包后并不会停止，而是等待到超时或发送的count个包都进行了回应后才会退出。 -I：指定设备名，用来发送ARP REQUEST包的网络设备的名称。-D：重复地址探测模式，用来检测有没有IP地址冲突，如果没有IP冲突则返回0。 -s：设置发送ARP包的IP资源地址-U：无理由的（强制的）ARP模式去更新别的主机上的ARP CACHE列表中的本机的信息，不需要响应。-h：显示帮助页。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="㈣-创建mha相关配置文件"><a href="#㈣-创建mha相关配置文件" class="headerlink" title="㈣ 创建mha相关配置文件"></a>㈣ 创建mha相关配置文件</h3><p>MHA服务器：创建工作目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@mha ~]# mkdir /etc/mha/[root@mha ~]# mkdir -p /data/mha/masterha/app1[root@mha ~]# chown -R admin. /data/mha<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>创建mha局部配置文件：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@mha ~]# vim /etc/mha/app1.conf[server default]# 设置监控用户和密码（修改1）user=mhapassword=123# 设置复制环境中的复制用户和密码（修改2）repl_user=slaverepl_password=123# 设置ssh的登录用户名（修改3）ssh_user=admin# 设置监控主库,发送ping包的时间间隔,默认是3秒,尝试三次没有回应的时候自动进行failoverping_interval=3# 设置mgr的工作目录manager_workdir=/data/mha/masterha/app1# 设置mysql master保存binlog的目录,以便MHA可以找到master的二进制日志（修改4）master_binlog_dir=/usr/local/mysql/data# 设置master的pid文件（修改5）master_pid_file=/usr/local/mysql/data/master.itcast.cn.pid# 设置mysql master在发生切换时保存binlog的目录（在mysql master上创建这个目录）remote_workdir=/data/mysql/mha# 设置mgr日志文件（MHA遇到问题，主要看这个日志）manager_log=/data/mha/masterha/app1/app1-3306.log# MHA到master的监控之间出现问题,MHA Manager将会尝试从slave1和slave2登录到master上secondary_check_script=/usr/bin/masterha_secondary_check -s 10.1.1.20 -s 10.1.1.30 --user=admin --port=22 --master_host=10.1.1.10 --master_port=3306# 设置自动failover时候的切换脚本（故障发生时，自动挂载VIP到SLAVE1或SLAVE2）master_ip_failover_script="/etc/mha/master_ip_failover.sh 10.1.1.100 1"# 设置手动切换时候的切换脚本#master_ip_online_change_script="/etc/mha/master_ip_online_change.sh 10.1.1.100 1"# 设置故障发生后关闭故障主机脚本# shutdown_script="/etc/mha/power_manager"[server1]hostname=10.1.1.10port= 3306candidate_master=1[server2]hostname=10.1.1.20port= 3306candidate_master=1[server3]hostname=10.1.1.30port= 3306candidate_master=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="㈤-上传相应脚本-etc-mha目录，然后更改配置信息，授权"><a href="#㈤-上传相应脚本-etc-mha目录，然后更改配置信息，授权" class="headerlink" title="㈤ 上传相应脚本/etc/mha目录，然后更改配置信息，授权"></a>㈤ 上传相应脚本/etc/mha目录，然后更改配置信息，授权</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@mha ~]# ls /etc/mha/app1.conf  master_ip_failover.sh注意：脚本内容中要修改网卡名字和连接用户为adminmy $vip  = shift;my $interface = 'ens33';网卡名（38行）my $key = shift;...sub stop_vip() {    my $ssh_user = "admin";用户名（110行）    print "=======$ssh_stop_vip==================\n";    `ssh $ssh_user\@$orig_master_host \" $ssh_stop_vip \"`;}[root@mha ~]# chmod +x /etc/mha/master_ip_*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6、检测SSH互信以及MySQL主从状态"><a href="#6、检测SSH互信以及MySQL主从状态" class="headerlink" title="6、检测SSH互信以及MySQL主从状态"></a>6、检测SSH互信以及MySQL主从状态</h2><p>MHA：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - admin# 检测SSH互信[admin@mha ~]$ masterha_check_ssh --conf=/etc/mha/app1.conf# 检测集群状态[admin@mha ~]$ masterha_check_repl --conf=/etc/mha/app1.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、检查MHA状态，然后运行MHA（监控开始）"><a href="#7、检查MHA状态，然后运行MHA（监控开始）" class="headerlink" title="7、检查MHA状态，然后运行MHA（监控开始）"></a>7、检查MHA状态，然后运行MHA（监控开始）</h2><p>MHA：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[admin@mha ~]$ masterha_check_status --conf=/etc/mha/app1.confapp1 is stopped(2:NOT_RUNNING).开启MHA Manager监控（关键，代表启动MHA）：[admin@mha ~]$ nohup masterha_manager --conf=/etc/mha/app1.conf --remove_dead_master_conf --ignore_last_failover &amp;再次查看监控状态：[admin@mha ~]$ masterha_check_status --conf=/etc/mha/app1.confapp1 (pid:8913) is running(0:PING_OK), master:10.1.1.10注意：1. 如果正常，会显示”PING_OK ”，否则会显示”NOT_RUNNING ”，说明 MHA监控没有开启2. 使用admin用户启动监控，否则会报权限拒绝3. 手动停止监控命令:masterha_stop --conf=/etc/mha/app1.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实到此，咱们MHA就已经配置完毕了！</p><h1 id="四、自动Failover测试"><a href="#四、自动Failover测试" class="headerlink" title="四、自动Failover测试"></a>四、自动Failover测试</h1><h2 id="1、在MASTER服务器安装测试工具"><a href="#1、在MASTER服务器安装测试工具" class="headerlink" title="1、在MASTER服务器安装测试工具"></a>1、在MASTER服务器安装测试工具</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@master ~]# yum -y install sysbench<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、插入测试数据"><a href="#2、插入测试数据" class="headerlink" title="2、插入测试数据"></a>2、插入测试数据</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">master服务器上创建测试库testmysql&gt; create database test charset utf8mb4;Query OK, 1 row affected (0.17 sec)mysql&gt; grant all on *.* to 'mha'@'localhost' identified by '123'; Query OK, 0 rows affected (0.14 sec)mysql&gt; flush privileges;Query OK, 0 rows affected (0.11 sec)mysql&gt; exitBye[root@master ~]# sysbench /usr/share/sysbench/oltp_read_only.lua \ --mysql-host=10.1.1.10  --mysql-port=3306  --mysql-user=mha \ --mysql-password=123  --mysql-socket=/tmp/mysql.sock \ --mysql-db=test  --db-driver=mysql  --tables=1 \ --table-size=100000 --report-interval=10 --threads=128 --time=120 prepare mysql&gt; select count(*) from sbtest1;+----------+| count(*) |+----------+|   100000 |+----------+1 row in set (0.01 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、拍摄快照"><a href="#3、拍摄快照" class="headerlink" title="3、拍摄快照"></a>3、拍摄快照</h2><p>MHA、MASTER、SLAVE1、SLAVE2</p><h2 id="4、模拟MASTER服务器故障"><a href="#4、模拟MASTER服务器故障" class="headerlink" title="4、模拟MASTER服务器故障"></a>4、模拟MASTER服务器故障</h2><p>MHA服务器：监控日志</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@mgr ~]# tail -f /data/mha/masterha/app1/app1-3306.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>MASTER服务器：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>MHA日志显示结果：</p><p>故障切换：</p><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/image-20200901174326023.png" alt="image-20200901174326023"></p><p>VIP漂移：</p><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/image-20200901174341745.png" alt="image-20200901174341745"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1、管理节点配置文件错误"><a href="#1、管理节点配置文件错误" class="headerlink" title="1、管理节点配置文件错误"></a>1、管理节点配置文件错误</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@mgr ~]# cat /etc/mha/app1.conf[server default]# 设置监控用户和密码,该用户是master上创建的数据库管理账号，拥有所有权限user=mhapassword=123# 设置复制环境中的复制用户和密码，注意需要有以下权限：#REPLICATION SLAVE和REPLICATION CLIENTrepl_user=slaverepl_password=123# 设置ssh的登录用户名ssh_user=admin....[server1]hostname=10.1.1.10port= 3306candidate_master=1[server2]hostname=10.1.1.20port= 3306candidate_master=1[server3]hostname=10.1.1.30port= 3306candidate_master=1注意：一定要配置正确的IP和端口号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、配置MHA时数据只读设置"><a href="#2、配置MHA时数据只读设置" class="headerlink" title="2、配置MHA时数据只读设置"></a>2、配置MHA时数据只读设置</h3><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/%E9%94%99%E8%AF%AF1.png" alt="错误1"></p><p>解决办法：设置从服务器为只读</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; set @@global.read_only=1;Query OK, 0 rows affected (0.00 sec)mysql&gt; show variables like 'read_only';+---------------+-------+| Variable_name | Value |+---------------+-------+| read_only     | ON    |+---------------+-------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、复制用户权限密码错误"><a href="#3、复制用户权限密码错误" class="headerlink" title="3、复制用户权限密码错误"></a>3、复制用户权限密码错误</h3><p><img src="/../assets/blog_res/%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E4%B8%8EMHA%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.assets/%E9%94%99%E8%AF%AF2.png" alt="错误2"></p><p>原因：</p><ol><li>复制用户slave没有相关权限，REPLICATION SLAVE和==REPLICATION CLIENT==</li><li>从服务器没有创建复制用户</li></ol><h3 id="4、其他错误"><a href="#4、其他错误" class="headerlink" title="4、其他错误"></a>4、其他错误</h3><p>MHA集群至少需要2个slave，所以如果只有一台slave的话，检查也是通不过的！</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从复制架构</title>
      <link href="/2023/12/23/mysql-zhu-cong-fu-zhi-jia-gou/"/>
      <url>/2023/12/23/mysql-zhu-cong-fu-zhi-jia-gou/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL主从复制架构"><a href="#MySQL主从复制架构" class="headerlink" title="MySQL主从复制架构"></a>MySQL主从复制架构</h1><h1 id="一、MySQL集群概述"><a href="#一、MySQL集群概述" class="headerlink" title="一、MySQL集群概述"></a>一、MySQL集群概述</h1><p>1、集群的主要类型</p><ul><li>高可用集群（High Available Cluster，HA Cluster）</li><li>高可用集群是指通过<strong>特殊的软件</strong>把独立的服务器连接起来，组成一个能够<strong>提供故障切换</strong>（Fail Over）功能的集群</li></ul><h2 id="2、如何衡量高可用"><a href="#2、如何衡量高可用" class="headerlink" title="2、如何衡量高可用"></a>2、如何衡量高可用</h2><table><thead><tr><th>可用性级别(指标)</th><th>年度宕机时间</th><th>描述</th><th>叫法</th></tr></thead><tbody><tr><td>99%</td><td>3.65天/年</td><td>基本可用系统</td><td>2个9</td></tr><tr><td>99.9%</td><td>8.76小时/年</td><td>可用系统</td><td>3个9</td></tr><tr><td>99.99%</td><td>52.6分钟/年</td><td>高可用系统</td><td>4个9</td></tr><tr><td>99.999%</td><td>5.3分钟/年</td><td>抗故障系统</td><td>5个9</td></tr><tr><td>99.9999%</td><td>32秒/年</td><td>容错系统</td><td>6个9</td></tr></tbody></table><p>计算方法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">1年 = 365天 = 8760小时99% = 8760 * 1% = 8760 * 0.01 = 87.6小时=3.65天99.9 = 8760 * 0.1% = 8760 * 0.001 = 8.76小时99.99 = 8760 * 0.0001 = 0.876小时 = 0.876 * 60 = 52.6分钟99.999 = 8760 * 0.00001 = 0.0876小时 = 0.0876 * 60 = 5.26分钟<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>##3、常用的集群架构</p><ul><li>==<strong>MySQL Replication</strong>==</li><li>MySQL Cluster</li><li>MySQL Group Replication （MGR）   5.7.17    多主一从</li><li>MariaDB Galera Cluster </li><li>==MHA==|Keepalived|HeartBeat|Lvs，Haproxy等技术构建高可用集群</li></ul><h1 id="二、MySQL复制简介"><a href="#二、MySQL复制简介" class="headerlink" title="二、MySQL复制简介"></a>二、MySQL复制简介</h1><h2 id="1、什么是MySQL复制"><a href="#1、什么是MySQL复制" class="headerlink" title="1、什么是MySQL复制"></a>1、什么是MySQL复制</h2><ul><li>Replication可以实现将数据从一台数据库服务器（master）复制到一台到多台数据库服务器(slave)</li><li>默认情况下，属于<strong>异步</strong>复制，所以无需维持长连接</li></ul><h2 id="2、-MySQL复制原理（重点）"><a href="#2、-MySQL复制原理（重点）" class="headerlink" title="2、 MySQL复制原理（重点）"></a>2、 MySQL复制原理（重点）</h2><p>简单来说，master将数据库的改变写入**==二进制日志==<strong>，slave同步这些二进制日志，并根据这些二进制日志进行</strong>==数据重演操作==**，实现数据异步同步。</p><p>master：主</p><p>slave：从</p><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831095948344.png" alt="image-20200831095948344"></p><p><strong>详细描述：</strong></p><p>当主从同步配置完毕后：</p><ol><li>slave端的IO线程发送请求给master端的binlog dump线程</li><li>master端binlog dump线程==获取二进制日志==信息(==文件名和位置信息==)发送给slave端的IO线程</li><li>salve端IO线程获取到的内容==依次==写到slave端relay log(中继日志)里，并把master端的bin-log文件名和位置记录到master.info里</li><li>salve端的SQL线程，检测到relay  log中内容更新，就会解析relay log里更新的内容，并==执行这些操作==，从而达到和master数据一致</li></ol><blockquote><p>扩展：relay log中继日志</p></blockquote><p><strong>作用：</strong>记录从(slave)服务器接收来自主(master)服务器的二进制日志.</p><p><strong>场景：</strong>用于==主从复制==</p><blockquote><p> master主服务器将自己的二进制日志发送给slave从服务器，slave先保存在自己的==中继日志中==，然后再执行自己本地的relay log里的sql达到数据库更改和master保持一致。</p></blockquote><p><strong>如何开启？</strong></p><p>默认中继日志==没有开启==，可以通过修改配置文件完成开启，如下：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf[mysqld]#指定二进制日志存放位置及文件名relay-log=/mysql_3306/data/relaylog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、MySQL复制架构"><a href="#3、MySQL复制架构" class="headerlink" title="3、MySQL复制架构"></a>3、MySQL复制架构</h2><h3 id="㈠-双机热备（AB复制）"><a href="#㈠-双机热备（AB复制）" class="headerlink" title="㈠  双机热备（AB复制）"></a>㈠  双机热备（AB复制）</h3><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831102317979.png" alt="image-20200831102317979"></p><p><strong>默认情况下，master接受读写请求，slave只接受读请求以减轻master的压力。</strong></p><h3 id="㈡-级联复制"><a href="#㈡-级联复制" class="headerlink" title="㈡  级联复制"></a>㈡  级联复制</h3><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831102431703.png" alt="image-20200831102431703"></p><p><strong>优点：</strong>进一步分担读压力</p><p><strong>缺点：</strong>slave1 出现故障，后面的所有级联slave服务器都会同步失败</p><h3 id="㈢-并联复制（一主多从）"><a href="#㈢-并联复制（一主多从）" class="headerlink" title="㈢ 并联复制（一主多从）"></a>㈢ 并联复制（一主多从）</h3><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831102645559.png" alt="image-20200831102645559"></p><p><strong>优点：</strong>解决上面的slave1的单点故障，同时也分担读压力</p><p><strong>缺点：</strong>间接增加master的压力（传输二进制日志压力）</p><h3 id="㈣-双主复制（了解）"><a href="#㈣-双主复制（了解）" class="headerlink" title="㈣ 双主复制（了解）"></a>㈣ 双主复制（了解）</h3><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831102830372.png" alt="image-20200831102830372"></p><p><strong>特点：</strong></p><p>从命名来看，两台master好像都能接受读、写请求，但实际上，往往运作的过程中，同一时刻只有其中一台master会接受写请求，另外一台接受读请求。</p><h1 id="三、MySQL主从复制的搭建（AB复制）"><a href="#三、MySQL主从复制的搭建（AB复制）" class="headerlink" title="三、MySQL主从复制的搭建（AB复制）"></a>三、MySQL主从复制的搭建（AB复制）</h1><p>##1、传统AB复制架构(M-S)</p><p><strong>说明</strong>：在配置MySQL主从架构时，必须保证数据库的版本高度一致，统一版本为5.7.31</p><h2 id="2、环境规划"><a href="#2、环境规划" class="headerlink" title="2、环境规划"></a>2、环境规划</h2><table><thead><tr><th>编号</th><th>主机名称</th><th>主机IP地址</th><th>角色信息</th></tr></thead><tbody><tr><td>1</td><td>master.itcast.cn</td><td>10.1.1.10</td><td>MASTER主服务器</td></tr><tr><td>2</td><td>slave.itcast.cn</td><td>10.1.1.100</td><td>SLAVE从服务器</td></tr></tbody></table><h2 id="3、安装前准备工作"><a href="#3、安装前准备工作" class="headerlink" title="3、安装前准备工作"></a>3、安装前准备工作</h2><p>第一步：克隆两台全新的数据库服务器，MASTER/SLAVE</p><p>第二步：首先启动MASTER，然后启动SLAVE，更改主机名称</p><p>Master：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl set-hostname master.itcast.cn# su<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Slave：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl set-hostname slave.itcast.cn# su<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：更改静态IP配置，把Master和Slave都配置与规划一致，然后关闭NetworkManager</p><p>Master：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/sysconfig/network-scripts/ifcfg-ens33...IPADDR=10.1.1.10...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Slave：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/sysconfig/network-scripts/ifcfg-ens33...IPADDR=10.1.1.10...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Master/Slave：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop NetworkManager# systemctl disable NetworkManager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>设置完成后，重启网络，然后使用MX连接Master与Slave。</p><p>第四步：由于两台机器处于集群架构，需要互相连接。绑定主机名称与IP地址到/etc/hosts</p><p>Master/Slave：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/hosts10.1.1.10 master.itcast.cn10.1.1.100 slave.itcast.cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第五步：关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld# systemctl list-unit-files|grep firewalld# setenforce 0# sed -i '/^SELINUX=/cSELINUX=disabled' /etc/selinux/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：配置yum源（建议使用腾讯源）</p><p>配置参考以前笔记（略）</p><p>第七步：时间同步</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate 182.92.12.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、MySQL主从复制核心思路"><a href="#4、MySQL主从复制核心思路" class="headerlink" title="4、MySQL主从复制核心思路"></a>4、MySQL主从复制核心思路</h2><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831111825894.png" alt="image-20200831111825894"></p><ol><li>slave必须安装相同版本的mysql数据库软件</li><li>master端必须开启==二进制日志==；slave端必须开启==relay log日志==</li><li>master端和slave端的server-id号==不能一致==</li><li>slave端配置向master来同步数据<ul><li>master端必须创建一个复制用户</li><li>保证master和slave端==初始数据一致==</li><li>配置主从复制（slave端）</li></ul></li></ol><h2 id="5、MySQL主从复制的具体实践"><a href="#5、MySQL主从复制的具体实践" class="headerlink" title="5、MySQL主从复制的具体实践"></a>5、MySQL主从复制的具体实践</h2><h3 id="第一步：上传MySQL软件包到Master与Slave"><a href="#第一步：上传MySQL软件包到Master与Slave" class="headerlink" title="第一步：上传MySQL软件包到Master与Slave"></a>第一步：上传MySQL软件包到Master与Slave</h3><h3 id="第二步：在Master端安装、初始化以及运行mysql软件"><a href="#第二步：在Master端安装、初始化以及运行mysql软件" class="headerlink" title="第二步：在Master端安装、初始化以及运行mysql软件"></a>第二步：在Master端安装、初始化以及运行mysql软件</h3><p>安装需求：</p><table><thead><tr><th>选项</th><th>值（自定义也可以采用默认形式）</th></tr></thead><tbody><tr><td>安装路径</td><td>/usr/local/mysql</td></tr><tr><td>数据路径</td><td>/usr/local/mysql/data</td></tr><tr><td>端口号</td><td>3306</td></tr></tbody></table><h4 id="①-安装MySQL软件"><a href="#①-安装MySQL软件" class="headerlink" title="① 安装MySQL软件"></a>① 安装MySQL软件</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim mysql.sh#!/bin/bashyum install libaio -ytar -xf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gzrm -rf /usr/local/mysqlmv mysql-5.7.31-linux-glibc2.12-x86_64 /usr/local/mysqluseradd -r -s /sbin/nologin mysqlrm -rf /etc/my.cnfcd /usr/local/mysqlmkdir mysql-fileschown mysql:mysql mysql-fileschmod 750 mysql-filesbin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql &amp;&gt; /root/password.txtbin/mysql_ssl_rsa_setup --datadir=/usr/local/mysql/datacp support-files/mysql.server /etc/init.d/mysqldservice mysqld startecho 'export PATH=$PATH:/usr/local/mysql/bin' &gt;&gt; /etc/profilesource /etc/profile# source mysql.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Shell脚本其实就是命令的堆砌，把一堆Linux命令写在同一个文件中，一起执行。</p></blockquote><h4 id="②-安全配置"><a href="#②-安全配置" class="headerlink" title="② 安全配置"></a>② 安全配置</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="③-配置my-cnf（重点开启二进制日志）"><a href="#③-配置my-cnf（重点开启二进制日志）" class="headerlink" title="③ 配置my.cnf（重点开启二进制日志）"></a>③ 配置my.cnf（重点开启二进制日志）</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /usr/local/mysql# vim my.cnf[mysqld]basedir=/usr/local/mysqldatadir=/usr/local/mysql/datasocket=/tmp/mysql.sockport=3306log-error=/usr/local/mysql/data/master.errlog-bin=/usr/local/mysql/data/binlog=&gt;  一定要开启二进制日志server-id=10character_set_server=utf8mb4 =&gt;    utf8mb4相当于utf8升级版配置完成后，重启mysqld服务# service mysqld restart# chkconfig --add mysqld# chkconfig mysqld on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第三步：在Slave从服务器端安装mysql软件（不需要初始化）"><a href="#第三步：在Slave从服务器端安装mysql软件（不需要初始化）" class="headerlink" title="第三步：在Slave从服务器端安装mysql软件（不需要初始化）"></a>第三步：在Slave从服务器端安装mysql软件（不需要初始化）</h3><h4 id="①-安装MySQL软件-1"><a href="#①-安装MySQL软件-1" class="headerlink" title="① 安装MySQL软件"></a>① 安装MySQL软件</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim mysql.sh#!/bin/bashyum install libaio -ytar -xf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gzrm -rf /usr/local/mysqlmv mysql-5.7.31-linux-glibc2.12-x86_64 /usr/local/mysqluseradd -r -s /sbin/nologin mysqlrm -rf /etc/my.cnfcd /usr/local/mysqlmkdir mysql-fileschown mysql:mysql mysql-fileschmod 750 mysql-filescp support-files/mysql.server /etc/init.d/mysqldecho 'export PATH=$PATH:/usr/local/mysql/bin' &gt;&gt; /etc/profilesource /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>相对于主服务器MySQL的安装与配置，从服务器端不需要进行初始化操作，因为其数据将来都来自于主服务器。</p></blockquote><h4 id="②-配置my-cnf文件"><a href="#②-配置my-cnf文件" class="headerlink" title="② 配置my.cnf文件"></a>② 配置my.cnf文件</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /usr/local/mysql# vim my.cnf[mysqld]basedir=/usr/local/mysqldatadir=/usr/local/mysql/datasocket=/tmp/mysql.sockport=3310log-error=/usr/local/mysql/data/slave.errrelay-log=/usr/local/mysql/data/relaylog=&gt;    开启中继日志server-id=100character_set_server=utf8mb4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="③-把master主服务器的数据目录同步到slave从服务器"><a href="#③-把master主服务器的数据目录同步到slave从服务器" class="headerlink" title="③ 把master主服务器的数据目录同步到slave从服务器"></a>③ 把master主服务器的数据目录同步到slave从服务器</h4><p>a. 把MASTER服务器中的mysqld停止掉</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>b. 把MASTER服务器中的/usr/local/mysql/data目录下的auto.cnf文件删除</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /usr/local/mysql/data/auto.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>没安装一个mysql软件，其data数据目录都会产生一个auto.cnf文件，里面是一个唯一性的编号，相当于我们每个人的身份证号码。</p></blockquote><p>c. 把MASTER服务器中/usr/local/mysql中的data目录拷贝一份到SLAVE从服务器的/usr/local/mysql目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rsync -av /usr/local/mysql/data root@10.1.1.100:/usr/local/mysql/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>d. 同步完成后，把主服务器与从服务器中的mysqld启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="常见问题解决方案"><a href="#常见问题解决方案" class="headerlink" title="常见问题解决方案"></a>常见问题解决方案</h4><p>☆ 常见问题1：MySQL无法启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld startRedirecting to /bin/systemctl start mysqld.serviceFailed to start mysqld.service: Unit not found.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>出现以上问题的主要原因在于/etc/init.d目录中没有mysqld这个文件换句话说，就是你没有cp mysql.server脚本</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld记住：/etc/init.d目录中的文件叫什么名字，我们service的时候就应该使用什么名字# service mysqld start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>☆ 常见错误2：MySQL没有安装在/usr/local/mysql目录中，service也无法启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld start无法启动的原因可能是你的MySQL并没有安装在/usr/local/mysql目录中，因为/etc/init.d/mysqld脚本中的basedir与datadir默认指向的都是/usr/local/mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>所以如果我们更换了mysql的安装位置，则必须更改/etc/init.d/mysqld脚本中basedir与datadir目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/init.d/mysqldbasedir=你的安装路径datadir=你的安装路径/data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>☆ 常见问题3：因为my.cnf配置文件导致mysql无法启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf[mysqld]basedir=/usr/local/mysql=&gt;    安装路径datadir=/usr/local/mysql/data=&gt;    数据目录socket=/tmp/mysql.sock=&gt;    GLIBC默认就是/tmp/mysql.sockport=3310log-error=/usr/local/mysql/slave.err=&gt; 错误日志到底放在哪里relay-log=/usr/local/mysql/data/relaylogserver-id=100character_set_server=utf8mb4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动报错：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Starting MySQL.2020-08-31T07:17:06.554270Z mysqld_safe error: log-error set to '/usr/local/mysql/slave.err', however file don't exists. Create writable for user 'mysql'. ERROR! The server quit without updating PID file (/usr/local/mysql/data/slave.itcast.cn.pid).<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>产生以上问题的主要原因在于mysql这个用户对/usr/local/mysql文件夹没有写入权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ll -d /usr/local/mysqldrwxr-xr-x 11 7161 31415 174 Aug 31 15:16 /usr/local/mysql发现文件拥有者位置与所属组位置都是两个数字，正常应该是文件拥有者的名称与文件所属组的名称。但是由于GLIBC已经提前打包了，我们解压后，如果在我们系统中，找不到原文件对应的文件拥有着与所属组，则以两个数字代替文件拥有者与所属组的显示。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>解决方案：</p><p>方案一：建议把错误日志，丢在数据目录中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf...log-error=/usr/local/mysql/data/slave.err<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方案二：直接更改/usr/local/mysql目录的权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown -R mysql.mysql /usr/local/mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="④-配置MASTER-SLAVE主从同步"><a href="#④-配置MASTER-SLAVE主从同步" class="headerlink" title="④ 配置MASTER-SLAVE主从同步"></a>④ 配置MASTER-SLAVE主从同步</h4><p>a. 在MASTER主服务器中创建一个账号，专门用于实现数据同步</p><p>MySQL5.7及以下版本：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; grant replication slave on *.* to 'slave'@'10.1.1.%' identified by '123';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>MySQL新版本中：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'slave'@'10.1.1.%' identified by '123';mysql&gt; grant replication slave on *.* to 'slave'@'10.1.1.%';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>b. 在MASTER中锁表，然后查看二进制文件的名称及位置</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; flush tables with read lock;mysql&gt; show master status;+---------------+----------+--------------+------------------+-------------------+| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+---------------+----------+--------------+------------------+-------------------+| binlog.000002 |      597 |              |                  |                   |+---------------+----------+--------------+------------------+-------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>c. 在SLAVE从服务器中，使用change master to指定主服务器，并实现数据同步</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; change master to master_host='10.1.1.10',master_user='slave',master_password='123',master_port=3306,master_log_file='binlog.000002',master_log_pos=597;master_host：主机的IP地址master_user：主机的user账号master_password：主机的user账号密码master_port：主机MySQL的端口号master_log_file：二进制日志文件名称master_log_pos：二进制日志文件位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>技巧：主从复制的change master to语句记不住怎么办？答：求帮助，mysql&gt; help change master to;</p><p>CHANGE MASTER TO<br>MASTER_HOST=’master2.example.com’,<br>MASTER_USER=’replication’,<br>MASTER_PASSWORD=’password’,<br>MASTER_PORT=3306,<br>MASTER_LOG_FILE=’master2-bin.001’,<br>MASTER_LOG_POS=4,<br>MASTER_CONNECT_RETRY=10;</p></blockquote><p>d. 启动slave数据同步</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; start slave;mysql&gt; show slave status\G<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831155637556.png" alt="image-20200831155637556"></p><h4 id="常见问题解决方案-1"><a href="#常见问题解决方案-1" class="headerlink" title="常见问题解决方案"></a>常见问题解决方案</h4><p>在配置主从时，一般遇到错误，大部分都是change master to语句写错了（80%），解决方案：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; stop slave;mysql&gt; reset slave;mysql&gt; change master to master_host='10.1.1.10',master_user='slave',master_password='123',master_port=3306,master_log_file='binlog.000002',master_log_pos=597;mysql&gt; start slave;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="⑤-主MASTER服务器解锁"><a href="#⑤-主MASTER服务器解锁" class="headerlink" title="⑤ 主MASTER服务器解锁"></a>⑤ 主MASTER服务器解锁</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; unlock tables;Query OK, 0 rows affected (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ol><li>主从复制必须保证两台数据库实例的==server-id不一致==</li><li>主服务器==必须开启二进制日志==；从服务器==必须开启中继日志==</li><li>主从复制搭建==必须保证初始数据一致==</li><li>主服务器必须要给从服务器==创建一个复制用户，并授予复制权限==</li><li>Master—&gt;Slave架构，==主写会同步到从==；而==从写不会同步到主==</li></ol><h2 id="6、SLAVE从服务器不小心写入数据解决方案"><a href="#6、SLAVE从服务器不小心写入数据解决方案" class="headerlink" title="6、SLAVE从服务器不小心写入数据解决方案"></a>6、SLAVE从服务器不小心写入数据解决方案</h2><p>正常情况下：</p><p>MASTER既可以读，也可以写。但是SLAVE从服务器，只能执行读取操作。一旦我们在SLAVE从服务器中写入数据，则主从架构会失败。</p><p>SLAVE：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># show slave status\G<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%9E%B6%E6%9E%84.assets/image-20200831165406201.png" alt="image-20200831165406201"></p><p>遇到以上问题：如果数量较少，还可以通过跳过当前语句的方式解决。但是如果从服务器写入数据过多，则以上架构必须要重新搭建了！</p><p>解决方案：</p><p>问：</p><p>如果由于人为操作或者其他原因直接将数据更改到从服务器导致数据同步失效，怎么解决？</p><p>答：可以通过变量<code>sql_slave_skip_counter</code>临时跳过事务进行处理</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">SET GLOBAL sql_slave_skip_counter = N  N代表跳过N个事务举例说明：mysql&gt; SET GLOBAL sql_slave_skip_counter=1;mysql&gt; stop slave;mysql&gt; start slave;注意：1. 跳过事务应该在slave上进行2. 传统的AB复制方式可以使用变量：sql_slave_skip_counter，基于GTIDs的方式不支持<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、基于GTIDs的AB复制架构-M-S"><a href="#四、基于GTIDs的AB复制架构-M-S" class="headerlink" title="四、基于GTIDs的AB复制架构(M-S)"></a>四、基于GTIDs的AB复制架构(M-S)</h1><h2 id="1、GTIDs概述"><a href="#1、GTIDs概述" class="headerlink" title="1、GTIDs概述"></a>1、GTIDs概述</h2><ul><li><strong>什么是GTIDs以及有什么特点？</strong></li></ul><ol><li><p>GTIDs（Global transaction identifiers）==全局事务标识符==，是mysql 5.6新加入的一项技术</p></li><li><p>当使用GTIDs时，每一个事务都可以被==识别并且跟踪== </p></li><li><p>添加新的slave或者当发生故障需要将master身份或者角色迁移到slave上时，都无需考虑是哪一个二进制日志以及哪个position值，==极大简化了相关操作==</p></li><li><p>GTIDs是完全基于事务的，因此==不支持MYISAM存储引擎== </p></li><li><p>==GTID由source_id和transaction_id组成==： </p><p>1）source_id来自于server_uuid,可以在auto.cnf中看到</p><p>2）transation_id是一个序列数字，自动生成.</p></li></ol><ul><li><strong>使用GTIDs的限制条件有哪些？</strong></li></ul><ol><li>不支持非事务引擎（MyISAM），因为可能会导致多个gtid分配给同一个事务</li><li>create table … select 语句不支持（主库语法报错）</li><li>create/drop <strong>temporary table</strong> 语句不支持</li><li>必须使用enforce-gtid-consistency参数 </li><li>sql-slave-skip-counter不支持(传统的跳过错误方式) </li><li>GTID复制环境中必须要求统一开启和GTID或者关闭GTID </li><li>在mysql 5.6.7之前，使用==mysql_upgrade==命令会出现问题</li></ol><h2 id="2、基于GTIDs的主从复制"><a href="#2、基于GTIDs的主从复制" class="headerlink" title="2、基于GTIDs的主从复制"></a>2、基于GTIDs的主从复制</h2><p>在生产环境中，大多数情况下使用的MySQL5.6基本上都是从5.5或者更低的版本升级而来，这就意味着之前的mysql replication方案是基于传统的方式部署，并且已经在运行，因此，接下来我们就利用已有的环境升级至基于GITDs的Replication</p><p>〇 思路</p><ol><li>修改配置文件支持GTIDs  (主+从)</li><li>重启数据库  (主+从)</li><li>为了保证数据一致性，master和slave设置为只读模式 (主+从)</li><li>==从服务器上重新配置同步== （从）</li></ol><h2 id="3、基于GTIDs的主从复制实践"><a href="#3、基于GTIDs的主从复制实践" class="headerlink" title="3、基于GTIDs的主从复制实践"></a>3、基于GTIDs的主从复制实践</h2><h3 id="①-修改配置文件支持GTIDs"><a href="#①-修改配置文件支持GTIDs" class="headerlink" title="① 修改配置文件支持GTIDs"></a>① 修改配置文件支持GTIDs</h3><p>MASTER =&gt; my.cnf</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf...gtid-mode=onlog-slave-updates=1enforce-gtid-consistency<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SLAVE =&gt; my.cnf</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf data/binlog.*# vim my.cnf...log-bin=/usr/local/mysql/data/binlog=&gt;   必须要开启二进制gtid-mode=onlog-slave-updates=1enforce-gtid-consistencyskip-slave-start =&gt;    当MASTER主服务器GTIDs没有启动时，跳过SLAVE服务器的启动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>说明：<br>1）开启GITDs需要在master和slave上都配置gtid-mode，log-bin，log-slave-updates，enforce-gtid-consistency（该参数在5.6.9之前是–disable-gtid-unsafe-statement）<br>2）其次，slave还需要增加skip-slave-start参数,目的是启动的时候，先不要把slave起来，需要做一些配置<br>3）基于GTIDs复制从服务器必须开启二进制日志！</p></blockquote><h3 id="②-重新启动mysqld服务"><a href="#②-重新启动mysqld服务" class="headerlink" title="② 重新启动mysqld服务"></a>② 重新启动mysqld服务</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysqld restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="③-主从配置只读模式"><a href="#③-主从配置只读模式" class="headerlink" title="③ 主从配置只读模式"></a>③ 主从配置只读模式</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; set @@global.read_only=ON;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="④-SLAVE重新配置change-master-to"><a href="#④-SLAVE重新配置change-master-to" class="headerlink" title="④ SLAVE重新配置change master to"></a>④ SLAVE重新配置change master to</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; stop slave;mysql&gt; reset slave;mysql&gt; change master to master_host='10.1.1.10',master_user='slave',master_password='123',master_port=3306,master_auto_position=1;注意：1.确保有复制用户2.主要区别于传统复制的参数是：master_auto_position=1mysql&gt; start slave;mysql&gt; show slave status\G<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="⑤-关闭主从服务器的只读模式"><a href="#⑤-关闭主从服务器的只读模式" class="headerlink" title="⑤ 关闭主从服务器的只读模式"></a>⑤ 关闭主从服务器的只读模式</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; set @@global.read_only=OFF;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试验证（往主服务器中写入部分数据，验证一下）</p><h2 id="4、SLAVE从服务器不小心写入数据解决方案"><a href="#4、SLAVE从服务器不小心写入数据解决方案" class="headerlink" title="4、SLAVE从服务器不小心写入数据解决方案"></a>4、SLAVE从服务器不小心写入数据解决方案</h2><p>方法一：跳过事务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">指定需要跳过的GTIDs编号SET GTID_NEXT='aaa-bbb-ccc-ddd:N';开始一个空事务BEGIN;COMMIT;使用下一个自动生成的全局事务ID。SET GTID_NEXT='AUTOMATIC';举例说明：mysql&gt; stop slave;mysql&gt; SET @@SESSION.GTID_NEXT= '13e36f00-eb70-11ea-91a8-000c29d1f40a:1'/*!*/;mysql&gt; BEGIN;mysql&gt; commit;mysql&gt; SET @@SESSION.GTID_NEXT= 'AUTOMATIC';mysql&gt; start slave;mysql&gt; show slave status\G说明：需要跳过哪个事务，需要手动查看relaylog文件得到[root@slave1 data]# ../bin/mysqlbinlog relay.000003|less。。。。# at 756#181015 12:04:45 server id 10  end_log_pos 817 CRC32 0x5374f49e         GTID [commit=yes]SET @@SESSION.GTID_NEXT= '044e6392-cf9b-11e8-a748-000c294ca304:3'/*!*/;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法二：重新同步data目录，重新change master to…</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL备份与恢复</title>
      <link href="/2023/12/23/mysql-bei-fen-yu-hui-fu/"/>
      <url>/2023/12/23/mysql-bei-fen-yu-hui-fu/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL备份与恢复"><a href="#MySQL备份与恢复" class="headerlink" title="MySQL备份与恢复"></a>MySQL备份与恢复</h1><h1 id="一、逻辑备份"><a href="#一、逻辑备份" class="headerlink" title="一、逻辑备份"></a>一、逻辑备份</h1><h2 id="1、回顾什么是逻辑备份"><a href="#1、回顾什么是逻辑备份" class="headerlink" title="1、回顾什么是逻辑备份"></a>1、回顾什么是逻辑备份</h2><p>逻辑备份就是把数据库、数据表或者数据进行导出，导出到一个文本文件中。</p><h2 id="2、逻辑备份工具"><a href="#2、逻辑备份工具" class="headerlink" title="2、逻辑备份工具"></a>2、逻辑备份工具</h2><p>mysqldump：提供全库级、数据库级别以及表级别的数据备份</p><p>mysqldump + binlog二进制日志实现增量备份</p><h2 id="3、逻辑的导出与导入"><a href="#3、逻辑的导出与导入" class="headerlink" title="3、逻辑的导出与导入"></a>3、逻辑的导出与导入</h2><h3 id="☆-导出（数据备份）"><a href="#☆-导出（数据备份）" class="headerlink" title="☆ 导出（数据备份）"></a>☆ 导出（数据备份）</h3><p>无论是什么存储引擎，以下方式本身是一种数据导出的方法，同时可以用来辅助备份，它可以对一个表的其中一列或者某几列做备份。备份的是==数据记录。==</p><p>案例：把tb_student数据表中的数据记录进行逻辑导出</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -uroot -pEnter password:123mysql&gt; select * into outfile '/tmp/sqlbak/tb_student.txt' from db_itheima.tb_student;ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>出现以上问题的主要原因在于我们没有指定MySQL逻辑导出时指定的路径</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf[mysqld]...secure_file_priv=/tmp/sqlbak/# service mysql_3306 restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * into outfile '/tmp/sqlbak/tb_student.txt' from db_itheima.tb_student;ERROR 1 (HY000): Can't create/write to file '/tmp/sqlbak/tb_student.txt' (Errcode: 13 - Permission denied)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>出现以上问题的主要原因在于mysql账号对/tmp/sqlbak没有写入权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -m u:mysql:rwx /tmp/sqlbak<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-导入（数据还原）"><a href="#☆-导入（数据还原）" class="headerlink" title="☆ 导入（数据还原）"></a>☆ 导入（数据还原）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -uroot -pEnter password:123mysql&gt; load data local infile '/tmp/sqlbak/tb_student.txt' into table tb_student;或# mysqlimport dbname /path/file -p  =&gt;   要求，导出的文件必须和数据表名称完全一致例如：# mysqlimport db_itheima /tmp/sqlbak/tb_student.txt -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>典型应用场景：可以把一些规则的文本文件导入到数据表中</p></blockquote><p>案例：把/etc/passwd文件中的数据导入到password数据表中</p><p>第一步：创建一个password数据表，password是mysql保留关键字，建议使用``两个反撇号括起来</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; CREATE TABLE `password` (  `uname` varchar(50) DEFAULT NULL,  `pass` char(2) DEFAULT NULL,  `uid` int(11) DEFAULT NULL,  `gid` int(11) DEFAULT NULL,  `comment` varchar(255) DEFAULT NULL,  `home` varchar(50) DEFAULT NULL,  `shell` varchar(50) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：把/etc/passwd文件拷贝到/tmp/sqlbak目录下，起名叫password.txt</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp /etc/passwd /tmp/sqlbak/password.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：使用mysqlimport把password.txt文件中的内容写入到数据表</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqlimport db_itheima --fields-terminated-by=':' --lines-terminated-by='\n' /tmp/sqlbak/password.txt -p选项说明--fields-terminated-by=':'，指定导出文件的分隔符为冒号:--lines-terminated-by='\n'，指定每一行的结尾使用的符号,\n代表换行符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、扩展：逻辑备份还原小工具（支持远程连接）"><a href="#4、扩展：逻辑备份还原小工具（支持远程连接）" class="headerlink" title="4、扩展：逻辑备份还原小工具（支持远程连接）"></a>4、扩展：逻辑备份还原小工具（支持远程连接）</h2><p>MySQL其实还支持很多管理软件（Windows版）：MySQL-Front、Navicat</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829112341086.png" alt="image-20200829112341086"></p><p>第一步：选择MySQL连接</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829112453585.png" alt="image-20200829112453585"></p><p>第二步：输入MySQL连接信息</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829112649593.png" alt="image-20200829112649593"></p><p>第三步：功能演示=&gt;创建数据库、创建数据表、插入数据…</p><p>第四步：数据库的备份与还原</p><p>① 逻辑的导出与导入</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829113438778.png" alt="image-20200829113438778"></p><p>② 数据表的备份与还原</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829115157369.png" alt="image-20200829115157369"></p><p>③ 数据库的备份与还原</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829115303550.png" alt="image-20200829115303550"></p><h1 id="二、物理备份"><a href="#二、物理备份" class="headerlink" title="二、物理备份"></a>二、物理备份</h1><h2 id="1、xtrabackup备份介绍"><a href="#1、xtrabackup备份介绍" class="headerlink" title="1、xtrabackup备份介绍"></a>1、xtrabackup备份介绍</h2><p>####㈠ xtrabackup优缺点</p><p><strong>优点：</strong> </p><ol><li>备份过程==快速、可靠(==因为是物理备份)；</li><li>支持==增量备份==，更为灵活</li><li>备份过程<strong>不会打断正在执行的事务</strong>；</li><li>能够基于压缩等功能节约磁盘空间和流量；</li><li>自动实现备份检验；</li><li>==还原速度快==；</li></ol><p><strong>缺点：</strong></p><ol><li>只能对==innodb表增量备份==，myisam表增量备份时是全备</li><li>innobackupex备份MyISAM表之前要对全库进行加READ LOCK，阻塞写操作，若备份是在从库上进行的话会影响主从同步，造成延迟。对InnoDB表备份不会阻塞读写。</li></ol><p>####㈡ ==xtrabackup备份原理==</p><ol><li>innobackupex首先会==启动==一个==xtrabackup_log==后台检测的进程，实时检测mysql的==redo log==的变化，一旦发现redo有新的日志写入，立刻将日志写入到日志文件==xtrabackup_log==中。</li><li>==物理==拷贝==innodb的数据文件和系统表空间文件idbdata1==到对应的以默认时间戳为备份目录的地方</li><li>复制结束后，执行==flush table with read lock==操作进行全库锁表准备备份非InnoDB文件</li><li>物理复制.frm .myd .myi等非InnoDB引擎文件到备份目录</li><li>查看二进制日志的位置</li><li>解锁表unlock tables</li><li>==停止==xtrabackup_log进程</li></ol><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829144019688.png" alt="image-20200829144019688"></p><p>扩展：redo log日志？</p><p>事务日志或称redo日志，在mysql中默认以ib_logfile0,ib_logfile1名称存在。</p><p>####㈢ ==xtrabackup备份恢复原理==</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829145320869.png" alt="image-20200829145320869"></p><p><strong>具体文字描述如下（了解）：</strong></p><ul><li>在InnoDB内部会维护一个redo日志文件，我们也可以叫做事务日志文件。事务日志会存储每一个InnoDB表数据的记录修改。当InnoDB启动时，InnoDB会检查数据文件和事务日志，并执行两个步骤：它应用（前滚）已经提交的事务日志到数据文件，并将修改过但没有提交的数据进行回滚操作。</li><li>xtrabackup在启动时会记住log sequence number（LSN），并且复制所有的数据文件。复制过程需要一些时间，所以这期间如果数据文件有改动，那么将会使数据库处于一个不同的时间点。这时，xtrabackup会运行一个后台进程，用于监视事务日志，并从事务日志复制最新的修改。xtrabackup必须持续的做这个操作，是因为事务日志是会轮转重复的写入，并且事务日志可以被重用。所以xtrabackup自启动开始，就不停的将事务日志中每个数据文件的修改都记录下来。</li><li>上面就是xtrabackup的备份过程。接下来是准备（prepare）过程。在这个过程中，xtrabackup使用之前复制的事务日志，对各个数据文件执行灾难恢复（就像MySQL刚启动时要做的一样）。当这个过程结束后，数据库就可以做恢复还原了。</li><li>以上的过程在xtrabackup的编译二进制程序中实现。程序innobackupex可以允许我们备份MyISAM表和frm文件从而增加了便捷和功能。Innobackupex会启动xtrabackup，直到xtrabackup复制数据文件后，然后执行FLUSH TABLES WITH READ LOCK来阻止新的写入进来并把MyISAM表数据刷到硬盘上，之后复制MyISAM数据文件，最后释放锁。</li><li>备份MyISAM和InnoDB表最终会处于一致，在准备（prepare）过程结束后，InnoDB表数据已经前滚到整个备份结束的点，而不是回滚到xtrabackup刚开始时的点。这个时间点与执行FLUSH TABLES WITH READ LOCK的时间点相同，所以MyISAM表数据与InnoDB表数据是同步的。类似Oracle的recover和restore，InnoDB的prepare过程可以称为recover（恢复），MyISAM的数据复制过程可以称为restore（还原）。 </li><li>==Mysql5.7.3以后开启二进制日志需要加上server-id选项，不然报错==</li></ul><h2 id="2、获取xtrabackup备份工具"><a href="#2、获取xtrabackup备份工具" class="headerlink" title="2、获取xtrabackup备份工具"></a>2、获取xtrabackup备份工具</h2><p>网站域名：<a href="http://www.percona.com/">http://www.percona.com</a></p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829150625283.png" alt="image-20200829150625283"></p><h2 id="3、xtabackup软件的安装"><a href="#3、xtabackup软件的安装" class="headerlink" title="3、xtabackup软件的安装"></a>3、xtabackup软件的安装</h2><p>第一步：上传软件包及依赖库到Linux服务器端</p><p>第二步：安装依赖库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ivh libev-4.15-3.el7.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：安装xtrabackup软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install percona-xtrabackup-24-2.4.7-2.el7.x86_64.rpm -y# rpm -ql percona-xtrabackup-24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、xtrabackup全库备份与恢复"><a href="#4、xtrabackup全库备份与恢复" class="headerlink" title="4、xtrabackup全库备份与恢复"></a>4、xtrabackup全库备份与恢复</h2><p>备份核心思路：</p><p>① 使用innobackupex对数据库中的所有库进行全量备份，备份完成后，其不能立即进行数据恢复（数据不完整，缺少12:00 ~ 12:30这个过程中的数据）</p><p>② ==预备阶段==，备份过程中产生的xtrabackup_log==应用到全量备份集==</p><p>③ 模拟故障（删除数据） =&gt;   rm  -rf   data/*</p><p>④ 动员运维工程师进行全库恢复</p><p>⑤ 测试验证</p><p>第一步：准备数据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create database db_itheima default charset=utf8;mysql&gt; use db_itheima;mysql&gt; create table t1(id int,name varchar(10)) engine=myisam;mysql&gt; insert into t1 values (1,'吕布');mysql&gt; create table t2(id int,name varchar(10)) engine=innodb;mysql&gt; insert into t2 values (1,'貂蝉');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：专门准备一个数据库备份账号，开通相应权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">创建备份用户admin，并授予相应权限mysql&gt; grant reload,process,lock tables,replication client on *.* to 'admin'@'localhost' identified by '123';mysql&gt; flush privileges;说明：在数据库中需要以下权限：RELOAD和LOCK TABLES权限:为了执行FLUSH TABLES WITH READ LOCKREPLICATION CLIENT权限：为了获取binary log位置PROCESS权限：显示有关在服务器中执行的线程的信息（即有关会话执行的语句的信息），允许使用SHOW ENGINE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：使用innobackupex工具进行全库备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># innobackupex --user=admin --password=123 /full_xtrabackup说明：备份目录默认会自动创建，也可以手动创建IMPORTANT: Please check that the backup run completes successfully.           At the end of a successful backup run innobackupex           prints "completed OK!".<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一次运行报错：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">200829 15:48:59  version_check Connecting to MySQL server with DSN 'dbi:mysql:;mysql_read_default_group=xtrabackup' as 'admin'  (using password: YES).Failed to connect to MySQL server: DBI connect(';mysql_read_default_group=xtrabackup','admin',...) failed: Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2) at - line 1314.200829 15:48:59 Connecting to MySQL server host: localhost, user: admin, password: set, port: not set, socket: not setFailed to connect to MySQL server: Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2).<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>出现以上问题的主要原因在于我们的mysql.sock并不在/var/lib/mysql目录下。为什么其会自动连接/var/lib/mysql目录下的mysql.sock呢？</p><p>原因1：可能在/etc目录下还有my.cnf文件，影响了innobackupex的执行。</p><p>原因2：innobackupex拥有自己的默认配置，默认读取了/var/lib/mysql/mysql.sock文件</p><p>解决方案：</p><p>方案1：把你的套接字文件创建一个软链接，放置于/var/lib/mysql/mysql.sock文件中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /var/lib/mysql# ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>方案2：在innobackupex中添加一个-S选项，执行套接字</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># innobackupex -S /tmp/mysql.sock --user=admin --password=123 /full_xtrabackup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：预备阶段，把备份这段时间内产生的日志整合到全量备份中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># innobackupex --user=admin --password=123 --apply-log /full_xtrabackup/2020-08-29_15-59-22<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第五步：模拟数据库故障</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /mysql_3306/data/*# pkill mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第六步：快速的恢复数据库中的数据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /mysql_3306/data/*# innobackupex --copy-back /full_xtrabackup/2020-08-29_15-59-22<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第一次恢复报错：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">innobackupex version 2.4.7 based on MySQL server 5.7.13 Linux (x86_64) (revision id: 05f1fcf)Error: datadir must be specified.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>出现以上问题的主要原因在于，innobackupex工具无法找到MySQL中的数据目录</p><p>解决方案：把my.cnf配置文件传递给innobackupex，让其自动识别这个文件中的datadir</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># innobackupex --defaults-file=/mysql_3306/my.cnf --copy-back /full_xtrabackup/2020-08-29_15-59-22<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第七步：恢复数据时，一定要记得更改/mysql_3306/data目录下的文件拥有者以及所属组权限，否则mysql无法启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown -R mysql.mysql /mysql_3306/data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第八步：启动MySQL，测试其是否正常</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysql_3306 start# mysql -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5、xtrabackup增量备份与恢复"><a href="#5、xtrabackup增量备份与恢复" class="headerlink" title="5、xtrabackup增量备份与恢复"></a>5、xtrabackup增量备份与恢复</h2><p>什么是增量？增量一定要有一个前提，必须要先有一个全量。</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D.assets/image-20200829165632567.png" alt="image-20200829165632567"></p><p>① 全量备份</p><p>② 把全量备份产生的日志整合到全量备份</p><p>③ 进行数据的增删改操作</p><p>④ 增量备份</p><p>⑤ 把增量备份及增量备份产生的日志文件全部整合到全量备份中</p><p>⑥ 模拟故障</p><p>⑦ 数据恢复</p><p>⑧ 启动数据库，测试验证数据</p><p>第一步：准备数据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create database db_itheima default charset=utf8;mysql&gt; use db_itheima;mysql&gt; create table t1(id int,name varchar(10)) engine=myisam;mysql&gt; insert into t1 values (1,'吕布');mysql&gt; create table t2(id int,name varchar(10)) engine=innodb;mysql&gt; insert into t2 values (1,'貂蝉');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：创建一个账号，专门用于备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">创建备份用户admin，并授予相应权限mysql&gt; grant reload,process,lock tables,replication client on *.* to 'admin'@'localhost' identified by '123';mysql&gt; flush privileges;说明：在数据库中需要以下权限：RELOAD和LOCK TABLES权限:为了执行FLUSH TABLES WITH READ LOCKREPLICATION CLIENT权限：为了获取binary log位置PROCESS权限：显示有关在服务器中执行的线程的信息（即有关会话执行的语句的信息），允许使用SHOW ENGINE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：全量备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /full_xtrabackup/*# innobackupex --user=admin --password=123 /full_xtrabackup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第四步：把全备过程中产生的日志进行整合（特别注意）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># innobackupex --user=admin --password=123 --apply-log --redo-only /full_xtrabackup/2020-08-29_17-06-48/选项说明：--apply-log 表示整合日志--redo-only表示只应用已经提交的事务，不回滚未提交的事务（12:00 ~ 12:30产生很多事务操作，事务处理=&gt;开启事务，成功了提交事务，写入硬盘；失败了回滚事务，不写入硬盘）注意：如果已经回滚了未提交事务，那么就无法再应用增量备份。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>  Preparing an Incremental Backup with innobackupex Preparing incremental backups is a bit different than full ones. This is, perhaps, the stage where more attention is needed:<br>  • First, only the committed transactions must be replayed on each backup. This will merge the base full backup with the incremental ones.<br>  • Then, the uncommitted transaction must be rolled back in order to have a ready-to-use backup.<br>  对于增量备份的Prepare阶段，有2个需要注意的地方，一个是提交的事务需要replayed，一个未提交的事务需要rollback。</p><p>  If you replay the committed transactions and rollback the uncommitted ones on the base backup, you will not be able to add the incremental ones. If you do this on an incremental one, you won’t be able to add data from that moment and the remaining increments. Having this in mind, the procedure is very straight-forward using the –redo-only option, starting with the base backup:<br>  如果在Prepare阶段replay了已提交的事务以及回滚了未提交的事务，则后续的增量备份无法添加到当前全备。因此在Prepare阶段全备应使用–redo-only选项。</p><p>  –redo-only should be used when merging all incrementals except the last one. That’s why the previous line doesn’t contain the –redo-only option. Even if the –redo-only was used on the last step, backup would still be consistent but in that case server would perform the rollback phase.<br>  对于存在多次增量的情形，仅仅只有最后一个增量不需要使用–redo-only 选项。如果使用了的话，rollback将由服务器启动的时候来完成。</p></blockquote><p>第五步：修改数据（进行增删改操作，让其产生增量数据）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -pEnter password:123mysql&gt; insert into db_itheima.t1 values (2,'王朗');mysql&gt; insert into db_itheima.t1 values (3,'袁术');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第六步：做增量备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># innobackupex --user=admin --password=123 --incremental /incre_backup --incremental-basedir=/full_xtrabackup/2020-08-29_17-06-48选项说明：--incremental 增量备份目录--incremental-basedir 这个增量是相对于哪个全量的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第七步：把增量备份产生的数据以及日志文件整合到全量备份中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># innobackupex --user=admin --password=123 --apply-log /full_xtrabackup/2020-08-29_17-06-48 --incremental-dir=/incre_backup/2020-08-29_17-23-43说明：1.--redo-only除了最后一个不用加之外，其他的增量应用都要加，最后一个应用的时候可以直接进入回滚未提交事务阶段;如果加了也没事，服务启动的时候会进入recovery过程，来回滚2.应用增量备份的时候只能按照备份的顺序来应用。如果应用顺序错误，那么备份就不可用。如果无法确定顺序，可以使用xtrabackup-checkpoints来确定顺序。周天做了一个全量，周一、周二、周三、周四、周五、周六全部做增量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此，增量备份就全部结束了！</p><p>第八步：模拟数据库故障</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /mysql_3306/data/*# pkill mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第九步：数据恢复</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># innobackupex --defaults-file=/mysql_3306/my.cnf --user=admin --password=123 --copy-back /full_xtrabackup/2020-08-29_17-06-48# chown -R mysql.mysql /mysql_3306/data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>启动数据库，测试验证是否正常</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysql_3306 start# mysql -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL备份与恢复（重点）</title>
      <link href="/2023/12/23/mysql-bei-fen-yu-hui-fu-chong-dian/"/>
      <url>/2023/12/23/mysql-bei-fen-yu-hui-fu-chong-dian/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL备份与恢复（重点）"><a href="#MySQL备份与恢复（重点）" class="headerlink" title="MySQL备份与恢复（重点）"></a>MySQL备份与恢复（重点）</h1><h1 id="一、用户管理与权限管理"><a href="#一、用户管理与权限管理" class="headerlink" title="一、用户管理与权限管理"></a>一、用户管理与权限管理</h1><h2 id="☆-用户管理"><a href="#☆-用户管理" class="headerlink" title="☆ 用户管理"></a>☆ 用户管理</h2><h3 id="1、创建MySQL用户"><a href="#1、创建MySQL用户" class="headerlink" title="1、创建MySQL用户"></a>1、创建MySQL用户</h3><blockquote><p>注意：MySQL中不能单纯通过用户名来说明用户，必须要加上主机。如**==<a href="mailto:jack@10.1.1.1">jack@10.1.1.1</a>==**</p></blockquote><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user '用户名'@'被允许连接的主机名称或主机的IP地址' identified by '用户密码';mysql&gt; select user,host from mysql.user;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：创建一个MySQL账号，用户名：tom，用户密码：123</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'tom'@'localhost' identified by '123';或mysql&gt; create user 'tom'@'127.0.0.1' identified by '123';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：创建一个MySQL账号（要求开通远程连接），主机IP地址：10.1.1.23，用户名：harry，用户密码：123</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'harry'@'10.1.1.23' identified by '123';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试：在IP地址为10.1.1.23的主机上</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install mysql -y# mysql -h 10.1.1.10 -P 3306 -uharry -pEnter password:123选项说明：10.1.1.10 ：MySQL服务器端的IP地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>yum安装mysql：代表安装的是MySQL的客户端</p><p>yum安装mysql-server：代表安装的是MySQL的服务器端</p></blockquote><p>案例：创建一个MySQL账号（要求开通远程连接），主机IP的网段：10.1.1.0，用户名：jack，用户密码：123</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'jack'@'10.1.1.%' identified by '123';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：创建一个MySQL账号（要求开通远程连接），要求面向所有主机开放，用户名：root，用户密码：123</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'root'@'%' identified by '123';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、删除MySQL用户"><a href="#2、删除MySQL用户" class="headerlink" title="2、删除MySQL用户"></a>2、删除MySQL用户</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; drop user '用户名'@'主机名称或主机的IP地址';特别说明：如果在删除用户时没有指定主机的名称或主机的IP地址，则默认删除这个账号的所有信息。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：删除tom这个账号</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; drop user 'tom'@'localhost';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除jack这个账号</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; drop user 'jack'@'10.1.1.%';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：创建两个harry账号（localhost/10.1.1.23），然后删除其中的某个</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'harry'@'localhost' identified by '123';mysql&gt; create user 'harry'@'10.1.1.23' identified by '123';mysql&gt; drop user 'harry'@'10.1.1.23';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>扩展：删除MySQL账号的另外一种方式</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; delete from mysql.user where user='root' and host='%';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3、修改MySQL用户"><a href="#3、修改MySQL用户" class="headerlink" title="3、修改MySQL用户"></a>3、修改MySQL用户</h3><p>特别说明：MySQL用户重命名通常可以更改两部分，一部分是用户的名称，一部分是被允许访问的主机名称或主机的IP地址。</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; rename user 旧用户信息 to 新用户信息;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把用户‘root‘@’%’更改为‘root‘@’10.1.1.%’</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; rename user 'root'@'%' to 'root'@'10.1.1.%';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把‘tom‘@’localhost’更名为‘harry‘@’localhost’</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'tom'@'localhost' identified by '123';mysql&gt; rename user 'tom'@'localhost' to 'harry'@'localhost';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>扩展：使用update语句更新用户信息</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; update mysql.user set user='tom',host='localhost' where user='harry' and host='localhost';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="☆-权限管理"><a href="#☆-权限管理" class="headerlink" title="☆ 权限管理"></a>☆ 权限管理</h2><h3 id="1、权限说明"><a href="#1、权限说明" class="headerlink" title="1、权限说明"></a>1、权限说明</h3><p>所有权限说明<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html">https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html</a></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">USAGE无权限,只有登录数据库,只可以使用test或test_*数据库ALL所有权限以下权限为指定权限select/update/delete/super/replication slave/reload...with grant option 选项表示允许把自己的权限授予其它用户或者从其他用户收回自己的权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>默认情况下，分配权限时如果没有指定with grant option，代表这个用户不能下发权限给其他用户，但是这个权限分配不能超过自身权限。</p></blockquote><h3 id="2、权限保存位置（了解）"><a href="#2、权限保存位置（了解）" class="headerlink" title="2、权限保存位置（了解）"></a>2、权限保存位置（了解）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql.user所有mysql用户的账号和密码，以及用户对全库全表权限（*.*）mysql.db非mysql库的授权都保存在此(db.*)mysql.table_priv某库某表的授权(db.table)mysql.columns_priv某库某表某列的授权(db.table.col1)mysql.procs_priv某库存储过程的授权<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、给用户授权"><a href="#3、给用户授权" class="headerlink" title="3、给用户授权"></a>3、给用户授权</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; grant 权限1,权限2 on 库.表 to 用户@主机mysql&gt; grant 权限(列1,列2,...) on 库.表 to 用户@主机<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>库.表表示方法：*.*代表所有数据库的所有数据表，db_itheima.*代表db_itheima数据库中的所有数据表，db_itheima.tb_admin，代表db_itheima数据库中的tb_admin表</p></blockquote><p>案例：给tom账号分配db_itheima的查询权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; grant select on db_itheima.* to 'tom'@'localhost';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：给tom账号分配db_itheima.tb_student数据表的权限（要求只能更改age字段）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; grant update(age) on db_itheima.tb_student to 'tom'@'localhost';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：添加一个root@%账号，然后分配所有权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create user 'root'@'%' identified by '123';mysql&gt; grant all on *.* to 'root'@'%';mysql&gt; flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4、查询用户权限"><a href="#4、查询用户权限" class="headerlink" title="4、查询用户权限"></a>4、查询用户权限</h3><p>查询当前用户权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; show grants;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查询其他用户权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; show grants for '用户名称'@'授权的主机名称或IP地址';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5、with-grant-option选项"><a href="#5、with-grant-option选项" class="headerlink" title="5、with grant option选项"></a>5、with grant option选项</h3><p>with grant option选项作用：代表此账号可以为其他用户下发权限，但是下发的权限不能超过自身权限。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; grant all on *.* to 'amy'@'10.1.1.%' identified by '123' with grant option;mysql&gt; grant all on *.* to 'harry'@'10.1.1.%' identified by '123'; 如以上命令所示：amy拥有下发权限的功能，而harry不具备下发权限的功能。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果grant授权时没有with grant option选项，则其无法为其他用户授权。</p></blockquote><h3 id="6、使用grant创建用户"><a href="#6、使用grant创建用户" class="headerlink" title="6、使用grant创建用户"></a>6、使用grant创建用户</h3><blockquote><p>说明：5.7以后==不推荐==，未来会被弃用！</p></blockquote><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; grant 权限 on 数据库.数据表 to '新用户名称'@'授权主机名称或IP地址' identified by '用户的密码';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：创建一个root账号，主机为%，授予所有权限，密码为123</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; grant all on *.* to 'root'@'%' identified by '123';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7、revoke回收权限"><a href="#7、revoke回收权限" class="headerlink" title="7、revoke回收权限"></a>7、revoke回收权限</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">revoke 权限 on 库.表 from 用户;撤消指定的权限mysql&gt; revoke update on db01.tt1 from 'tom'@'10.1.1.1';撤消所有的权限mysql&gt; revoke select on db01.* from 'tom'@'10.1.1.1';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：从tom账号中回收select权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; revoke select on db_itheima.* from 'tom'@'localhost';mysql&gt; flush privileges;mysql&gt; show grants for 'tom'@'localhost';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：从tom账号中回收update权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; revoke update(age) on db_itheima.tb_student from 'tom'@'localhost';mysql&gt; flush privileges;mysql&gt; show grants for 'tom'@'localhost';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="二、MySQL备份概述"><a href="#二、MySQL备份概述" class="headerlink" title="二、MySQL备份概述"></a>二、MySQL备份概述</h1><h2 id="1、关于数据保存你要知道"><a href="#1、关于数据保存你要知道" class="headerlink" title="1、关于数据保存你要知道"></a>1、关于数据保存你要知道</h2><p><strong>思考：</strong>备份和冗余有什么区别？</p><p>备份： 能够防止由于<strong>机械故障</strong>以及<strong>人为误操作</strong>带来的数据丢失，例如将数据库文件保存在了其它地方。</p><p>冗余： 数据有多份冗余，但不等备份，<strong>只能防止机械故障</strong>带来的数据丢失，例如主备模式、数据库集群。 </p><h2 id="2、到底要备份什么"><a href="#2、到底要备份什么" class="headerlink" title="2、到底要备份什么"></a>2、到底要备份什么</h2><h3 id="☆-备份什么"><a href="#☆-备份什么" class="headerlink" title="☆ 备份什么"></a>☆ 备份什么</h3><p>数据库：==一堆物理文件的集合==；日志文件(二进制日志)+数据文件+配置文件</p><p>① 数据文件</p><p>② 配置文件 =&gt; my.cnf</p><p>③ 日志文件（主要是二进制日志文件）</p><h3 id="☆-MySQL体系结构"><a href="#☆-MySQL体系结构" class="headerlink" title="☆ MySQL体系结构"></a>☆ MySQL体系结构</h3><p>扩展：MySQL体系结构（MySQL =&gt; DBMS软件到底是由哪些层构成的）</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828145811383.png" alt="image-20200828145811383"></p><h3 id="☆-存储引擎层（MyISAM与InnoDB引擎）"><a href="#☆-存储引擎层（MyISAM与InnoDB引擎）" class="headerlink" title="☆ 存储引擎层（MyISAM与InnoDB引擎）"></a>☆ 存储引擎层（MyISAM与InnoDB引擎）</h3><p>存储引擎层：简单来说，就是数据的存储方式。在MySQL中，我们可以使用<code>show engines</code>查看当前数据库版本支持哪些引擎，常见的数据存储引擎：InnoDB、MyISAM、NDB…</p><blockquote><p>常见面试题：请简述MySQL的MyISAM引擎与InnoDB引擎的区别</p></blockquote><p>① MyISAM引擎：擅长数据的查询，支持全文索引</p><p>② InnoDB引擎：Supports transactions, row-level locking, and foreign keys，支持事务处理、行级锁、支持外键。</p><h3 id="☆-存储层（数据文件是如何进行存储的）"><a href="#☆-存储层（数据文件是如何进行存储的）" class="headerlink" title="☆ 存储层（数据文件是如何进行存储的）"></a>☆ 存储层（数据文件是如何进行存储的）</h3><p>问题：存储引擎到底是如何保存数据文件的？</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create database db_itheima default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>提出问题：我能不能不进入MySQL终端，然后在命令行中直接创建一个数据库呢？-e</p></blockquote><p>当数据库创建完毕后，查看/mysql_3306/data文件夹：</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828152248180.png" alt="image-20200828152248180"></p><p>db_itheima文件夹中还有一个文件<code>db.opt</code>，存放内容为数据库的编码格式。</p><p>MyISAM引擎</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_user(id int, name char(1)) engine=myisam default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建完成后，查看db_itheima目录信息，发现产生了3个文件</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828152624753.png" alt="image-20200828152624753"></p><blockquote><p>*.frm ：框架文件，定义数据表结构     *.MYI ：INDEX索引，主要用于存放索引文件      *.MYD：数据文件</p></blockquote><p>InnoDB引擎</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_user(id int, name char(1)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>创建完成后，查看db_itheima目录信息，发现产生了2个文件</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828153252277.png" alt="image-20200828153252277"></p><blockquote><p>*.frm ：框架文件，定义数据表结构    *.ibd：索引文件+数据文件</p></blockquote><p>其实InnoDB引擎不仅仅会产生以上两个文件，其在外部data目录中也会产生一个文件（确切来说不能叫做产生文件，而应该叫做共享文件）</p><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828153451881.png" alt="image-20200828153451881"></p><blockquote><p>所以由此可知，InnoDB引擎的数据备份不能简简单单的通过拷贝方式实现，必须使用专业的备份工具。</p></blockquote><h3 id="☆-日志文件（MySQL中我们需要了解哪些日志）"><a href="#☆-日志文件（MySQL中我们需要了解哪些日志）" class="headerlink" title="☆ 日志文件（MySQL中我们需要了解哪些日志）"></a>☆ 日志文件（MySQL中我们需要了解哪些日志）</h3><table><thead><tr><th>日志类型</th><th>写入日志的信息</th></tr></thead><tbody><tr><td>error错误日志</td><td>存放数据库的启动、停止或运行时的错误信息（找ERROR）</td></tr><tr><td>binlog二进制日志</td><td>==数据库的所有更改==操作（DDL/DML/DCL），不包含select或者show这类语句。</td></tr></tbody></table><blockquote><p>error错误日志的命令规则与存放的目录：/data目录下 +  主机名称.err</p></blockquote><p>更改错误日志的存放位置：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf[mysqld]...log_error=data数据目录/主机名称.err或mysql.err<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>binlog二进制日志应用场景：</p><p>用于==主从复制==中，master主服务器将二进制日志中的更改操作发送给slave从服务器，从服务器执行这些更改操作是的和主服务器的更改相同。</p><p>用于==数据的恢复==操作</p></blockquote><p><strong>binlog二进制日志如何开启？</strong></p><p>默认binlog日志是==关闭==的，可以通过修改配置文件完成开启，如下：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf[mysqld]...server-id=10log-bin=data数据目录/binlog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>当我们更改了my.cnf配置文件，一定要记得重启MySQL服务器。service命令</p></blockquote><h2 id="3、备份过程须考虑的因素"><a href="#3、备份过程须考虑的因素" class="headerlink" title="3、备份过程须考虑的因素"></a>3、备份过程须考虑的因素</h2><ul><li>必须制定==详细的备份计划(策略)==（备份频率、时间点、周期）</li><li>备份数据应该放在==非数据库本地==，并建议==有多份副本==</li><li>必须做好==<strong>数据恢复的演练</strong>==（每隔一段时间，对备份的数据在测试环境中进行模拟恢复，保证当出现数据灾难的时候能够及时恢复数据。）</li><li>根据数据应用的场合、特点==选择正确的备份工具==。</li><li>数据的一致性</li><li>服务的可用性</li></ul><h2 id="4、备份的类型"><a href="#4、备份的类型" class="headerlink" title="4、备份的类型"></a>4、备份的类型</h2><h3 id="☆-逻辑备份"><a href="#☆-逻辑备份" class="headerlink" title="☆ 逻辑备份"></a>☆ 逻辑备份</h3><ul><li>备份的是<strong>建表、建库、插入等操作所执行SQL语句</strong>（DDL DML DCL）。</li><li>适用于==中小型数据库，效率相对较低==。 一般在数据库<strong>正常提供服务</strong>的前提下进行，如：<strong>mysqldump</strong>、mydumper、into outfile（表的导出导入）等。</li></ul><ul><li>备份实质：就是把要备份的数据导出成.sql或.txt文件</li></ul><h3 id="☆-物理备份"><a href="#☆-物理备份" class="headerlink" title="☆ 物理备份"></a>☆ 物理备份</h3><ul><li>直接复制==数据库文件==</li><li>适用于==大型数据库==环境，不受存储引擎的限制，但不能恢复到不同的MySQL版本。 </li><li>一般是在==数据库彻底关闭或者不能完成正常提供服务==的前提下进行的备份）；如：tar、cp、==xtrabackup==（数据库可以==正常提供服务==）、lvm snapshot、rsync等</li></ul><ul><li>备份的实质：对数据文件 + 配置文件 + 日志文件进行拷贝操作</li></ul><h3 id="☆-在线热备（数据冗余、AB复制、主从复制）"><a href="#☆-在线热备（数据冗余、AB复制、主从复制）" class="headerlink" title="☆ 在线热备（数据冗余、AB复制、主从复制）"></a>☆ 在线热备（数据冗余、AB复制、主从复制）</h3><ul><li>MySQL的replication架构，如M-S|M-S-S|M-M-S等</li><li>实时在线备份</li></ul><h2 id="5、备份工具"><a href="#5、备份工具" class="headerlink" title="5、备份工具"></a>5、备份工具</h2><h4 id="㈠-社区版安装包中的备份工具"><a href="#㈠-社区版安装包中的备份工具" class="headerlink" title="㈠ 社区版安装包中的备份工具"></a>㈠ 社区版安装包中的备份工具</h4><h5 id="①-mysqldump-逻辑备份，只能-全量备份-）"><a href="#①-mysqldump-逻辑备份，只能-全量备份-）" class="headerlink" title="① mysqldump(逻辑备份，只能==全量备份==）"></a>① mysqldump(逻辑备份，只能==全量备份==）</h5><p>​1）企业版和社区版都包含</p><p>​2）本质上使用==SQL语句描述数据库==及数据并导出</p><p>​3）在MYISAM引擎上锁表，Innodb引擎上锁行</p><p>​4）数据量很大时不推荐使用</p><h5 id="②-mysqlhotcopy-物理备份工具）"><a href="#②-mysqlhotcopy-物理备份工具）" class="headerlink" title="② mysqlhotcopy(物理备份工具）"></a>② mysqlhotcopy(物理备份工具）</h5><p>​1）企业版和社区版都包含</p><p>​2）perl写的一个脚本，本质上是使用锁表语句后再拷贝数据</p><p>​3）==只==支持MYISAM数据引擎</p><h4 id="㈡-企业版安装包中的备份工具"><a href="#㈡-企业版安装包中的备份工具" class="headerlink" title="㈡ 企业版安装包中的备份工具"></a>㈡ 企业版安装包中的备份工具</h4><p><strong>mysqlbackup</strong></p><p>​1）在线备份</p><p>​2）增量备份</p><p>​3）部分备份</p><p>​4）在某个特定时间的一致性状态的备份</p><h4 id="㈢-第三方备份工具"><a href="#㈢-第三方备份工具" class="headerlink" title="㈢ 第三方备份工具"></a>㈢ 第三方备份工具</h4><h5 id="①-XtraBackup和innobackupex-物理备份）"><a href="#①-XtraBackup和innobackupex-物理备份）" class="headerlink" title="① XtraBackup和innobackupex(物理备份）"></a>① XtraBackup和innobackupex(物理备份）</h5><p>​1）Xtrabackup是一个对<strong>InnoDB</strong>做数据备份的工具，支持==在线热备份==（备份时不影响数据读写），是商业备份工具<strong>InnoDB Hotbackup</strong>的一个很好的替代品。</p><p>​2）Xtrabackup有两个主要的工具：xtrabackup、innobackupex</p><p>​a、xtrabackup只能备份==InnoDB和XtraDB==两种数据表，不能备份myisam类型的表。</p><p>​b、innobackupex是将Xtrabackup进行封装的perl脚本，所以能同时备份处理innodb和myisam的存储引擎，但在处理myisam时需要加一个读锁。</p><h5 id="②-mydumper-逻辑备份，备份SQL语句）"><a href="#②-mydumper-逻辑备份，备份SQL语句）" class="headerlink" title="② mydumper(逻辑备份，备份SQL语句）"></a>② mydumper(逻辑备份，备份SQL语句）</h5><p><strong>多线程备份工具</strong></p><p> <a href="https://launchpad.net/mydumper/mydumper-0.9.1.tar.gz">https://launchpad.net/mydumper/mydumper-0.9.1.tar.gz</a>        2015-11-06（最后更新时间）</p><h2 id="6、备份方法"><a href="#6、备份方法" class="headerlink" title="6、备份方法"></a>6、备份方法</h2><ul><li>完全备份（全备）</li><li>增量备份（增量备份基于全量备份）</li></ul><p><img src="/../assets/blog_res/MySQL%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89.assets/image-20200828165223180.png" alt="image-20200828165223180"></p><h1 id="三、MySQL逻辑备份"><a href="#三、MySQL逻辑备份" class="headerlink" title="三、MySQL逻辑备份"></a>三、MySQL逻辑备份</h1><p>##1、mysqldump基本备份</p><p><strong>本质</strong>：导出的是sql语句文件</p><p><strong>优点</strong>：无论是什么存储引擎，都可以用mysqldump备成sql语句</p><p><strong>缺点</strong>：速度较慢,导入时可能会出现格式不兼容的突发状况.==无法直接做增量备份==.</p><p><strong>提供三种级别的备份，表级，库级和全库级</strong> </p><h2 id="2、mysqldump基本语法"><a href="#2、mysqldump基本语法" class="headerlink" title="2、mysqldump基本语法"></a>2、mysqldump基本语法</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">表级别备份mysqldump [OPTIONS] database [tables]库级别备份mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]全库级别备份mysqldump [OPTIONS] --all-databases [OPTIONS]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>准备一些要备份的数据：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create database db_itheima default charset=utf8;mysql&gt; use db_itheima;mysql&gt; create table tb_student(id int not null auto_increment,name varchar(20),age tinyint unsigned default 0,gender enum('male','female'),subject enum('ui','java','yunwei','python'),primary key(id)) engine=innodb default charset=utf8;mysql&gt; insert into tb_student values (null,'刘备',33,'male','java');mysql&gt; insert into tb_student values (null,'关羽',32,'male','yunwei');mysql&gt; insert into tb_student values (null,'张飞',30,'male','python');mysql&gt; insert into tb_student values (null,'貂蝉',18,'female','ui');mysql&gt; insert into tb_student values (null,'大乔',18,'female','ui');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、mysqldump表级备份与还原"><a href="#3、mysqldump表级备份与还原" class="headerlink" title="3、mysqldump表级备份与还原"></a>3、mysqldump表级备份与还原</h2><h3 id="☆-备份"><a href="#☆-备份" class="headerlink" title="☆ 备份"></a>☆ 备份</h3><p>案例：把db_itheima数据库中的tb_student数据表进行备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /tmp/sqlbak# mysqldump db_itheima tb_student &gt; /tmp/sqlbak/tb_student.sql -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="☆-还原"><a href="#☆-还原" class="headerlink" title="☆ 还原"></a>☆ 还原</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql 数据库名称 &lt; .sql文件位置 -pEnter password:123或# mysql -uroot -pEnter password:123mysql&gt; use db_itheimamysql&gt; source .sql文件的位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、mysqldump库级备份与还原"><a href="#4、mysqldump库级备份与还原" class="headerlink" title="4、mysqldump库级备份与还原"></a>4、mysqldump库级备份与还原</h2><h3 id="☆-备份-1"><a href="#☆-备份-1" class="headerlink" title="☆ 备份"></a>☆ 备份</h3><p>案例：把db_itheima数据库进行备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqldump --databases db_itheima &gt; /tmp/sqlbak/db_itheima.sql -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-还原-1"><a href="#☆-还原-1" class="headerlink" title="☆ 还原"></a>☆ 还原</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql &lt; .sql文件位置 -pEnter password:123或# mysql -uroot -pEnter password:123mysql&gt; source .sql文件的位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、mysqldump全库级备份"><a href="#5、mysqldump全库级备份" class="headerlink" title="5、mysqldump全库级备份"></a>5、mysqldump全库级备份</h2><blockquote><p>在MySQL中，如果想使用mysqldump进行全库级备份，必须开启二进制日志！！！</p></blockquote><p>开启二进制日志</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf[mysqld]...server-id=10log-bin=/mysql_3306/data/binlog# service mysql_3306 restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mysqldump高级选项说明：</p><table><thead><tr><th>常用选项</th><th>描述说明</th></tr></thead><tbody><tr><td>–flush-logs, -F</td><td>开始备份前刷新日志（二进制日志）binlog.000001 =&gt; binlog.000002</td></tr><tr><td>–flush-privileges</td><td>备份包含mysql数据库时刷新授权表 =&gt; 刷新用户和授权信息</td></tr><tr><td>–lock-all-tables, -x</td><td>MyISAM一致性，服务可用性（针对所有库所有表）</td></tr><tr><td>–lock-tables, -l</td><td>备份前锁表（针对要备份的库）</td></tr><tr><td>–single-transaction</td><td>适用InnoDB引擎，保证一致性，服务可用性</td></tr><tr><td>–master-data=2</td><td>表示将二进制日志位置和文件名写入到备份文件并在dump文件中注释掉这一行</td></tr><tr><td>–master-data=1</td><td>表示将二进制日志位置和文件名写入到备份文件,在dump文件中不注释这一行</td></tr></tbody></table><p><strong>–master-data参数其他说明：</strong></p><p>1）恢复时会执行，默认是1<br>2）需要RELOAD privilege并必须打开二进制文件<br>3）这个选项会自动打开–lock-all-tables，关闭–lock-tables</p><h3 id="☆-备份-2"><a href="#☆-备份-2" class="headerlink" title="☆ 备份"></a>☆ 备份</h3><p>前提：一定要开启二进制日志</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqldump --all-databases --master-data --single-transaction &gt; /tmp/sqlbak/all.sql -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-还原-2"><a href="#☆-还原-2" class="headerlink" title="☆ 还原"></a>☆ 还原</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql &lt; all.sql -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>mysqldump工具备份的是==SQL语句==，故备份不需要停服务</li><li>使用备份文件==恢复==时，要保证==数据库处于运行状态==</li><li>只能实现全库，指定库，表级别的==某一时刻的备份==，本身==不能增量备份==</li><li>适用于==中小型==数据库</li></ol><h1 id="四、mysqldump-binlog实现增量备份"><a href="#四、mysqldump-binlog实现增量备份" class="headerlink" title="四、mysqldump + binlog实现增量备份"></a>四、mysqldump + binlog实现增量备份</h1><h2 id="1、核心思路"><a href="#1、核心思路" class="headerlink" title="1、核心思路"></a>1、核心思路</h2><p>搞明白一件事：到底什么是增量备份？</p><p>答：① 要有全量备份 ② 继续增删改数据 ③ 再次需要备份时，不需要进行全量备份，只需要备份binlog日志文件即可（因为binlog日志记录了增删改操作的所有SQL语句）</p><h2 id="2、增量备份实验步骤"><a href="#2、增量备份实验步骤" class="headerlink" title="2、增量备份实验步骤"></a>2、增量备份实验步骤</h2><p>第一步：先准备数据（前提）</p><p>第二步：开启二进制，然后做全量备份（全库备份）</p><p>第三步：继续对数据库进行增删改操作</p><p>第四步：突然发生了硬件故障，数据库丢失了</p><p>第五步：恢复全量备份导出的数据（不完整，可能只有90%）</p><p>第六步：备份二进制日志，根据其信息（导入剩余的10%的数据）</p><p>…</p><p>完成</p><h2 id="3、增量备份的具体实践"><a href="#3、增量备份的具体实践" class="headerlink" title="3、增量备份的具体实践"></a>3、增量备份的具体实践</h2><p>第一步：准备数据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create database db_itheima default charset=utf8;mysql&gt; use db_itheima;mysql&gt; create table tb_student(id int not null auto_increment,name varchar(20),age tinyint unsigned default 0,gender enum('male','female'),subject enum('ui','java','yunwei','python'),primary key(id)) engine=innodb default charset=utf8;mysql&gt; insert into tb_student values (null,'刘备',33,'male','java');mysql&gt; insert into tb_student values (null,'关羽',32,'male','yunwei');mysql&gt; insert into tb_student values (null,'张飞',30,'male','python');mysql&gt; insert into tb_student values (null,'貂蝉',18,'female','ui');mysql&gt; insert into tb_student values (null,'大乔',18,'female','ui');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：开启二进制日志，重启服务，然后进行全库备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim my.cnf[mysqld]...server-id=10log-bin=/mysql_3306/data/binlog# service mysql_3306 restart# rm -rf /tmp/sqlbak/*# mysqldump --single-transaction --flush-logs --master-data=2 --all-databases &gt; /tmp/sqlbak/all.sql -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：继续对数据库进行增删改操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; insert into tb_student values (null,'小乔',16,'female','ui');mysql&gt; delete from tb_student where id = 3;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第四步：突然发生了硬件故障，数据库丢失了</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -e "drop database db_itheima;" -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>…故事开始了（删库）</p><p>第五步：动员运维工程师开始进行数据恢复，马上把最新的二进制文件进行备份</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp /mysql_3306/data/binlog.000003 空格 /tmp/sqlbak/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第六步：先进行全库恢复</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql &lt; /tmp/sqlbak/all.sql -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第七步：通过binlog增量备份还原数据到100%</p><p>学会读二进制日志文件，必须通过专业的工具</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqlbinlog /tmp/sqlbak/binlog.000003  =&gt;  重点找事故的临界点，如drop database确认at位置# mysqlbinlog --start-position=4 --stop-position=740 /tmp/sqlbak/binlog.000003 |mysql -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>到此恢复100%数据</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基本SQL语句（上）</title>
      <link href="/2023/12/23/mysql-ji-ben-sql-yu-ju-shang/"/>
      <url>/2023/12/23/mysql-ji-ben-sql-yu-ju-shang/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL基本SQL语句（上）"><a href="#MySQL基本SQL语句（上）" class="headerlink" title="MySQL基本SQL语句（上）"></a>MySQL基本SQL语句（上）</h1><h1 id="一、客户端工具的使用"><a href="#一、客户端工具的使用" class="headerlink" title="一、客户端工具的使用"></a>一、客户端工具的使用</h1><h2 id="1、客户端工具mysql使用"><a href="#1、客户端工具mysql使用" class="headerlink" title="1、客户端工具mysql使用"></a>1、客户端工具mysql使用</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql: mysql命令行工具，一般用来连接访问mysql数据库<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-u, –user=name</td><td>指定登录用户名</td></tr><tr><td>-p, –password</td><td>指定登录密码(注意是小写p),一定要放到最后面</td></tr><tr><td>-h, –host=name</td><td>指定数据库的主机地址</td></tr><tr><td>-P, –port=xxx</td><td>指定数据库的端口号(大写P)</td></tr><tr><td>-S, –socket=name</td><td>指定socket文件</td></tr><tr><td>-e, –execute=name</td><td>使用非交互式操作(在shell终端执行sql语句)</td></tr></tbody></table><p>案例：使用mysql客户端工具连接服务器端（用户名：root、密码：123）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -uroot -p123 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注：以上连接方式虽然可以连接进入到MySQL，但是官方不建议我们直接把密码写入在终端，建议-p然后直接回车，然后在终端中输入密码。</p></blockquote><p>案例：连接10.1.1.100服务器上的MySQL数据库（用户名：itheima，密码：123）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -h 10.1.1.100 -P 3306 -uitheima -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：根据不同的套接字连接同步的数据库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -S /tmp/mysql.sock -uroot -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：在不进入MySQL内部的情况下，执行SQL语句，获取数据信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -e "show databases;" -uroot -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>扩展了解：</strong></p><table><thead><tr><th>默认库</th><th>描述</th></tr></thead><tbody><tr><td>information_schema</td><td>1、==对象信息数据库==，提供对数据库元数据的访问 ，有关MySQL服务器的信息，例如数据库或表的名称，列的数据类型或访问权限等；<br>2、在INFORMATION_SCHEMA中，有数个只读表，它们实际上是视图，而不是基本表，因此你将无法看到与之相关的任何文件；<br>3、视图，是一个虚表，即视图所对应的数据不进行实际存储，数据库中只存储视图的定义，在对视图的数据进行操作时，系统根据视图的定义去操作与视图相关联的基本表</td></tr><tr><td>mysql</td><td>1、mysql数据库是==系统数据库==。它包含存储MySQL服务器运行时所需的信息的表。比如权限表、对象信息表、日志系统表、时区系统表、优化器系统表、杂项系统表等。<br>2、==不可以删除==,也不要轻易修改这个数据库里面的表息。</td></tr><tr><td>performance_schema</td><td>MySQL5.5开始新增一个数据库，主要用于==收集数据库服务器性能==；并且库里表的存储引擎均PERFORMANCE_SCHEMA，而用户是不能创建存储引擎为PERFORMANCE_SCHEMA的表</td></tr><tr><td>sys</td><td>1、mysql5.7增加了sys 系统数据库，通过这个库可以快速的了解系统的元数据信息；<br>2、sys库方便DBA发现数据库的很多信息，解决性能瓶颈；<br>3、这个库是通过视图的形式把information_schema 和performance_schema结合起来，查询出更加令人容易理解的数据</td></tr></tbody></table><h2 id="2、客户端工具mysqladmin使用"><a href="#2、客户端工具mysqladmin使用" class="headerlink" title="2、客户端工具mysqladmin使用"></a>2、客户端工具mysqladmin使用</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysqladmin：客户端管理mysql数据库工具<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="㈠-常用选项"><a href="#㈠-常用选项" class="headerlink" title="㈠ 常用选项"></a>㈠ 常用选项</h4><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-h, –host=name</td><td>指定连接数据库主机</td></tr><tr><td>-p, –password</td><td>指定数据库密码</td></tr><tr><td>-P, –port=#</td><td>指定数据库端口</td></tr><tr><td>-S, –socket=name</td><td>指定数据库socket文件</td></tr><tr><td>-u, –user=name</td><td>指定连接数据库用户</td></tr></tbody></table><h4 id="㈡-常用命令"><a href="#㈡-常用命令" class="headerlink" title="㈡ 常用命令"></a>㈡ 常用命令</h4><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>password [new-password]</td><td>更改密码</td></tr><tr><td>reload</td><td>刷新授权表</td></tr><tr><td>shutdown</td><td>停止mysql服务</td></tr><tr><td>status</td><td>简短查看数据库状态信息</td></tr><tr><td>start-slave</td><td>启动slave</td></tr><tr><td>stop-slave</td><td>停止slave</td></tr><tr><td>variables</td><td>打印可用变量</td></tr><tr><td>version</td><td>查看当前mysql数据库的版本信息</td></tr></tbody></table><p>案例：更改root账号的密码为root</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqladmin password '新密码' -pEnter password:'旧密码'# mysqladmin password 'root' -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：更改密码后，建议刷新授权表（mysql&gt; flush privileges;）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqladmin reload -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：停止mysql</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqladmin shutdown -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>service mysql_3306 stop</p></blockquote><p>案例：查看mysql状态</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqladmin status -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：打印可用变量（mysql本身预置了很多变量信息）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqladmin variables -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：查询mysql版本</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqladmin version -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="二、MySQL中的SQL语句"><a href="#二、MySQL中的SQL语句" class="headerlink" title="二、MySQL中的SQL语句"></a>二、MySQL中的SQL语句</h1><h2 id="1、什么是SQL？"><a href="#1、什么是SQL？" class="headerlink" title="1、什么是SQL？"></a>1、什么是SQL？</h2><p>SQL 是 Structure Query Language(==结构化查询语言==)的缩写,它是使用==关系模型的数据库应==<br>==用语言==,由 IBM 在 20 世纪 70 年代开发出来,作为 IBM 关系数据库原型 System R 的原型关<br>系语言,实现了关系数据库中的信息检索。</p><p>20 世纪 80 年代初,美国国家标准局(ANSI)开始着手制定 SQL 标准,最早的 ANSI 标准于<br>1986 年完成,就被叫作 SQL-86。标准的出台使 SQL 作为标准关系数据库语言的地位得到了<br>加强。SQL 标准目前已几经修改更趋完善。</p><p>正是由于 SQL 语言的标准化,所以大多数关系型数据库系统都支持 SQL 语言,它已经发展<br>成为多种平台进行交互操作的底层会话语言。</p><h2 id="2、SQL语句的分类"><a href="#2、SQL语句的分类" class="headerlink" title="2、SQL语句的分类"></a>2、SQL语句的分类</h2><ul><li><p>DDL(Data Definition Languages)语句:</p><p>==数据定义语言==,这些语句定义了不同的数据段、数据库、表、列、索引等数据库对象的定义。常用的语句关键字主要包括 <strong>create、drop、alter、rename、truncate</strong>。</p></li><li><p>DML(Data Manipulation Language)语句:</p><p>==数据操纵语句==,用于添加、删除、更新和查询数据库记录,并检查数据完整性,常用的语句关键字主要包括 <strong>insert、delete、update</strong>等。</p></li><li><p>DCL(Data Control Language)语句:</p><p>==数据控制语句==,用于控制不同数据段直接的许可和访问级别的语句。这些语句定义了数据库、表、字段、用户的访问权限和安全级别。主要的语句关键字包括 <strong>grant、revoke</strong> 等。</p></li><li><p>DQL(Data Query Language)语句:</p><p>==数据查询语句==，用于从一个或多个表中检索信息。主要的语句关键字包括 <strong>select</strong></p></li></ul><h2 id="3、MySQL中如何求帮助"><a href="#3、MySQL中如何求帮助" class="headerlink" title="3、MySQL中如何求帮助"></a>3、MySQL中如何求帮助</h2><ul><li>亘古不变的官档（软件作用）</li></ul><p><a href="https://dev.mysql.com/doc/refman/5.6/en/sql-syntax.html">MySQL5.6官方文档</a></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/sql-syntax.html">MySQL5.7官方文档</a></p><ul><li>man文档（工具作用）</li></ul><p>man文档可以对mysql的一些基本工具及后台命令求帮助，比如：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@db01 ~]# man mysql[root@db01 ~]# man mysql_install_db[root@db01 ~]# man mysqldump[root@db01 ~]# man mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>MySQL的命令行求帮助（主要针对SQL语句求帮助）</li></ul><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; help;mysql&gt; ?mysql&gt; help create table;根据内容进行查找帮助mysql&gt; ? contents   Account Management   Administration   Data Definition   Data Manipulation   Data Types   Functions   Functions and Modifiers for Use with GROUP BY   Geographic Features   Language Structure   Storage Engines   Stored Routines   Table Maintenance   Transactions   Triggers   寻求账户管理的帮助（一级一级的向内部查）mysql&gt; ? Account Managementmysql&gt; ? CREATE USER<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：在mysql内部，没有clear命令，也就是无法使用clear实现清屏，如果想实现清屏操作，可以使用快捷键Ctrl + Shift + L</p></blockquote><h2 id="4、SQL语句的基本操作"><a href="#4、SQL语句的基本操作" class="headerlink" title="4、SQL语句的基本操作"></a>4、SQL语句的基本操作</h2><h3 id="☆-MySQL的内部结构"><a href="#☆-MySQL的内部结构" class="headerlink" title="☆ MySQL的内部结构"></a>☆ MySQL的内部结构</h3><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825112014915.png" alt="image-20200825112014915"></p><blockquote><p>注：我们平常说的MySQL，其实主要指的是MySQL数据库管理软件。</p></blockquote><p>一个MySQL DBMS可以同时存放多个数据库，理论上一个项目就对应一个数据库。如博客项目blog数据库、商城项目shop数据库、微信项目wechat数据库。</p><p>一个数据库中还可以同时包含多个数据表，而数据表才是真正用于存放数据的位置。（类似我们Office软件中的Excel表格），理论上一个功能就对应一个数据表。如博客系统中的用户管理功能，就需要一个user数据表、博客中的文章就需要一个article数据表、博客中的评论就需要一个message数据表。</p><p>一个数据表又可以拆分为多个字段，每个字段就是一个属性。</p><p>一个数据表除了字段以外，还有很多行，每一行都是一条完整的数据（记录）。</p><h3 id="☆-数据库的基本操作"><a href="#☆-数据库的基本操作" class="headerlink" title="☆ 数据库的基本操作"></a>☆ 数据库的基本操作</h3><h4 id="①-创建数据库"><a href="#①-创建数据库" class="headerlink" title="① 创建数据库"></a>① 创建数据库</h4><p>普及英语小课堂：</p><p>创建 =&gt; create</p><p>数据库 =&gt; database</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create database 数据库名称;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>特别注意：在MySQL中，当一条SQL语句编写完毕后，一定要使用分号;进行结尾，否则系统认为这条语句还没有结束。</p></blockquote><p>案例：创建数据库的相关案例</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">创建db1库create database db1;创建db1库并指定默认字符集create database db1 default charset gbk;如果存在不报错(if not exists)create database if not exists db1 default character set utf8;说明：不能创建相同名字的数据库！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>扩展：编码格式，常见的gbk（中国的编码格式）与utf8（国际通用编码格式）</p></blockquote><p>latin1    256个字符（abcd、1234、传统字符）</p><p>国内汉字无法通过256个字符进行描述，所以国内开发了自己的编码格式gb2312，升级gbk</p><p>中国台湾业开发了一套自己的编码格式big5</p><p>很多项目并不仅仅只在本地使用，也可能支持多国语言，标准化组织开发了一套通用编码utf8，后来5.6版本以后又进行了升级utf8mb4</p><blockquote><p>编写SQL语句是一个比较细致工作，不建议大家直接在终端中输入SQL语句，可以先把你要写的SQL语句写入一个记事本中，然后拷贝执行。</p></blockquote><h4 id="②-查询已创建数据库"><a href="#②-查询已创建数据库" class="headerlink" title="② 查询已创建数据库"></a>② 查询已创建数据库</h4><p>英语小课堂：</p><p>显示 =&gt; show</p><p>数据库 =&gt; database</p><p>基本语法：</p><p>显示所有数据库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; show databases;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示某个数据库的数据结构</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; show create database db_itheima;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="③-修改数据库信息"><a href="#③-修改数据库信息" class="headerlink" title="③ 修改数据库信息"></a>③ 修改数据库信息</h4><p>在MySQL5以后的版本中，MySQL不支持更改数据库的名称。我们所谓的修改数据库主要修改的是数据库的编码格式。</p><p>英语小课堂：</p><p>修改 =&gt; alter</p><p>数据库 =&gt; database</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter database 数据库名称 default charset=新编码格式;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把db_itheima数据库的编码格式更改为gbk</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter database db_itheima default charset=gbk;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="④-删除数据库"><a href="#④-删除数据库" class="headerlink" title="④ 删除数据库"></a>④ 删除数据库</h4><p>英语小课堂：</p><p>删除 =&gt; drop</p><p>数据库 =&gt; database</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; drop database 数据库名称;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除db_itheima数据库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; drop database db_itheima;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、数据表的基本操作"><a href="#5、数据表的基本操作" class="headerlink" title="5、数据表的基本操作"></a>5、数据表的基本操作</h2><h3 id="☆-数据表的创建"><a href="#☆-数据表的创建" class="headerlink" title="☆ 数据表的创建"></a>☆ 数据表的创建</h3><p>英语小课堂：</p><p>创建 =&gt; create</p><p>数据表 =&gt; table</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create table 数据表名称(字段1 字段类型 [字段约束],字段2 字段类型 [字段约束],...); <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：创建一个admin管理员表，拥有3个字段（编号、用户名称、用户密码）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create database db_itheima;mysql&gt; use db_itheima;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>use在MySQL中的含义代表选择，use 数据库名称相当于选择指定的数据库。而且use比较特殊，其选择结束后，其尾部可以不加分号；但是强烈建议所有的SQL语句都要加分号，养成一个好习惯。</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create table tb_admin(id tinyint,    username varchar(20),    password char(32)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>tinyint ：微整型，范围-128 ~ 127，无符号型，则表示0 ~ 255</p></blockquote><blockquote><p>表示字符串类型可以使用char与varchar，char代表固定长度的字段，varchar代表变化长度的字段。</p></blockquote><p>案例：创建一个article文章表，拥有4个字段（编号、标题、作者、内容）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_article(id int,title varchar(50),author varchar(20),content text) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>text ：文本类型，一般情况下，用varchar存储不了的字符串信息，都建议使用text文本进行处理。</p></blockquote><blockquote><p>varchar存储的最大长度，理论值65535个字符。但是实际上，有几个字符是用于存放内容的长度的，所以真正可以使用的不足65535个字符，另外varchar类型存储的字符长度还和编码格式有关。1个GBK格式的占用2个字节长度，1个UTF8格式的字符占用3个字节长度。GBK = 65532<del>65533/2，UTF8 = 65532</del>65533/3</p></blockquote><h3 id="☆-查询已创建数据表"><a href="#☆-查询已创建数据表" class="headerlink" title="☆ 查询已创建数据表"></a>☆ 查询已创建数据表</h3><p>英语小课堂：</p><p>显示 =&gt; show</p><p>数据表 =&gt; table</p><p>显示所有数据表（当前数据库）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use 数据库名称;mysql&gt; show tables;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>显示数据表的创建过程（编码格式、字段等信息）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; show create table 数据表名称;或mysql&gt; desc 数据表名称;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="☆-修改数据表信息"><a href="#☆-修改数据表信息" class="headerlink" title="☆ 修改数据表信息"></a>☆ 修改数据表信息</h3><h4 id="①-数据表字段添加"><a href="#①-数据表字段添加" class="headerlink" title="① 数据表字段添加"></a>① 数据表字段添加</h4><p>英语小课堂：</p><p>修改 =&gt; alter</p><p>数据表 =&gt; table</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter table 数据表名称 add 新字段名称 字段类型 first|after 其他字段名称;选项说明：first：把新添加字段放在第一位after 字段名称：把新添加字段放在指定字段的后面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：在tb_article文章表中添加一个addtime字段，类型为date(年-月-日)</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter table tb_article add addtime date after content;mysql&gt; desc tb_article;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="②-修改字段名称或字段类型"><a href="#②-修改字段名称或字段类型" class="headerlink" title="② 修改字段名称或字段类型"></a>② 修改字段名称或字段类型</h4><p>修改字段名称与字段类型（也可以只修改名称）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter table tb_admin change username user varchar(40);mysql&gt; desc tb_admin;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>仅修改字段的类型</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter table tb_admin modify user varchar(20);mysql&gt; desc tb_admin;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="③-删除某个字段"><a href="#③-删除某个字段" class="headerlink" title="③ 删除某个字段"></a>③ 删除某个字段</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter table tb_article drop 字段名称;mysql&gt; desc tb_article;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="④-修改数据表引擎（MyISAM或InnoDB）"><a href="#④-修改数据表引擎（MyISAM或InnoDB）" class="headerlink" title="④ 修改数据表引擎（MyISAM或InnoDB）"></a>④ 修改数据表引擎（MyISAM或InnoDB）</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter table tb_article engine=myisam;mysql&gt; show create table tb_article;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="⑤-修改数据表的编码格式"><a href="#⑤-修改数据表的编码格式" class="headerlink" title="⑤ 修改数据表的编码格式"></a>⑤ 修改数据表的编码格式</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter table tb_admin default charset=gbk;mysql&gt; show create table tb_admin;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="⑥-修改数据表名称"><a href="#⑥-修改数据表名称" class="headerlink" title="⑥ 修改数据表名称"></a>⑥ 修改数据表名称</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">移动表到另一个库里并重命名rename table db01.t1 to db02.t11;或者alter table db01.t1 rename db02.t11;只重命名表名不移动rename table tt1 to tt2;或者alter table tt1 rename  tt2;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-删除数据表"><a href="#☆-删除数据表" class="headerlink" title="☆ 删除数据表"></a>☆ 删除数据表</h3><p>英语小课堂：</p><p>删除 =&gt; drop</p><p>数据表 =&gt; table</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; drop table 数据表名称;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、给EditPlus添加一个语法着色"><a href="#6、给EditPlus添加一个语法着色" class="headerlink" title="6、给EditPlus添加一个语法着色"></a>6、给EditPlus添加一个语法着色</h2><p>第一步：把sql.stx语法着色文件放置在某个位置</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155423958.png" alt="image-20200825155423958"></p><p>第二步：打开EditPlus配置</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155455518.png" alt="image-20200825155455518"></p><p>设置编码格式并取消备份文件</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155600949.png" alt="image-20200825155600949"></p><p>第三步：添加SQL语句的语法着色支持</p><p>添加SQL语句支持</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155723702.png" alt="image-20200825155723702"></p><p>引入.sql文件以及语法着色文件</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8A%EF%BC%89.assets/image-20200825155921218.png" alt="image-20200825155921218"></p><h2 id="7、数据的增删改查（重点）"><a href="#7、数据的增删改查（重点）" class="headerlink" title="7、数据的增删改查（重点）"></a>7、数据的增删改查（重点）</h2><p>英语小课堂：</p><p>增加：insert</p><p>删除：delete</p><p>修改：update</p><p>查询：select</p><h3 id="☆-数据的增加操作"><a href="#☆-数据的增加操作" class="headerlink" title="☆ 数据的增加操作"></a>☆ 数据的增加操作</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; insert into 数据表名称([字段1,字段2,字段3...]) values (字段1的值,字段2的值,字段3的值...);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>特别注意：在SQL语句中，除了数字，其他类型的值，都需要使用引号引起来，否则插入时会报错。</p></blockquote><p>第一步：准备一个数据表</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_user(id int,username varchar(20),age tinyint unsigned,gender enum('男','女','保密'),address varchar(255)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>unsigned代表无符号型，只有0到正数。tinyint unsigned无符号型，范围0 ~ 255</p></blockquote><blockquote><p>enum枚举类型，多选一。只能从给定的值中选择一个</p></blockquote><p>第二步：使用insert语句插入数据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; insert into tb_user values (1,'李向阳',24,'男','广东省广州市');mysql&gt; insert into tb_user(id,username,age) values (2,'马鹏',23);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-数据的查询操作"><a href="#☆-数据的查询操作" class="headerlink" title="☆ 数据的查询操作"></a>☆ 数据的查询操作</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from 数据表名称 [where 查询条件];mysql&gt; select id,username,age from 数据表名称 [where 查询条件];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：查询tb_user表中的所有记录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_user;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：查询tb_user表中的id，username以及age字段中对应的数据信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select id,username,age from tb_user;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：只查询id=2的小伙伴信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_user where id=2;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：查询年龄大于23岁的小伙伴信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_user where age&gt;23;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-数据的修改操作"><a href="#☆-数据的修改操作" class="headerlink" title="☆ 数据的修改操作"></a>☆ 数据的修改操作</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; update 数据表名称 set 字段1=更新后的值,字段2=更新后的值,... where 更新条件;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>特别说明：如果在更新数据时，不指定更新条件，则其会把这个数据表的所有记录全部更新一遍。</p></blockquote><p>案例：修改username=’马鹏’这条记录，将其性别更新为男，家庭住址更新为广东省深圳市</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; update tb_user set gender='男',address='广东省深圳市' where username='马鹏';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：今年是2020年，假设到了2021年，现在存储的学员年龄都差1岁，整体进行一次更新</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; update tb_user set age=age+1;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-数据的删除操作"><a href="#☆-数据的删除操作" class="headerlink" title="☆ 数据的删除操作"></a>☆ 数据的删除操作</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; delete from 数据表名称 [where 删除条件];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除tb_user表中，id=1的用户信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; delete from tb_user where id=1;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>delete from与truncate清空数据表操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; delete from 数据表;或mysql&gt; truncate 数据表;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>delete from与truncate区别在哪里？</p><ul><li>delete：删除==数据记录==<ul><li>数据操作语言（DML）</li><li>在事务控制里，DML语句要么commit，要么rollback</li><li>删除==大量==记录速度慢，==只删除数据==不回收高水位线</li><li>可以==带条件==删除</li></ul></li><li>truncate：删除==所有数据记录==<ul><li>数据定义语言（DDL）</li><li>==不在==事务控制里，DDL语句执行前会提交前面所有未提交的事务</li><li>清里大量数据==速度快==，回收高水位线（high water mark）</li><li>==不能带条件删除==</li></ul></li></ul><h2 id="8、自动增长（水位线）与主键约束"><a href="#8、自动增长（水位线）与主键约束" class="headerlink" title="8、自动增长（水位线）与主键约束"></a>8、自动增长（水位线）与主键约束</h2><h3 id="☆-自动增长（对某个字段进行自动编号）"><a href="#☆-自动增长（对某个字段进行自动编号）" class="headerlink" title="☆ 自动增长（对某个字段进行自动编号）"></a>☆ 自动增长（对某个字段进行自动编号）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create table tb_user(id int not null auto_increment,username varchar(20),age tinyint unsigned,gender enum('男','女','保密'),address varchar(255)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>not null代表非空约束，这个字段只要是插入数据就必须要有值。</p></blockquote><h3 id="☆-主键约束（非空、唯一）"><a href="#☆-主键约束（非空、唯一）" class="headerlink" title="☆ 主键约束（非空、唯一）"></a>☆ 主键约束（非空、唯一）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">create table tb_user(id int not null auto_increment,username varchar(20),age tinyint unsigned,gender enum('男','女','保密'),address varchar(255),primary key(id)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>插入数据库时，id位置直接写NULL即可</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; insert into tb_user values (null,'李向阳',24,'男','广东省广州市');mysql&gt; insert into tb_user values (null,'马鹏',23,'男','广东省深圳市');mysql&gt; insert into tb_user values (null,'上官婉儿',18,'女','湖南省长沙市');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL介绍及安装</title>
      <link href="/2023/12/23/mysql-jie-shao-ji-an-zhuang/"/>
      <url>/2023/12/23/mysql-jie-shao-ji-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL介绍及安装"><a href="#MySQL介绍及安装" class="headerlink" title="MySQL介绍及安装"></a>MySQL介绍及安装</h1><h1 id="一、MySQL概述"><a href="#一、MySQL概述" class="headerlink" title="一、MySQL概述"></a>一、MySQL概述</h1><h2 id="1、关系型数据库与非关系型数据库"><a href="#1、关系型数据库与非关系型数据库" class="headerlink" title="1、关系型数据库与非关系型数据库"></a>1、关系型数据库与非关系型数据库</h2><p>RDBMS（relational database management system），既关系型数据库管理系统。</p><p>简单来说，关系型数据库，是指采用了==二维表格==来组织数据的数据库。</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824093353050.png" alt="image-20200824093353050"></p><blockquote><p>扩展：数据库在行业内一般会有两种情况，关系型数据库与非关系型数据库。非关系型数据库并不是通过二维表格来维护数据的，而是通过key/value键值对来维护数据的。</p></blockquote><h2 id="2、常见的关系型数据库"><a href="#2、常见的关系型数据库" class="headerlink" title="2、常见的关系型数据库"></a>2、常见的关系型数据库</h2><p>==oracle、mysql==、DB2（IBM）、Sybase、==SQL server==（Microsoft微软）、IBM Informix</p><p>关系型数据库的**最大特点就是==事务的一致性==**：所以也在对事物一致性的维护中有很大的开销.</p><h2 id="3、什么是事务"><a href="#3、什么是事务" class="headerlink" title="3、什么是事务"></a>3、什么是事务</h2><p>1）事务由一条或者多条sql语句组成；</p><p>2）在事务中的操作，这些sql语句要么都成功执行，要么都不执行，这就是一个事务。 </p><p>==举例说明：==</p><ol><li>&nbsp;&nbsp;&nbsp; 登陆ATM机，输入密码； </li><li>&nbsp;&nbsp;&nbsp; 连接数据库，验证密码； </li><li>&nbsp;&nbsp;&nbsp; 验证成功，获得用户信息，比如存款余额等； </li><li>&nbsp;&nbsp;&nbsp; 用户输入需要转账的金额，按下确认键；</li><li>&nbsp;&nbsp;&nbsp; ==从后台数据库中减掉用户账户上的对应金额（update语句）；== </li><li>&nbsp;&nbsp;&nbsp; ==从后台数据库中给对方账户增加相应的金额（update语句）；== </li><li>&nbsp;&nbsp;&nbsp; 确认，退卡，走人；</li></ol><h2 id="4、事务特点-ACID）"><a href="#4、事务特点-ACID）" class="headerlink" title="4、事务特点(ACID）"></a>4、事务特点(ACID）</h2><ul><li><p>原子性(Atomicity)：</p><p>事务中的全部操作在数据库中是不可分割的，要么==全部完成==，要么==均不执行==。</p></li><li><p>一致性(Consistency)：</p><p>指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态，不能破坏关系数据的完整性以及业务逻辑上的一致性。</p></li><li><p>隔离性(Isolation)：</p><p>一个事务的执行不受其他事务的干扰，事务执行的中间结果对其他事务必须是透明的。隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。 </p></li><li><p>持久性(Durability)：</p><p>持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。</p></li></ul><blockquote><p>对数据的==一致性==要求较高;典型的==银行及支付系统类==；</p></blockquote><h2 id="5、MySQL数据库概述"><a href="#5、MySQL数据库概述" class="headerlink" title="5、MySQL数据库概述"></a>5、MySQL数据库概述</h2><ul><li>MySQL是一种关系型数据库管理系统</li><li>由瑞典MySQL AB 公司开发，目前属于Oracle旗下</li><li>MySQL是C/S架构</li></ul><h2 id="6、MySQL数据库版本"><a href="#6、MySQL数据库版本" class="headerlink" title="6、MySQL数据库版本"></a>6、MySQL数据库版本</h2><ul><li><p>**社区版：MySQL Community Edition  (==GPL==) **</p><ol><li>可以看做是企业版的“广泛体验版（小白鼠版）”，未经各个专有系统平台的压力测试和性能测试</li><li>基于GPL协议发布，可以随意下载使用 </li><li>没有任何官方技术支持服务</li></ol></li><li><p>**企业版：MySQL Enterprise Edition(==commercial==) **</p><ol><li>提供了比较全面的高级功能、管理工具及技术支持 </li><li>安全性、稳定性、可扩展性比较好</li></ol></li><li><p><strong>集群版</strong>：MySQL Cluster CGE(==commercial==)</p></li></ul><p><strong>扩充：关于版本的命名方式如何定义？</strong></p><table><thead><tr><th>版本</th><th>说明</th></tr></thead><tbody><tr><td>α（Alpha）版</td><td>内测版，内部交流或者专业测试人员测试用。Bug较多，普通用户最好不要安装。</td></tr><tr><td>β（Beta）版</td><td>公测版，专业爱好者大规模测试用，存在一些缺陷，该版本也不适合一般用户安装。</td></tr><tr><td>γ ( Gamma )版</td><td>相当成熟的测试版，与即将发行的正式版相差无几。</td></tr><tr><td>==Final==</td><td>正式版本</td></tr><tr><td>Free</td><td>自由版本</td></tr><tr><td>==Release==</td><td>发行版本</td></tr><tr><td>==Standard==</td><td>标准版本</td></tr><tr><td>==Mini==</td><td>迷你精简版本,只有最基本的功能</td></tr><tr><td>Upgrade</td><td>升级版本</td></tr><tr><td>==GA(GenerallyAvailable)==</td><td>开发团队认为该版本是稳定版,可以在较为关键的场合使用。</td></tr><tr><td>Retail</td><td>零售版</td></tr></tbody></table><h2 id="7、获取MySQL软件"><a href="#7、获取MySQL软件" class="headerlink" title="7、获取MySQL软件"></a>7、获取MySQL软件</h2><p>官网：<a href="http://www.mysql.com/">www.mysql.com</a></p><p>第一步：单击Downloads下载</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100029387.png" alt="image-20200824100029387"></p><p>第二步：找到社区版</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100128238.png" alt="image-20200824100128238"></p><p>第三步：单击进入MySQL社区版下载页面</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100159182.png" alt="image-20200824100159182"></p><p>第四步：选择合适的版本</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100400707.png" alt="image-20200824100400707"></p><p>① GLIBC版本（相当于Windows中的绿色版）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100615418.png" alt="image-20200824100615418"></p><p>② 源码编译版本（需要源码编译三步走 =&gt; 配置 + 编译 + 安装）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824100817171.png" alt="image-20200824100817171"></p><h1 id="二、CentOS7-6操作系统最小化安装"><a href="#二、CentOS7-6操作系统最小化安装" class="headerlink" title="二、CentOS7.6操作系统最小化安装"></a>二、CentOS7.6操作系统最小化安装</h1><h2 id="1、创建自定义虚拟机环境"><a href="#1、创建自定义虚拟机环境" class="headerlink" title="1、创建自定义虚拟机环境"></a>1、创建自定义虚拟机环境</h2><p>第一步：选择自定义（根据需求设定服务器环境）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824102824039.png" alt="image-20200824102824039"></p><p>第二步：选择稍后安装操作系统</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824102912744.png" alt="image-20200824102912744"></p><p>第三步：选择操作系统类型</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824102933763.png" alt="image-20200824102933763"></p><p>第四步：设置虚拟机名称及路径（建议剩余空间大于等于20G）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103023816.png" alt="image-20200824103023816"></p><p>第五步：设置CPU核数</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103100284.png" alt="image-20200824103100284"></p><p>第六步：设置MEM内存</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103130824.png" alt="image-20200824103130824"></p><p>第七步：设置网络连接（NAT模式）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103157354.png" alt="image-20200824103157354"></p><p>剩下的全部默认，一路下一步，直至设置完成！</p><h2 id="2、安装CentOS7-6最小化模式"><a href="#2、安装CentOS7-6最小化模式" class="headerlink" title="2、安装CentOS7.6最小化模式"></a>2、安装CentOS7.6最小化模式</h2><p>第一步：加载光盘镜像</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103435226.png" alt="image-20200824103435226"></p><p>第二步：启动虚拟机，安装CentOS7.6</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103512284.png" alt="image-20200824103512284"></p><p>第三步：设置安装语言（必须选择全英文）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103648437.png" alt="image-20200824103648437"></p><p>第四步：设置服务器时间（Asia/Shanghai）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103734239.png" alt="image-20200824103734239"></p><p>第五步：软件选择，最小化然后必须要勾选开发工具（里面主要是GCC编译器）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824103912466.png" alt="image-20200824103912466"></p><p>第六步：自动分区</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824104015944.png" alt="image-20200824104015944"></p><p>第七步：设置网络连接为自动连接（开机后，自动连接网络）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824104058317.png" alt="image-20200824104058317"></p><p>第八步：设置ROOT账号密码以及自定义用户（建议为itheima）</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824104211477.png" alt="image-20200824104211477"></p><h2 id="3、CentOS7-6操作系统最小化后续配置"><a href="#3、CentOS7-6操作系统最小化后续配置" class="headerlink" title="3、CentOS7.6操作系统最小化后续配置"></a>3、CentOS7.6操作系统最小化后续配置</h2><p>① 设置主机名称</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl set-hostname centos7.itcast.cn# su<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>② 更改IP获取方式为静态设置以及绑定主机名+IP到/etc/hosts</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vi /etc/sysconfig/network-scripts/ifcfg-ens33TYPE="Ethernet"BOOTPROTO="none"IPADDR=10.1.1.10NETMASK=255.255.255.0GATEWAY=10.1.1.2DNS1=8.8.8.8DNS2=119.29.29.29NAME="ens33"DEVICE="ens33"ONBOOT="yes"# vi /etc/hosts10.1.1.10 centos7.itcast.cn# systemctl restart network如果是多网卡形式，建议使用ifdown与ifup# ifdown ens33# ifup ens33# ip a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>③ 关闭防火墙与SELinux</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld# setenforce 0# vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>④ 配置公网YUM源（可以考虑腾讯）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install wget -y# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos7_base.repo# yum clean all# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⑤ 安装扩展软件（bash-completion自动补全、vim编辑器、net-tools网络工具包以及ntpdate时间同步工具）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install bash-completion vim net-tools ntpdate -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>⑥ ntpdate时间同步 </p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate 120.25.108.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、拍摄快照：把CentOS7-6最小化系统做模板机"><a href="#4、拍摄快照：把CentOS7-6最小化系统做模板机" class="headerlink" title="4、拍摄快照：把CentOS7.6最小化系统做模板机"></a>4、拍摄快照：把CentOS7.6最小化系统做模板机</h2><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824112502117.png" alt="image-20200824112502117"></p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824112539814.png" alt="image-20200824112539814"></p><blockquote><p>拍摄快照完成后，这台机器就可以关机啦，以后专门充当克隆用的母机！</p></blockquote><h1 id="三、MySQL的安装的几种方式"><a href="#三、MySQL的安装的几种方式" class="headerlink" title="三、MySQL的安装的几种方式"></a>三、MySQL的安装的几种方式</h1><h2 id="1、MySQL安装方式"><a href="#1、MySQL安装方式" class="headerlink" title="1、MySQL安装方式"></a>1、MySQL安装方式</h2><p>二进制软件包安装</p><p>① yum安装或rpm安装（略）</p><p>② glibc版本安装（相当于Windows中的绿色软件）</p><p>命名：==mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz== </p><p>依赖[^glibc]库，可以安装在通用的Linux系统下</p><p>源码包编译安装</p><p>命名：mysql-5.7.31.tar.gz，通用的Linux下都可以编译安装。</p><h2 id="2、三种安装方式的区别"><a href="#2、三种安装方式的区别" class="headerlink" title="2、三种安装方式的区别"></a>2、三种安装方式的区别</h2><table><thead><tr><th>安装方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>rpm</td><td>安装卸载简单</td><td>可定制性差</td></tr><tr><td>glibc</td><td>可定制性相比rpm包灵活些</td><td>安装相比rpm包复杂些，需要手动初始化数据库</td></tr><tr><td>源码安装</td><td>可定制性最强，根据需求和功能定制</td><td>安装麻烦，需要手动初始化数据库</td></tr></tbody></table><blockquote><p>在企业中，数据库的安装很少使用rpm方式，大部分都是基于源码安装以及glibc安装！</p></blockquote><h2 id="3、区分数据库与数据库实例"><a href="#3、区分数据库与数据库实例" class="headerlink" title="3、区分数据库与数据库实例"></a>3、区分数据库与数据库实例</h2><h4 id="㈠-什么是MySQL数据库？"><a href="#㈠-什么是MySQL数据库？" class="headerlink" title="㈠ 什么是MySQL数据库？"></a>㈠ 什么是MySQL数据库？</h4><p><strong>数据库（database）：</strong> 操作系统或存储上的==数据文件的集合==。mysql数据库中，数据库文件可以是* .frm、*.MYD、*.MYI、*.ibd等结尾的文件， 不同存储引擎文件类型不同。</p><h4 id="㈡-什么是MySQL数据库实例？"><a href="#㈡-什么是MySQL数据库实例？" class="headerlink" title="㈡ 什么是MySQL数据库实例？"></a>㈡ 什么是MySQL数据库实例？</h4><p><strong>数据库实例（instance）：</strong> 由==后台进程或者线程==以及一个==共享内存区==组成。共享内存可以被运行的后台线程所共享。 数据库实例才是真正操作数据库的。</p><p>注意：MySQL的后台守护程序==mysqld==是单进程多线程的工作模式。</p><h4 id="㈢-什么是MySQL数据库服务器？"><a href="#㈢-什么是MySQL数据库服务器？" class="headerlink" title="㈢ 什么是MySQL数据库服务器？"></a>㈢ 什么是MySQL数据库服务器？</h4><p><strong>数据库服务器(database server)：</strong>部署==安装数据库实例==的服务器。</p><h4 id="㈣-数据库和数据库实例之间的关系是什么？"><a href="#㈣-数据库和数据库实例之间的关系是什么？" class="headerlink" title="㈣ 数据库和数据库实例之间的关系是什么？"></a>㈣ 数据库和数据库实例之间的关系是什么？</h4><p>通常情况下，数据库实例和数据库是一一对应的关系，也就是==一个数据库实例对应一个数据库==； 但是，在集群环境中存在==多个数据库实例共同使用一个数据库==。oracle RAC</p><h1 id="四、MySQL的GLIBC版本安装"><a href="#四、MySQL的GLIBC版本安装" class="headerlink" title="四、MySQL的GLIBC版本安装"></a>四、MySQL的GLIBC版本安装</h1><h2 id="1、获取MySQL-GLIBC版本"><a href="#1、获取MySQL-GLIBC版本" class="headerlink" title="1、获取MySQL GLIBC版本"></a>1、获取MySQL GLIBC版本</h2><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824114350352.png" alt="image-20200824114350352"></p><h2 id="2、学会看官方文档"><a href="#2、学会看官方文档" class="headerlink" title="2、学会看官方文档"></a>2、学会看官方文档</h2><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824114911039.png" alt="image-20200824114911039"></p><h2 id="3、安装MySQL依赖库软件"><a href="#3、安装MySQL依赖库软件" class="headerlink" title="3、安装MySQL依赖库软件"></a>3、安装MySQL依赖库软件</h2><p>第一步：克隆模板机，生成MySQL服务器</p><p>第二步：启动系统</p><p>第三步：更改主机名称为mysql.itcast.cn，然后重启网络</p><p>第四步：拍摄快照</p><p>第五步：安装依赖库libaio库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install libaio -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、上传软件包解压，了解目录结构"><a href="#4、上传软件包解压，了解目录结构" class="headerlink" title="4、上传软件包解压，了解目录结构"></a>4、上传软件包解压，了解目录结构</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -xf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz# ls mysql-5.7.31-linux-glibc2.12-x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解压完成后，目录结构如下图所示：</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824115716608.png" alt="image-20200824115716608"></p><p>安装需求：</p><table><thead><tr><th>选项</th><th>值（自定义也可以采用默认形式）</th></tr></thead><tbody><tr><td>安装路径</td><td>/mysql_3306</td></tr><tr><td>数据路径</td><td>/mysql_3306/data</td></tr><tr><td>端口号</td><td>3306</td></tr></tbody></table><h2 id="5、软件的安装（查看官方说明）"><a href="#5、软件的安装（查看官方说明）" class="headerlink" title="5、软件的安装（查看官方说明）"></a>5、软件的安装（查看官方说明）</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html">https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html</a></p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824120143999.png" alt="image-20200824120143999"></p><p>第一步：创建一个数据库专用账号mysql（其所属组也为mysql）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd -r -s /sbin/nologin mysql# id mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第二步：清空系统中的原有mariadb的配置文件(/etc/my.cnf)</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /etc/my.cnf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：把mysql解压后的压缩包（GBLIC版本）移动到/根目录下，然后更名为mysql_3306</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mv mysql-5.7.31-linux-glibc2.12-x86_64 /mysql_3306<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：切换到mysql工作目录/mysql_3306，创建一个mysql-files</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /mysql_3306# mkdir mysql-files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第五步：更改mysql-files权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown mysql:mysql mysql-files# chmod 750 mysql-files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第六步：初始化数据库（可以实现数据库的初始化，而且会产生一个==随机密码==）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># bin/mysqld --initialize --user=mysql --basedir=/mysql_3306选项说明：--initialize  初始化（真正开始干活）--user=mysql  以mysql用户的身份初始化数据库，产生文件都是mysql作为拥有者--basedir=xxx    mysql其安装目录，非常重要运行完毕后，观察最后一行，保存root账号的密码，以备后期使用。2020-08-24T06:46:24.889735Z 1 [Note] A temporary password is generated for root@localhost: (cn_jS+*n2wh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>经验之谈：想查看mysql软件有没有初始化成功，主要看mysql目录下有没有产生data文件夹且文件夹中至少要有一个mysql的文件夹。</p></blockquote><p>第七步：设置安全加密连接（SSL），数据传输会采用加密形式，适合敏感数据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># bin/mysql_ssl_rsa_setup --datadir=/mysql_3306/data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第八步：启动MySQL数据库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp support-files/mysql.server /etc/init.d/mysql_3306<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注：默认情况下，GBLIC版本的数据库要求安装到/usr/local/mysql目录，其mysql.server脚本中对应的目录也是/usr/local/mysql，这会导致mysql无法启动。所以可以更改其basedir以及datadir两个变量</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/init.d/mysql_330646行 basedir=/mysql_330647行 datadir=/mysql_3306/data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第九步：启动MySQL数据库（不能使用systemctl，只能使用service）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service mysql_3306 startStarting MySQL.Logging to '/mysql_3306/data/mysql.itcast.cn.err'.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>特别说明：当MySQL启动成功后，其日志会自动写入到data数据目录中的主机名称.err文件中，这个文件一定要多看，涉及MySQL无法启动、启动报错，其详细的原因99%在.err文件中可以找到问题所在！</p></blockquote><h2 id="6、软件的安装常见问题答疑"><a href="#6、软件的安装常见问题答疑" class="headerlink" title="6、软件的安装常见问题答疑"></a>6、软件的安装常见问题答疑</h2><p>问题1：为什么一定要删除/etc/my.cnf文件，不删除有何影响？</p><p>答：/etc/my.cnf文件是操作系统为mariadb软件预留的配置的文件，之所以一定要删除这个文件，主要原因在于数据库在初始化时，首先在自己的安装目录下寻找有没有my.cnf配置文件，如果有，会自动根据里面的配置信息进行初始化。如果找不到，则到/etc目录下寻找my.cnf文件，如果有，依然会按照其内部的配置进行初始化，但是由于/etc目录下的my.cnf文件是mariadb的，这会导致我们的初始化如果按照mariadb的配置，会导致初始化失败。</p><p>问题2：mysql-files文件夹到底干什么的？</p><p>答：目前mysql-files没有什么用，但是你必须要创建，因为GLIBC属于二进制软件包，其很多配置已经默认了，包括mysql-files文件夹，如果没有这个文件夹可能导致mysql无法启动。</p><blockquote><p>mysql-files：主要用于数据文件的导入与导出（备份与还原），MySQL的备份会产生一个文件，可以xxx.sql或xxx.txt。mysql-files就是导入与导出时，所指定的默认目录。</p></blockquote><p>问题3：到底怎么判断数据库是否初始化成功了？</p><p>答：数据库的安装容易出错的地方就是初始化，一旦初始化失败了，数据库100%启动报错。如何确认数据库是否初始化成功了呢？主要看安装目录下有没有生成一个==data==的文件夹。</p><blockquote><p>一定要看准一点，文件夹名称叫data（数据目录），不是date（时间）</p></blockquote><p>问题4：为什么一定要把mysql.server放在/etc/init.d目录下，不放行不行？</p><p>答：不放也可以，但是这个时候就不能使用service命令启动以及添加到开机启动项了。只能通过bin/mysqld_safe脚本启动数据库。</p><blockquote><p>/etc/init.d是CentOS6以及早期版本中的服务脚本目录，只要把Shell启动脚本放在这个目录下，你就可以使用service进行管理。</p></blockquote><p>问题5：为什么一定要改变/etc/init.d/mysql_3306中的basedir与datadir？</p><p>答：GLIBC版本属于二进制版本，默认已经配置了很多内容，包括默认的安装路径/usr/local/mysql，一旦你的mysql没有安装在这个目录下，则必须手工设置basedir以及datadir其位置，否则脚本无法启动mysql程序</p><p>问题6：如何让mysql自动启动？</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chkconfig --list查询系统中的所有开机启动项# chkconfig --add mysql_3306    必须与/etc/init.d目录下的脚本名称一致# chkconfig mysql_3306 on把2345四种模式全部开启（3字符界面，5图形界面）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>CentOS6及以前版本中，控制服务的开机启动的</p></blockquote><h2 id="7、MySQL-GLIBC版本后续配置"><a href="#7、MySQL-GLIBC版本后续配置" class="headerlink" title="7、MySQL GLIBC版本后续配置"></a>7、MySQL GLIBC版本后续配置</h2><p>第一步：更改管理员root账号的密码</p><ul><li><strong>方法1：</strong></li></ul><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@node1 mysql_3306]# bin/mysqladmin -uroot password '123' -pEnter password:输入刚刚初始化产生的临时密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><strong>方法2</strong></li></ul><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; set password=password('456');   //未来版本将会弃用或者mysql&gt; set password='123';//推荐重置完成后，建议刷新权限，让其立即生效mysql&gt; flush privielges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：把mysql客户端命令添加到环境变量，以后随时可以访问</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo 'export PATH=$PATH:/mysql_3306/bin' &gt;&gt; /etc/profile# source /etc/profile设置完成后，我们可以在任意位置调用mysql客户端命令# mysql -uroot -pEnter password:123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第三步：手工定义MySQL的配置文件（非常重要）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /mysql_3306/my.cnf[mysqld]basedir=/mysql_3306datadir=/mysql_3306/datasocket=/tmp/mysql.sock选项说明：[mysqld]代表针对服务器端进行配置basedir代表数据库的安装目录datadir代表数据目录，以后专门用于存放数据文件的（核心目录）socket代表套接字文件，专门为客户端与服务器端连接提供一个桥梁# service mysql_3306 restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>C(Client) === mysql命令   连（socket套接字）接   mysqld服务器端程序</p></blockquote><p>第四步：安全配置（对于生产环境比较重要）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一路Y，搞定！</p><blockquote><p>其主要就是是否启动密码脚尖器、是否设置root密码、是否允许root远程连接、是否移除测试数据库等等一系列功能。</p></blockquote><p>常见问题：如何关闭MySQL密码强度检测？</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /mysql_3306/my.cnf[mysqld]...validate_password=OFF# service mysql_3306 restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="五、MySQL的源码编译安装"><a href="#五、MySQL的源码编译安装" class="headerlink" title="五、MySQL的源码编译安装"></a>五、MySQL的源码编译安装</h1><h2 id="1、参考MySQL源码安装官方文档"><a href="#1、参考MySQL源码安装官方文档" class="headerlink" title="1、参考MySQL源码安装官方文档"></a>1、参考MySQL源码安装官方文档</h2><p>官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html">https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html</a></p><p><strong>源码安装三步曲：配置——&gt;编译——&gt;安装</strong></p><p>####㈠ 安装须知</p><ul><li>软件包介绍</li></ul><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql-boost-5.7.31.tar.gz可在任意发行版的Linux下安装<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="㈡-安装需求"><a href="#㈡-安装需求" class="headerlink" title="㈡  安装需求"></a>㈡  安装需求</h4><table><thead><tr><th>安装需求</th><th>具体配置</th></tr></thead><tbody><tr><td>安装目录（basedir）</td><td>/mysql_3307</td></tr><tr><td>数据目录（datadir）</td><td>/mysql_3307/data</td></tr><tr><td>端口号</td><td>3307</td></tr><tr><td>socket文件位置</td><td>$basedir/mysql.sock</td></tr><tr><td>字符集</td><td>utf8mb4</td></tr></tbody></table><p>####㈢ ==了解配置选项==</p><ul><li>常用配置选项</li></ul><table><thead><tr><th>配置选项</th><th>描述</th><th>默认值</th><th>建议值</th></tr></thead><tbody><tr><td>CMAKE_INSTALL_PREFIX</td><td>安装基目录(basedir)</td><td>/usr/local/mysql</td><td>根据需求</td></tr><tr><td>MYSQL_DATADIR</td><td>数据目录(datadir)</td><td>$basedir/data</td><td>根据需求</td></tr><tr><td>SYSCONFDIR</td><td>默认配置文件my.cnf路径</td><td></td><td>/etc</td></tr><tr><td>MYSQL_TCP_PORT</td><td>TCP/IP端口</td><td>3306</td><td>非默认端口</td></tr><tr><td>MYSQL_UNIX_ADDR</td><td>套接字socket文件路径</td><td>/tmp/mysql.sock</td><td>$basedir/</td></tr><tr><td>DEFAULT_CHARSET</td><td>默认字符集</td><td>latin1</td><td><strong>utf8mb4</strong></td></tr><tr><td>DEFAULT_COLLATION</td><td>默认校验规则</td><td>latin1_swedish_ci</td><td>utf8mb4_general_ci</td></tr><tr><td>WITH_EXTRA_CHARSETS</td><td>扩展字符集</td><td>all</td><td>all</td></tr><tr><td>ENABLED_LOCAL_INFILE</td><td>是否启用本地加载外部数据文件功能</td><td>OFF</td><td>建议开启</td></tr><tr><td>WITH_SSL</td><td>SSL支持类型</td><td>system</td><td>建议显式指定</td></tr><tr><td>WITH_BOOST</td><td>Boost库源代码的位置</td><td></td><td>Boost库是构建MySQL所必需的,建议事先下载</td></tr></tbody></table><ul><li>存储引擎相关配置项</li></ul><p><strong>说明：</strong></p><p>以下选项值均为布尔值，0或1；0代表不编译到服务器中，1代表编译，建议都静态编译到服务器中。</p><p>其他的存储引擎可以根据实际需求在安装时通过WITH_xxxx_STORAGE_ENGINE=1的方式编译到服务器中。</p><table><thead><tr><th>配置选项</th><th>描述</th></tr></thead><tbody><tr><td>WITH_INNOBASE_STORAGE_ENGINE</td><td>将InnoDB存储引擎插件构建为静态模块编译到服务器中；建议编译到服务器中</td></tr><tr><td>WITH_PARTITION_STORAGE_ENGINE</td><td>是否支持分区</td></tr><tr><td>WITH_FEDERATED_STORAGE_ENGINE</td><td>本地数据库是否可以访问远程mysql数据</td></tr><tr><td>WITH_BLACKHOLE_STORAGE_ENGINE</td><td>黑洞存储引擎，接收数据，但不存储，直接丢弃</td></tr><tr><td>WITH_MYISAM_STORAGE_ENGINE</td><td>将MYISAM存储引擎静态编译到服务器中</td></tr></tbody></table><h2 id="2、MySQL的源码编译安装"><a href="#2、MySQL的源码编译安装" class="headerlink" title="2、MySQL的源码编译安装"></a>2、MySQL的源码编译安装</h2><blockquote><p>建议大家在源码编译安装之前，先拍摄一个快照</p></blockquote><p>第一步：安装MySQL编译需要用到的依赖库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum -y install ncurses-devel cmake libaio-devel openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：上传软件到服务器端并解压</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -xf mysql-boost-5.7.31.tar.gz# cd mysql-5.7.31<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：配置（基于cmake进行配置）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim myconfig.shcmake . \-DCMAKE_INSTALL_PREFIX=/mysql_3307 \-DMYSQL_DATADIR=/mysql_3307/data \-DMYSQL_TCP_PORT=3307 \-DMYSQL_UNIX_ADDR=/mysql_3307/mysql.sock \-DWITH_INNOBASE_STORAGE_ENGINE=1 \-DWITH_PARTITION_STORAGE_ENGINE=1 \-DWITH_FEDERATED_STORAGE_ENGINE=1 \-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \-DWITH_MYISAM_STORAGE_ENGINE=1 \-DENABLED_LOCAL_INFILE=1 \-DEXTRA_CHARSETS=all \-DDEFAULT_CHARSET=utf8mb4 \-DDEFAULT_COLLATION=utf8mb4_general_ci \-DWITH_SSL=system \-DWITH_BOOST=boost# chmod +x myconfig.sh# ./myconfig.sh选项说明：-DCMAKE_INSTALL_PREFIX ：安装路径-DMYSQL_DATADIR ：数据目录-DMYSQL_TCP_PORT ：端口号-DMYSQL_UNIX_ADDR ：套接字文件位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第四步：编译安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># make -j2 &amp;&amp; make install选项说明：-j2 ：代表同时开启多个线程共同实现编译操作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3、编译报错常见问题解析"><a href="#3、编译报错常见问题解析" class="headerlink" title="3、编译报错常见问题解析"></a>3、编译报错常见问题解析</h2><p>问题1：没有boost导致安装失败</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824170915430.png" alt="image-20200824170915430"></p><p>问题2：编译安装中途报错</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824170953774.png" alt="image-20200824170953774"></p><p>解决方案：只能重新编译一下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -f CMakeCache.txt# make -j2 &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4、MySQL数据库的初始化"><a href="#4、MySQL数据库的初始化" class="headerlink" title="4、MySQL数据库的初始化"></a>4、MySQL数据库的初始化</h2><p><strong>注意：</strong>进入到==安装目录==里/mysql_3307</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /mysql_3307<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第一步：创建mysql-files目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">创建系统变量`secure_file_priv`限制导入导出目录并修改权限# mkdir mysql-files# chown -R mysql:mysql /mysql_3307# chmod 750 mysql-files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：数据库初始化操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># bin/mysqld --initialize --user=mysql --basedir=/mysql_3307 --datadir=/mysql_3307/data...2020-08-24T11:07:37.621346Z 1 [Note] A temporary password is generated for root@localhost: O6.iHqrZgzz7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第三步：拷贝mysql.server脚本到/etc/init.d目录，然后启动数据库</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp support-files/mysql.server /etc/init.d/mysql_3307# service mysql_3307 start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>启动异常的解决方案：</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824191029474.png" alt="image-20200824191029474"></p><p>查看mysql.itcast.cn.err这个错误日志</p><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824191502358.png" alt="image-20200824191502358"></p><p>出现以上问题的主要原因在于mysql这个用户对/mysql_3307目录没有写入文件的权限，写入mysql_socket套接字文件。</p><p>解决方案：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown -R mysql.mysql /mysql_3307<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、MySQL源码编译安装后的后续配置"><a href="#5、MySQL源码编译安装后的后续配置" class="headerlink" title="5、MySQL源码编译安装后的后续配置"></a>5、MySQL源码编译安装后的后续配置</h2><p>第一步：编写MySQL配置文件，my.cnf</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /mysql_3307/my.cnf[mysqld]basedir=/mysql_3307datadir=/mysql_3307/datasocket=/mysql_3307/mysql.sock# service mysql_3307 restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：设置管理员的密码</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># bin/mysqladmin -uroot password '123' -pEnter password:O6.iHqrZgzz7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：安全设置</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># bin/mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：添加mysql_3307到开机启动项</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chkconfig --add mysql_3307# chkconfig mysql_3307 on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="六、MySQL常见问题解决方案"><a href="#六、MySQL常见问题解决方案" class="headerlink" title="六、MySQL常见问题解决方案"></a>六、MySQL常见问题解决方案</h1><h2 id="1、如何访问不同的数据库？"><a href="#1、如何访问不同的数据库？" class="headerlink" title="1、如何访问不同的数据库？"></a>1、如何访问不同的数据库？</h2><p><strong>方法一：</strong>直接使用==<strong>对应的客户</strong>==端软件访问</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">访问5.7.31版本数据库：[root@node1 ~]# /mysql_3306/bin/mysql -uroot -pEnter password:Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 3Server version: 5.7.31 MySQL Community Server (GPL)访问5.7.31版本数据库：[root@node1 ~]# /mysql_3307/bin/mysql -uroot -pEnter password:Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 7Server version: 5.7.31 Source distribution<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>方法二：</strong>==定义别名==的方式访问</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@node1 ~]# alias mysql_3306="/mysql_3306/bin/mysql"[root@node1 ~]# alias mysql_3307="/mysql_3307/bin/mysql"[root@node1 ~]# mysql_3306 -uroot -pEnter password:Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 4Server version: 5.7.31 MySQL Community Server (GPL)[root@node1 ~]# mysql_3307 -uroot -pEnter password:Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 8Server version: 5.7.27 Source distribution<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>方法三：</strong>==拷贝相应命令==到PATH可以识别的路径下==并重命名==</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@node1 ~]# unalias mysql_3306[root@node1 ~]# unalias mysql_3307+++++++++++++++++++++我是华丽分隔符+++++++++++++++++++++++++++[root@node1 ~]# cp /mysql_3306/bin/mysql /usr/bin/mysql_3306[root@node1 ~]# cp /mysql_3307/bin/mysql /usr/bin/mysql_3307[root@node1 ~]# which mysql_3306/usr/bin/mysql_3306[root@node1 ~]# which mysql_3307/usr/bin/mysql_3307<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>深度思考：</strong>我们之所以能够连接到数据库里的**==本质==**是什么？答：套接字</p><h2 id="2、MySQL忘记密码的解决方案"><a href="#2、MySQL忘记密码的解决方案" class="headerlink" title="2、MySQL忘记密码的解决方案"></a>2、MySQL忘记密码的解决方案</h2><p><strong>敲黑板：</strong>找问题的解决方法很重要！</p><h3 id="1、跳过授权表（通用）"><a href="#1、跳过授权表（通用）" class="headerlink" title="1、跳过授权表（通用）"></a>1、跳过授权表（通用）</h3><p><img src="/../assets/blog_res/MySQL%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.assets/image-20200824193937756.png" alt="image-20200824193937756"></p><h4 id="㈠-跳过授权表重启数据库（以GLIBC-3306为例）"><a href="#㈠-跳过授权表重启数据库（以GLIBC-3306为例）" class="headerlink" title="㈠ 跳过授权表重启数据库（以GLIBC 3306为例）"></a>㈠ 跳过授权表重启数据库（以GLIBC 3306为例）</h4><h5 id="①-关闭数据库"><a href="#①-关闭数据库" class="headerlink" title="① 关闭数据库"></a>① 关闭数据库</h5><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@node1 ~]# mysqladmin shutdown -pEnter password:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="②-跳过授权表启动"><a href="#②-跳过授权表启动" class="headerlink" title="② 跳过授权表启动"></a>② 跳过授权表启动</h5><p><strong>友情提示：</strong>启动过程可能会一波三折，冷静分析看报错，必能解决！</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># /mysql_3306/bin/mysqld --defaults-file=/mysql_3306/my.cnf --skip-grant-tables --skip-networking=on  --user=mysql &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="㈡-刷新授权表（重要）"><a href="#㈡-刷新授权表（重要）" class="headerlink" title="㈡ 刷新授权表（重要）"></a>㈡ 刷新授权表（重要）</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -uroot -pEnter password:什么都不要输入，直接回车即可mysql&gt; flush privileges;Query OK, 0 rows affected (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="㈢-修改密码"><a href="#㈢-修改密码" class="headerlink" title="㈢ 修改密码"></a>㈢ 修改密码</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; alter user 'root'@'localhost' identified by '123';Query OK, 0 rows affected (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>**==补充：==**如果未能成功，则使用以下语句修改密码</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; UPDATE mysql.user SET authentication_string = PASSWORD('MyNewPass')WHERE User = 'root' AND Host = 'localhost';mysql&gt; FLUSH PRIVILEGES;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改密码后，使用jobs + kill命令，停止正在运行的mysqld进程。然后使用service启动服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># jobs# kill %1# service mysql_3306 start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、Unix和类Unix系统重置（了解）"><a href="#2、Unix和类Unix系统重置（了解）" class="headerlink" title="2、Unix和类Unix系统重置（了解）"></a>2、Unix和类Unix系统重置（了解）</h3><h4 id="㈠-停止数据库"><a href="#㈠-停止数据库" class="headerlink" title="㈠ 停止数据库"></a>㈠ 停止数据库</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@node1 ~]# mysqladmin shutdown -pEnter password:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="㈡-编写创建密码语句到文件"><a href="#㈡-编写创建密码语句到文件" class="headerlink" title="㈡ 编写创建密码语句到文件"></a>㈡ 编写创建密码语句到文件</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '123';" &gt;&gt; /mysql_3306/mysql.pass注意：该文件一定要对启动用户如mysql有所有权限# chown -R mysql. /mysql_3306<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="㈢-指定密码文件启动数据库"><a href="#㈢-指定密码文件启动数据库" class="headerlink" title="㈢ 指定密码文件启动数据库"></a>㈢ 指定密码文件启动数据库</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysqld --defaults-file=/mysql_3306/my.cnf --init-file=/mysql_3306/mysql.pass  --user=mysql &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="㈣-删除密码文件，并测试"><a href="#㈣-删除密码文件，并测试" class="headerlink" title="㈣ 删除密码文件，并测试"></a>㈣ 删除密码文件，并测试</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -f /mysql_3306/mysql.pass# mysql -uroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基本SQL语句（下）</title>
      <link href="/2023/12/23/mysql-ji-ben-sql-yu-ju-xia/"/>
      <url>/2023/12/23/mysql-ji-ben-sql-yu-ju-xia/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL基本SQL语句（下）"><a href="#MySQL基本SQL语句（下）" class="headerlink" title="MySQL基本SQL语句（下）"></a>MySQL基本SQL语句（下）</h1><h1 id="一、扩展常见的数据类型"><a href="#一、扩展常见的数据类型" class="headerlink" title="一、扩展常见的数据类型"></a>一、扩展常见的数据类型</h1><h2 id="1、回顾数据表的创建语法"><a href="#1、回顾数据表的创建语法" class="headerlink" title="1、回顾数据表的创建语法"></a>1、回顾数据表的创建语法</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create table 数据表名称(字段名称1 字段类型 字段约束,字段名称2 字段类型 字段约束,...primary key(主键字段 =&gt; 不能为空、必须唯一)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>经验之谈：一般情况下，我们在设计数据表时，必须拥有一个id主键字段，非空、自动编号、主键约束。</p></blockquote><p>在创建数据表时，必须明确指定字段的名称以及字段的类型，那到底MySQL中的SQL语句支持哪些字段类型呢？</p><p>答：参考下图</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826094830721.png" alt="image-20200826094830721"></p><h2 id="2、数值类型"><a href="#2、数值类型" class="headerlink" title="2、数值类型"></a>2、数值类型</h2><h3 id="☆-整数类型（整数、精准）"><a href="#☆-整数类型（整数、精准）" class="headerlink" title="☆ 整数类型（整数、精准）"></a>☆ 整数类型（整数、精准）</h3><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826095603519.png" alt="image-20200826095603519"></p><p>应用场景：人的年龄、考试成绩等等相关的信息都可以使用整数类型进行存储，那整数类型有这么多形式，我应该选择哪一个呢？</p><p>答：整数类型的选择主要取决于数值的范围。</p><blockquote><p>比如存储中国人的人口信息，可以用INT类型也可以用BIGINT类型，但是在数据库设计原则中，不是越大越好，而是正好满足条件即可。</p></blockquote><p>案例：设计一个数据表如tb_student学生表（id、username、age、mobile）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use 数据库名称;mysql&gt; create table tb_student(id mediumint unsigned not null auto_increment,username varchar(20),age tinyint unsigned,mobile char(11),primary key(id)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-小数类型（浮点类型、定点类型）"><a href="#☆-小数类型（浮点类型、定点类型）" class="headerlink" title="☆ 小数类型（浮点类型、定点类型）"></a>☆ 小数类型（浮点类型、定点类型）</h3><h4 id="①-浮点类型（近似值）"><a href="#①-浮点类型（近似值）" class="headerlink" title="① 浮点类型（近似值）"></a>① 浮点类型（近似值）</h4><ul><li>FLOAT和DOUBLE</li></ul><p><code>FLOAT</code>和<code>DOUBLE</code>类型代表近似数字数据值。MySQL对于单精度值使用四个字节，对于双精度值使用八个字节。 <code>FLOAT</code>单精度浮点数精确到约7位小数，<code>DOUBLE</code>双精度浮点数精确到大约15位小数 。<code>FLOAT</code><strong>类型会随着数值的增大精度会减小。</strong></p><p>举例说明</p><p>FLOAT(M,D)，其中，M表示存储的有效位数，D代表小数点后面的位数；即整数位数+小数部分不能超过M值。<br>colum1 FLOAT(7,4)<br>上面例子中，如果你插入为999.00009到cloum1列，那么mysql在存储时会四舍五入变为999.0001插入。</p><blockquote><p>DOUBLE(7,4) ：DOUBLE类型的使用与FLOAT类型完全一致，唯一的区别就是占用字节不同且浮点数的精度有所不同。</p></blockquote><h4 id="②-定点类型（精确值）"><a href="#②-定点类型（精确值）" class="headerlink" title="② 定点类型（精确值）"></a>② 定点类型（精确值）</h4><ul><li>DECIMAL和NUMERIC</li></ul><p><code>DECIMAL</code>和<code>NUMERIC</code>&nbsp;类型的存储==精确的数值数据==。使用这些类型时，重要的是要保留==精确的精度==，例如使用<strong>货币数据</strong>。在MySQL中, <code>NUMERIC</code>被作为<code>DECIMAL</code>来应用，所以下面的举例<code>DECIMAL</code>同样适用于&nbsp;<code>NUMERIC</code> 。</p><ul><li>举例说明</li></ul><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">salary DECIMAL(5,2)在上面的例子中，薪水字段的类型为decimal，表示精确的数字。其中，5代表精度，2代表刻度。精度表示数值存储的有效位数，刻度表示小数点后面可存储的位数。DECIMAL(5,2)能够存储五位数和两位小数的任何值，因此可以存储在salary 列中的值的范围-999.99是 999.99特殊注意：DECIMAL(M)和DECIMAL(M,0)是相等的，存储长度取决于M的值，默认情况下M值为10.刻度为0表示没有小数。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：定义一个职员表tb_staff，定义字段（id、username、salary、addtime）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_staff(id smallint unsigned not null auto_increment,username varchar(20),salary decimal(11,2),addtime date,primary key(id)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、字符串类型"><a href="#3、字符串类型" class="headerlink" title="3、字符串类型"></a>3、字符串类型</h2><h3 id="☆-CHAR类型"><a href="#☆-CHAR类型" class="headerlink" title="☆ CHAR类型"></a>☆ CHAR类型</h3><p>CHAR类型的字符串为<strong>定长</strong>.长度范围是0到255之间的任何值.占用定长的存储空间,不足的部分用==空格==填充；读取时删掉后面的空格。</p><p>password char(32)</p><p>mobile char(11)</p><ul><li><strong>存储空间</strong></li></ul><p>CHAR(==M==)<strong>类型的存储空间和字符集有关系</strong>，一个中文在utf8字符集中占用3个bytes、gbk占用2个bytes、数字和字符统一用一个字符表示。</p><ul><li><strong>存储机制</strong></li></ul><p>在不够M长度时，MySQL在存储数据时，需要填充特殊的空格.</p><ul><li><strong>举例说明</strong></li></ul><p><code>字段名称 CHAR(M),M表示字符数</code></p><p>应用场景：加密后的密码 =&gt; char(32)，手机号码mobile(11)，身份证号码等等</p><p>案例：创建一个tb_admin数据表，定义字段（id、username、password）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_admin(id tinyint unsigned not null auto_increment,username varchar(10),password char(32),primary key(id)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-VARCHAR类型"><a href="#☆-VARCHAR类型" class="headerlink" title="☆ VARCHAR类型"></a>☆ VARCHAR类型</h3><p>VARCHAR是==变长存储==,仅使用必要的存储空间.</p><p>name varchar(10)</p><ul><li><strong>存储空间</strong></li></ul><p>VARCHAR(M)类型的存储空间和字符集有关系，一个中文在utf8字符集中占用3个bytes、gbk统一占用2个bytes、数字和字符一个字符表示。</p><ul><li><strong>存储机制</strong></li></ul><p>VARCHAR(M)字段存储实际是从<strong>第二个字节开始存储</strong>,然后用1到2个字节表示实际长度,剩下的才是可以存储数据的范围,因此最大可用存储范围是65535-3=65532字节;</p><p>第一个字节标识是否为空.（长度小于255字节,使用一个字节来表示长度;大于255字节使用两个字节来表示长度)。</p><p>应用场景：主要适合存储长度不固定的字符串信息，如用户名称、产品标题、新闻标题、新闻描述（不超过255个字符）</p><p>案例：创建一个tb_news数据表，定义字段（id、title、description、addtime）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_news(id int not null auto_increment,title varchar(80),description varchar(255),addtime date,primary key(id)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-TEXT类型"><a href="#☆-TEXT类型" class="headerlink" title="☆ TEXT类型"></a>☆ TEXT类型</h3><p>TEXT代表文本类型的数据，当我们使用VARCHAR类型存储数据时（早期最大只能存储255个字符，MySQL5版本中，其gbk可以存储3万多个字符，utf8格式可以存储2万多个字符），如超过了VARCHAR的最大存储范围，则可以考虑使用TEXT文本类型。</p><blockquote><p>经验之谈：255个字符以内（包括），定长就使用CHAR类型，变长就使用VARCHAR类型，如果超过255个字符，则使用TEXT文本类型。</p></blockquote><p>应用场景：文本内容、产品的详细介绍等等</p><p>案例：创建一个tb_goods产品表，定义字段（id、name、price、content）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_goods(  id int not null auto_increment,  name varchar(80),  price decimal(11,2),  content text,  primary key(id)) engine=innodb default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-其他类型"><a href="#☆-其他类型" class="headerlink" title="☆ 其他类型"></a>☆ 其他类型</h3><p>BLOB：保存二进制的大型数据（字节串），没有字符集，eg：图片、音频视频等。</p><blockquote><p>实际运维工作中，很少将文件直接保存在数据库端，一般文件的存储都是基于路径进行操作的。</p></blockquote><p>ENUM枚举类型：多选一，从给定的多个选项中选择一个，如gender  enum(‘男’,’女’,’保密’)</p><p>SET集合类型：多选多，从给定的多个选项中选个多个，如hobby set(‘吃饭’,’睡觉’,’打豆豆’)</p><h2 id="4、日期时间类型"><a href="#4、日期时间类型" class="headerlink" title="4、日期时间类型"></a>4、日期时间类型</h2><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826114942732.png" alt="image-20200826114942732"></p><blockquote><p>经验之谈：时间类型的选择比较简单，主要看你需要的时间格式，是年月日、小时分钟秒等等。</p></blockquote><p>###㈠ DATE类型（年-月-日）</p><p>The&nbsp;<code>DATE</code>&nbsp;type is used for values with a date part but no time part. MySQL retrieves and displays&nbsp;<code>DATE</code>&nbsp;values in<code>'YYYY-MM-DD'</code>&nbsp;format. The supported range is&nbsp;<code>'1000-01-01'</code>&nbsp;to&nbsp;<code>'9999-12-31'</code>. </p><p>###㈡ DATETIME(年月日小时分钟秒)</p><p>The&nbsp;<code>DATETIME</code>&nbsp;type is used for values that contain both date and time parts. MySQL retrieves and displays<code>DATETIME</code>&nbsp;values in&nbsp;<code>'YYYY-MM-DD HH:MM:SS'</code>&nbsp;format. The supported range is&nbsp;<code>'1000-01-01 00:00:00'</code>&nbsp;to&nbsp;<code>'9999-12-31 23:59:59'</code>. </p><blockquote><p>DATETIME范围相对于TIMESTAMP范围更广，<code>'1000-01-01 00:00:00'</code> to <code>'9999-12-31 23:59:59'</code></p></blockquote><p>###㈢ TIMESTAMP(年月日小时分钟秒)</p><p>The&nbsp;<code>TIMESTAMP</code>&nbsp;data type is used for values that contain both date and time parts.&nbsp;<code>TIMESTAMP</code>&nbsp;has a range of&nbsp;<code>'1970-01-01 00:00:01'</code>&nbsp;UTC to&nbsp;<code>'2038-01-19 03:14:07'</code>&nbsp;UTC. </p><blockquote><p>TIMESTAMP选项如果不插入时间，则MySQL会自动调用系统时间写入数据</p></blockquote><p><strong>注意：</strong></p><p>Invalid&nbsp;<code>DATE</code>,&nbsp;<code>DATETIME</code>, or&nbsp;<code>TIMESTAMP</code>&nbsp;values are converted to the&nbsp;“zero”&nbsp;value of the appropriate type (<code>'0000-00-00'</code>&nbsp;or&nbsp;<code>'0000-00-00 00:00:00'</code>). </p><p>无效的日期，日期时间等会被替换成‘0000-00-00’或‘0000-00-00 00:00:00’</p><p>###㈣ TIME（小时:分钟:秒）</p><p>MySQL retrieves and displays&nbsp;<code>TIME</code>&nbsp;values in&nbsp;<code>'HH:MM:SS'</code>&nbsp;format (or&nbsp;<code>'HHH:MM:SS'</code>&nbsp;format for large hours values).<code>TIME</code>&nbsp;values may range from&nbsp;<code>'-838:59:59'</code>&nbsp;to&nbsp;<code>'838:59:59'</code>. </p><p><strong>说明：</strong>小时部分可以是这么大，因为可以使用TIME类型不仅代表一个时间(必须小于24小时),而且可以表示运行时间或两个事件之间的时间间隔(可能大于24小时,甚至负数)。 </p><p><strong>==注意：==</strong></p><p>TIME这一列如果存储缩写，需要注意mysql的解释方式。<strong>无效的时间值会被转换成’00:00:00’</strong>&nbsp;。</p><p><code>'11:12'</code>&nbsp;means&nbsp;<code>'11:12:00'</code>, not&nbsp;<code>'00:11:12'</code>. </p><p><code>'12'</code>&nbsp;and&nbsp;<code>12</code>&nbsp;are interpreted as&nbsp;<code>'00:00:12'</code>. </p><p>###㈤ YEAR</p><p><code>YEAR(4)</code>&nbsp;and&nbsp;<code>YEAR(2)</code>&nbsp;differ in display format, but have the same range of values. </p><p>For 4-digit format, MySQL displays&nbsp;<code>YEAR</code>&nbsp;values in&nbsp;<code>YYYY</code>&nbsp;format, with a range of&nbsp;<code>1901</code>&nbsp;to&nbsp;<code>2155</code>, or&nbsp;<code>0000</code>. </p><p>For 2-digit format, MySQL displays only the last two (least significant) digits; for example,&nbsp;<code>70</code>&nbsp;(1970 or 2070) or&nbsp;<code>69</code>&nbsp;(2069). </p><p><strong>无效的值将会被转换成’0000’.</strong></p><p>案例：编写tb_article文章表，定义字段（id、title、description、addtime）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_article1(id int not null auto_increment,title varchar(80),description varchar(255),addtime datetime,primary key(id)) engine=innodb default charset=utf8;mysql&gt; create table tb_article2(id int not null auto_increment,title varchar(80),description varchar(255),addtime timestamp,primary key(id)) engine=innodb default charset=utf8;mysql&gt; insert into tb_article1 values (null,'mysql从入门到放弃','mysql很好很强大...',null);mysql&gt; insert into tb_article1 values (null,'mysql从入门到放弃','mysql很好很强大...',null);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、SQL查询语句（重点）"><a href="#二、SQL查询语句（重点）" class="headerlink" title="二、SQL查询语句（重点）"></a>二、SQL查询语句（重点）</h1><h2 id="1、回顾SQL查询语句"><a href="#1、回顾SQL查询语句" class="headerlink" title="1、回顾SQL查询语句"></a>1、回顾SQL查询语句</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select */字段列表 from 数据表名称 where 查询条件;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、SQL查询五子句"><a href="#2、SQL查询五子句" class="headerlink" title="2、SQL查询五子句"></a>2、SQL查询五子句</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select */字段列表 from 数据表名称 where 子句 group by 子句 having 子句 order by 子句 limit 子句;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>① where子句</p><p>② group by子句</p><p>③ having子句</p><p>④ order by子句</p><p>⑤ limit子句</p><blockquote><p>特别注意：五子句的顺序是固定的，不能颠倒。</p></blockquote><h2 id="3、WHERE子句"><a href="#3、WHERE子句" class="headerlink" title="3、WHERE子句"></a>3、WHERE子句</h2><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>%</td><td>匹配0个或任意多个字符</td></tr><tr><td>_(下划线)</td><td>匹配单个字符</td></tr><tr><td>like</td><td>模糊匹配</td></tr><tr><td>=</td><td>等于,精确匹配</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>!=和&lt;&gt;</td><td>不等于</td></tr><tr><td>! 和 not</td><td>逻辑非</td></tr><tr><td>|| 和 or</td><td>逻辑或</td></tr><tr><td>&amp;&amp; 和 and</td><td>逻辑与</td></tr><tr><td>between…and….</td><td>两者之间</td></tr><tr><td>in (….)</td><td>在…</td></tr><tr><td>not in (….)</td><td>不在</td></tr></tbody></table><p>案例：like模糊查询语句，查询姓”关”的同学信息（name字段对应值应该以”关”开头）</p><p>准备测试数据</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; use db_itheima;mysql&gt; create table tb_student(id mediumint not null auto_increment,name varchar(20),age tinyint unsigned default 0,gender enum('男','女'),address varchar(255),primary key(id)) engine=innodb default charset=utf8;插入测试数据mysql&gt; insert into tb_student values (null,'刘备',33,'男','湖北省武汉市');mysql&gt; insert into tb_student values (null,'貂蝉',18,'女','湖南省长沙市');mysql&gt; insert into tb_student values (null,'关羽',32,'男','湖北省荆州市');mysql&gt; insert into tb_student values (null,'大乔',20,'女','河南省漯河市');mysql&gt; insert into tb_student values (null,'赵云',25,'男','河北省石家庄市');mysql&gt; insert into tb_student values (null,'小乔',18,'女','湖北省荆州市');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用like模糊查询，获取姓”关”的同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where name like '关%';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>like模糊查询，有点类似于管道命令的中的数据检索。有两个关键字：%百分号与_下划线，%百分号代表任意个任意字符，_下划线代表任意的某个字符（只能匹配1个）</p></blockquote><p>案例：like模糊查询语句，查询名字中带”蝉”字的同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where name like '%蝉%';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：like模糊查询语句，查询云字结尾且名字为两个字的同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where name like '_云';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取学生表中，id编号为3的同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where id=3;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取年龄大于25周岁的同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where age&gt;25;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取学生表中，性别不为男的同学信息（获取女同学的信息）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where gender&lt;&gt;'男';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取班级中年龄大于30岁的男同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where age&gt;30 &amp;&amp; gender='男';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取id值为1、3、5的同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where id=1 or id=3 or id=5;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取年龄在18周岁~25周岁之间的同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where age&gt;=18 and age&lt;=25;或mysql&gt; select * from tb_student where age between 18 and 25;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：获取id值为2、4、6的同学信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student where id in (2,4,6);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、DISTINCT数据去重"><a href="#4、DISTINCT数据去重" class="headerlink" title="4、DISTINCT数据去重"></a>4、DISTINCT数据去重</h2><p>案例：获取tb_student学生表学员年龄的分布情况。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select distinct age from tb_student;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、GROUP-BY子句-重点和难点"><a href="#5、GROUP-BY子句-重点和难点" class="headerlink" title="5、GROUP BY子句(重点和难点)"></a>5、GROUP BY子句(重点和难点)</h2><p>group by子句的作用：对数据进行分组操作，为什么要进行分组呢？分组的目标就是进行分组统计。</p><blockquote><p>日常生活中的分组太多了，如按男女进行分组，按成绩进行分组，按院校、系部分组，按部门进行分组。</p></blockquote><p>根据给定==数据列==的查询结果进行分组统计，最终得到一个==分组汇总表==</p><p>注：一般情况下group by需与==统计函数==一起使用才有意义</p><h3 id="☆-统计函数"><a href="#☆-统计函数" class="headerlink" title="☆ 统计函数"></a>☆ 统计函数</h3><table><thead><tr><th>常见统计函数</th><th>说明</th></tr></thead><tbody><tr><td>max</td><td>求最大值</td></tr><tr><td>min</td><td>求最小值</td></tr><tr><td>sum</td><td>求和</td></tr><tr><td>avg</td><td>求平均值</td></tr><tr><td>count</td><td>求总行数</td></tr></tbody></table><p>案例：求tb_student表中一共有多少个记录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select count(*) from tb_student;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：求年龄的最大值与最小值</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select max(age) from tb_student;与mysql&gt; select min(age) from tb_student;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：针对id字段求和</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select sum(id) from tb_student;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：求学员表中年龄的平均值</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select avg(age) from tb_student;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-GROUP-BY分组"><a href="#☆-GROUP-BY分组" class="headerlink" title="☆ GROUP BY分组"></a>☆ GROUP BY分组</h3><p>案例：求tb_student表中，男同学的总数量与女同学的总数量</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select gender,count(*) from tb_student group by gender;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在MySQL5.7以后版本中，分组字段必须出现在select后面的查询字段中</p></blockquote><p>案例：求tb_student表中，男同学年龄的最大值与女同学年龄的最大值</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select gender,max(age) from tb_student group by gender;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-GROUP-BY分组原理"><a href="#☆-GROUP-BY分组原理" class="headerlink" title="☆ GROUP BY分组原理"></a>☆ GROUP BY分组原理</h3><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826161519999.png" alt="image-20200826161519999"></p><blockquote><p>记住：以后只要涉及到求每个学科、每个部分、每个年级、每个系部薪资最高、成绩最好、薪资的平均值等等，就是基于GROUP BY + 统计函数。</p></blockquote><h2 id="6、HAVING子句"><a href="#6、HAVING子句" class="headerlink" title="6、HAVING子句"></a>6、HAVING子句</h2><ul><li><p>having与where类似，根据条件对==数据==进行过滤筛选</p></li><li><p>where==针对表中的列==发挥作用，查询数据</p></li><li><p>having==针对查询结果集==发挥作用，筛选数据</p></li></ul><p>案例：having在做简单查询时可以替代where子句</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student having age&gt;20;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：按学科进行分组，求每个学科拥有多少人</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create table tb_student(id mediumint not null auto_increment,name varchar(20),age tinyint unsigned default 0,gender enum('男','女'),subject enum('ui','java','yunwei','python'),primary key(id)) engine=innodb default charset=utf8;mysql&gt; insert into tb_student values (null,'悟空',255,'男','ui');mysql&gt; insert into tb_student values (null,'八戒',250,'男','python');mysql&gt; insert into tb_student values (null,'唐僧',30,'男','yunwei');mysql&gt; insert into tb_student values (null,'沙僧',150,'男','java');mysql&gt; insert into tb_student values (null,'小白龙',100,'男','yunwei');mysql&gt; insert into tb_student values (null,'白骨精',28,'女','ui');mysql&gt; insert into tb_student values (null,'兔子精',22,'女','yunwei');mysql&gt; insert into tb_student values (null,'狮子精',33,'男','yunwei');或mysql&gt; insert into tb_student values (null,'悟空',255,'男','ui'),(null,'八戒',250,'男','python'),(null,'唐僧',30,'男','yunwei'),(null,'沙僧',150,'男','java'),(null,'小白龙',100,'男','yunwei'),(null,'白骨精',28,'女','ui'),(null,'兔子精',22,'女','yunwei'),(null,'狮子精',33,'男','yunwei');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select subject,count(*) from tb_student group by subject;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：求每个学科中，学科人数大于3人的学科信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select subject,count(*) from tb_student group by subject having count(*)&gt;3;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7、ORDER-BY子句"><a href="#7、ORDER-BY子句" class="headerlink" title="7、ORDER BY子句"></a>7、ORDER BY子句</h2><p>主要作用的就是对数据进行排序（升序、降序）</p><p>升序：从小到大，1,2,3,4,5</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from 数据表名称 ... order by 字段名称 asc;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>降序：从大到小，5,4,3,2,1</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from 数据表名称 ... order by 字段名称 desc;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：按年龄进行排序（由大到小）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student order by age desc;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8、LIMIT子句"><a href="#8、LIMIT子句" class="headerlink" title="8、LIMIT子句"></a>8、LIMIT子句</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from 数据表名称 ... limit number; 查询满足条件的number条数据或mysql&gt; select * from 数据表名称 ... limit offset,number; 从偏移量为offset开始查询，查询number条记录offset的值从0开始<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>offset偏移量：</p><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826170515365.png" alt="image-20200826170515365"></p><p>案例：获取学生表中，年龄最大的学员信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student order by age desc limit 1;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：从偏移量为1的元素开始查询，查询2条记录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student limit 1,2;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>LIMIT子句在开发项目中，主要应用于数据分页。</p></blockquote><p>案例：实现数据分页（参考上图）</p><p>第一页：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student limit 0,2;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二页：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student limit 2,2;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三、SQL多表查询（了解）"><a href="#三、SQL多表查询（了解）" class="headerlink" title="三、SQL多表查询（了解）"></a>三、SQL多表查询（了解）</h1><h2 id="1、什么是多表查询"><a href="#1、什么是多表查询" class="headerlink" title="1、什么是多表查询"></a>1、什么是多表查询</h2><p>我们刚才学习的SQL五子句都主要是针对单表情况，我们在实际工作中，也可能会接触到一些复杂的多表查询。</p><h2 id="2、UNION联合查询"><a href="#2、UNION联合查询" class="headerlink" title="2、UNION联合查询"></a>2、UNION联合查询</h2><p>UNION联合查询的作用：把多个表中的数据联合在一起进行显示。应用场景：分库分表</p><p>第一步：创建两个结构相同的学生表tb_student1与tb_student2</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create table tb_student1(id mediumint not null auto_increment,name varchar(20),age tinyint unsigned default 0,gender enum('男','女'),subject enum('ui','java','yunwei','python'),primary key(id)) engine=innodb default charset=utf8;mysql&gt; insert into tb_student1 values (1,'悟空',255,'男','ui');mysql&gt; create table tb_student2(id mediumint not null auto_increment,name varchar(20),age tinyint unsigned default 0,gender enum('男','女'),subject enum('ui','java','yunwei','python'),primary key(id)) engine=innodb default charset=utf8;mysql&gt; insert into tb_student2 values (2,'唐僧',30,'男','yunwei');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：使用UNION进行联合查询</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_student1 union select * from tb_student2;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、交叉查询（了解）"><a href="#3、交叉查询（了解）" class="headerlink" title="3、交叉查询（了解）"></a>3、交叉查询（了解）</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select */字段列表 from 数据表1,数据表2;或mysql&gt; select */字段列表 from 数据表1 cross join 数据表2;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>运行结果：</p><p>字段总数 = 数据表1的字段 + 数据表2的字段</p><p>总记录数 = 数据表1的记录数 * 数据表2的记录数 =&gt; (笛卡尔积)</p><p>准备两张数据表：产品分类表 与 产品的信息表</p><p>tb_category</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create table tb_category(id smallint not null auto_increment,name varchar(20),pid smallint default 0,primary key(id)) engine=innodb default charset=utf8;insert into tb_category values (null,'手机',0);=&gt;  id=1insert into tb_cateogry values (null,'电脑',0);=&gt;  id=2insert into tb_category values (null,'游戏手机',1);   =&gt;  游戏手机属于手机分类<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>pid代表所属的父级类别，如果自己就是顶级分类，则为0</p></blockquote><p>tb_goods</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; create table tb_goods(id int not null auto_increment,title varchar(80),price decimal(11,2),cid smallint default 0,primary key(id)) engine=innodb default charset=utf8;insert into tb_goods values (null,'IPhone 11',5699.00,1);insert into tb_goods values (null,'MI 10',4699.00,1);insert into tb_goods values (null,'ThinkPad X1',9999.00,2);insert into tb_goods values (null,'Nike air',999.00,10);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>cid代表产品的所属分类编号，与tb_category表要一一对应</p></blockquote><p>案例：把分类表与产品表进行交叉，求结果</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select * from tb_category cross join tb_goods;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/MySQL%E5%9F%BA%E6%9C%ACSQL%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%B8%8B%EF%BC%89.assets/image-20200826174322790.png" alt="image-20200826174322790"></p><blockquote><p>交叉连接本身是没有意义的，其只是强制把两个表甚至多个表进行连接在一起。但是交叉查询中也有正确的结果，所以我们所谓的多表连接只需要在交叉连接的基础上增加一个连接条件，则就是我们想要的结果了。所以交叉查询是多表查询的基础。</p></blockquote><h2 id="4、内连接查询（重点）"><a href="#4、内连接查询（重点）" class="headerlink" title="4、内连接查询（重点）"></a>4、内连接查询（重点）</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select 数据表1.字段列表,数据表2.字段列表 from 数据表1 inner join 数据表2 on 连接条件;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取产品表中每个产品的分类信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select tb_goods.*,tb_category.name from tb_goods inner join tb_category on tb_goods.cid=tb_category.id;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>内连接查询：把两个表甚至多个表进行连接，然后拿表1中的每一条记录与表2中的每一条记录进行匹配，如果有与之对应的结果，则显示。反之，则忽略这条记录。</p></blockquote><h2 id="5、外连接查询（重点）"><a href="#5、外连接查询（重点）" class="headerlink" title="5、外连接查询（重点）"></a>5、外连接查询（重点）</h2><p>内连接查询要求：表1和表2中的每一条记录必须要一一对应，如果无法匹配，则这条记录会被自动被忽略掉，那如果我需要保留表1中的所有记录或表2中的所有记录怎么办呢？</p><p>答：使用外连接查询</p><p>基本语法：</p><p>左外连接查询：把左表中的每一条数据都保留，右表匹配到结果就显示，匹配不到就NULL</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">select 数据表1.字段列表,数据表2.字段列表 from 数据表1 left join 数据表2 on 连接条件;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>右外连接查询：把右表中的每一条数据都保留，左表匹配到结果就显示，匹配不到就NULL</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">select 数据表1.字段列表,数据表2.字段列表 from 数据表1 right join 数据表2 on 连接条件;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取产品表中每个产品的分类信息（无论匹配到与否）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select tb_goods.*,tb_category.name from tb_goods left join tb_category on tb_goods.cid=tb_category.id;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、别名机制：简化内外连接"><a href="#6、别名机制：简化内外连接" class="headerlink" title="6、别名机制：简化内外连接"></a>6、别名机制：简化内外连接</h2><p>案例：获取产品表中每个产品的分类信息（无论匹配到与否）</p><p>原始语句：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">mysql&gt; select tb_goods.*,tb_category.name from tb_goods left join tb_category on tb_goods.cid=tb_category.id;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>给数据表起个简单的名字，如tb_category叫c，tb_goods叫g</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">① mysql&gt; select * from tb_goods left join tb_category;起别名② mysql&gt; select * from tb_goods g left join tb_category c;写on条件③ mysql&gt; select * from tb_goods g left join tb_category c on g.cid=c.id;筛选字段④ mysql&gt; select g.*,c.name from tb_goods g left join tb_category c on g.cid=c.id;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAMP项目部署实战</title>
      <link href="/2023/12/23/lamp-xiang-mu-bu-shu-shi-zhan/"/>
      <url>/2023/12/23/lamp-xiang-mu-bu-shu-shi-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="LAMP项目部署实战"><a href="#LAMP项目部署实战" class="headerlink" title="LAMP项目部署实战"></a>LAMP项目部署实战</h1><h1 id="一、LAMP环境部署"><a href="#一、LAMP环境部署" class="headerlink" title="一、LAMP环境部署"></a>一、LAMP环境部署</h1><h2 id="1、回顾LAMP"><a href="#1、回顾LAMP" class="headerlink" title="1、回顾LAMP"></a>1、回顾LAMP</h2><p>LAMP = Linux + Apache + MySQL + PHP</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327093726255.png" alt="image-20200327093726255"></p><p>Apache：主要用于接收用户的请求，处理业务逻辑，返回结果给客户端（浏览器）</p><p>PHP：编程语言的一种，主要应用于Web开发。主要实现注册、登录、加入购物车、下单、支付等功能</p><p>MySQL：数据库，删库到跑路，这里的”库”就是指数据库。永久保存数据</p><h2 id="2、LAMP部署前期准备"><a href="#2、LAMP部署前期准备" class="headerlink" title="2、LAMP部署前期准备"></a>2、LAMP部署前期准备</h2><h3 id="☆-关闭防火墙"><a href="#☆-关闭防火墙" class="headerlink" title="☆ 关闭防火墙"></a>☆ 关闭防火墙</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld# systemctl disable firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-关闭SELinux"><a href="#☆-关闭SELinux" class="headerlink" title="☆ 关闭SELinux"></a>☆ 关闭SELinux</h3><p><em>SELinux</em>(Security-Enhanced Linux) 是美国国家安全局（NSA）对于强制访问控制的实现，是 Linux历史上最杰出的新安全子系统。</p><p>获取SELinux的状态：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># getenforce<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>临时关闭SElinux：重启后SELinux还会自动启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setenforce 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>永久关闭SELinux：编辑SELinux的配置文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/selinux/configSELINUX=disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-检查系统中是否已安装Apache"><a href="#☆-检查系统中是否已安装Apache" class="headerlink" title="☆ 检查系统中是否已安装Apache"></a>☆ 检查系统中是否已安装Apache</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa |grep httpd# rpm -e httpd-2.4.6-90.el7.centos.x86_64# rpm -e httpd-tools-2.4.6-90.el7.centos.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-检查系统中是否已安装MySQL"><a href="#☆-检查系统中是否已安装MySQL" class="headerlink" title="☆ 检查系统中是否已安装MySQL"></a>☆ 检查系统中是否已安装MySQL</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa |grep mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-检查系统中是否已安装PHP"><a href="#☆-检查系统中是否已安装PHP" class="headerlink" title="☆ 检查系统中是否已安装PHP"></a>☆ 检查系统中是否已安装PHP</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa |grep php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>AMP安装指南：在Linux中安装AMP必须先安装Apache，在安装MySQL，最后安装PHP</p></blockquote><h2 id="3、LAMP环境之Apache安装"><a href="#3、LAMP环境之Apache安装" class="headerlink" title="3、LAMP环境之Apache安装"></a>3、LAMP环境之Apache安装</h2><p>Apache：阿帕奇，Apache基金会</p><p>httpd软件 =&gt; 前身apache，随着时间的推移以及互联网行业的发展，越来越多的软件加入到了Apache的基金会。</p><p>第一步：安装httpd软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install httpd -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：配置/etc/httpd/conf/httpd.conf文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/httpd/conf/httpd.conf/ServerName =&gt; 搜索96 ServerName localhost:80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>localhost ： 代表本机，对应的IP地址可以使127.0.0.1或本机的公网IP</p></blockquote><p>第三步：启动httpd服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start httpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：把httpd服务添加到开机启动项中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl enable httpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第五步：使用ss或netstat命令查询httpd占用的端口</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># netstat -tnlp |grep httpd或# ss -naltp |grep httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第六步：在浏览器中，使用公网IP访问阿里云服务器</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327104156113.png" alt="image-20200327104156113"></p><h2 id="4、LAMP环境之MySQL安装"><a href="#4、LAMP环境之MySQL安装" class="headerlink" title="4、LAMP环境之MySQL安装"></a>4、LAMP环境之MySQL安装</h2><h3 id="☆-下载MySQL的官网yum源"><a href="#☆-下载MySQL的官网yum源" class="headerlink" title="☆ 下载MySQL的官网yum源"></a>☆ 下载MySQL的官网yum源</h3><p>由于yum源上默认没有mysql-server。所以必须去官网下载后在安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-安装MySQL的官网镜像源"><a href="#☆-安装MySQL的官网镜像源" class="headerlink" title="☆ 安装MySQL的官网镜像源"></a>☆ 安装MySQL的官网镜像源</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ivh mysql-community-release-el7-5.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-使用yum安装mysql最新版软件"><a href="#☆-使用yum安装mysql最新版软件" class="headerlink" title="☆ 使用yum安装mysql最新版软件"></a>☆ 使用yum安装mysql最新版软件</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install mysql-community-server -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>MySQL软件是一个C/S架构的软件，拥有客户端与服务器端。mysql-server服务器端（内部也包含了客户端），community代表社区版（免费开源）</p></blockquote><h3 id="☆-启动mysql，查看端口占用情况"><a href="#☆-启动mysql，查看端口占用情况" class="headerlink" title="☆ 启动mysql，查看端口占用情况"></a>☆ 启动mysql，查看端口占用情况</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start mysqld# netstat -tnlp |grep mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-MySQL数据库初始化（重要）"><a href="#☆-MySQL数据库初始化（重要）" class="headerlink" title="☆ MySQL数据库初始化（重要）"></a>☆ MySQL数据库初始化（重要）</h3><p>默认情况下，数据库没有密码，也没有任何数据，必须要初始化</p><h4 id="①-初始化数据，设置root密码（MySQL管理员）"><a href="#①-初始化数据，设置root密码（MySQL管理员）" class="headerlink" title="① 初始化数据，设置root密码（MySQL管理员）"></a>① 初始化数据，设置root密码（MySQL管理员）</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114309107.png" alt="image-20200327114309107"></p><blockquote><p>扩展：以上说的root和Linux中的root不是同一个用户，这个root代表MySQL数据库的管理员，只不过这个管理员也叫root。</p></blockquote><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114444955.png" alt="image-20200327114444955"></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114530976.png" alt="image-20200327114530976"></p><blockquote><p>学习环境下，密码越简单越好。生产环境下越复杂越好。</p></blockquote><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114717525.png" alt="image-20200327114717525"></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114820459.png" alt="image-20200327114820459"></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114907975.png" alt="image-20200327114907975"></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327114951007.png" alt="image-20200327114951007"></p><h4 id="②-把mysqld服务添加到开机启动项"><a href="#②-把mysqld服务添加到开机启动项" class="headerlink" title="② 把mysqld服务添加到开机启动项"></a>② 把mysqld服务添加到开机启动项</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl enable mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>默认已经开机启动，这里可以跳过</p><h4 id="③-连接MySQL数据库，测试"><a href="#③-连接MySQL数据库，测试" class="headerlink" title="③ 连接MySQL数据库，测试"></a>③ 连接MySQL数据库，测试</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mysql -u root -p 回车Enter password:输入刚才设置的密码，如123，回车mysql&gt; show databases;    =&gt;   代表显示所有数据库mysql&gt; exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、LAMP环境之PHP安装"><a href="#5、LAMP环境之PHP安装" class="headerlink" title="5、LAMP环境之PHP安装"></a>5、LAMP环境之PHP安装</h2><h3 id="☆-使用yum命令安装php软件"><a href="#☆-使用yum命令安装php软件" class="headerlink" title="☆ 使用yum命令安装php软件"></a>☆ 使用yum命令安装php软件</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install php -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-使用systemctl启动php软件（重启Apache）"><a href="#☆-使用systemctl启动php软件（重启Apache）" class="headerlink" title="☆ 使用systemctl启动php软件（重启Apache）"></a>☆ 使用systemctl启动php软件（重启Apache）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>为什么启动php就是重启Apache呢？答：因为LAMP架构中，PHP是以模块的形式追加到Apache的内核中，所以启动php就相当于重置Apache软件</p></blockquote><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327142246747.png" alt="image-20200327142246747"></p><h3 id="☆-测试LAMP环境是否可以使用"><a href="#☆-测试LAMP环境是否可以使用" class="headerlink" title="☆ 测试LAMP环境是否可以使用"></a>☆ 测试LAMP环境是否可以使用</h3><p>第一步：使用cd命令进入/var/www/html目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /var/www/htmlApache的项目目录 =&gt; /var/www/html，以后程序员开发的代码都是放置于此目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第二步：使用vim命令创建demo.php文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim demo.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：编写php代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">&lt;?phpecho 'hello world';?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>编写完成后，保存退出，然后在浏览器中使用http://公网IP/demo.php</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327142839268.png" alt="image-20200327142839268"></p><h1 id="二、部署Discuz-论坛"><a href="#二、部署Discuz-论坛" class="headerlink" title="二、部署Discuz!论坛"></a>二、部署Discuz!论坛</h1><h2 id="1、Discuz-论坛概述"><a href="#1、Discuz-论坛概述" class="headerlink" title="1、Discuz!论坛概述"></a>1、Discuz!论坛概述</h2><p>Discuz！论坛是基于PHP + MySQL进行开发的一套开源的论坛系统。</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327151556113.png" alt="image-20200327151556113"></p><h2 id="2、下载源代码"><a href="#2、下载源代码" class="headerlink" title="2、下载源代码"></a>2、下载源代码</h2><p>下载地址：<a href="https://gitee.com/ComsenzDiscuz/DiscuzX">https://gitee.com/ComsenzDiscuz/DiscuzX</a>  （码云）</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327151754516.png" alt="image-20200327151754516"></p><h2 id="3、使用MX软件把Discuz源代码上传"><a href="#3、使用MX软件把Discuz源代码上传" class="headerlink" title="3、使用MX软件把Discuz源代码上传"></a>3、使用MX软件把Discuz源代码上传</h2><p>阿里云：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327152029513.png" alt="image-20200327152029513"></p><p>本地Linux类似</p><h2 id="4、安装unzip解压缩软件"><a href="#4、安装unzip解压缩软件" class="headerlink" title="4、安装unzip解压缩软件"></a>4、安装unzip解压缩软件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install unzip -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、使用unzip对discuz-zip压缩包进行解压"><a href="#5、使用unzip对discuz-zip压缩包进行解压" class="headerlink" title="5、使用unzip对discuz.zip压缩包进行解压"></a>5、使用unzip对discuz.zip压缩包进行解压</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># unzip discuz.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、复制discuz中的文件到-var-www-html目录"><a href="#6、复制discuz中的文件到-var-www-html目录" class="headerlink" title="6、复制discuz中的文件到/var/www/html目录"></a>6、复制discuz中的文件到/var/www/html目录</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mv discuz/* /var/www/html/或# cp -vRp disczu/* /var/www/html/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="7、打开浏览器，输入公网IP地址"><a href="#7、打开浏览器，输入公网IP地址" class="headerlink" title="7、打开浏览器，输入公网IP地址"></a>7、打开浏览器，输入公网IP地址</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327153135696.png" alt="image-20200327153135696"></p><h2 id="8、单击同意许可，继续安装"><a href="#8、单击同意许可，继续安装" class="headerlink" title="8、单击同意许可，继续安装"></a>8、单击同意许可，继续安装</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327154443886.png" alt="image-20200327154443886"></p><h2 id="9、给-var-www-html目录设置可写权限"><a href="#9、给-var-www-html目录设置可写权限" class="headerlink" title="9、给/var/www/html目录设置可写权限"></a>9、给/var/www/html目录设置可写权限</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod -R a+w /var/www/html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：以上操作是给所有文件添加一个w权限，但是生产环境尽量针对指定文件添加权限。</p></blockquote><h2 id="10、解决PHP扩展问题"><a href="#10、解决PHP扩展问题" class="headerlink" title="10、解决PHP扩展问题"></a>10、解决PHP扩展问题</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327154906078.png" alt="image-20200327154906078"></p><p>以上提示代表，安装PHP时没有按照php-mysqli扩展，所以会出现以上问题。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install php-mysqli -y# systemctl restart httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="11、设置运行环境"><a href="#11、设置运行环境" class="headerlink" title="11、设置运行环境"></a>11、设置运行环境</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155142197.png" alt="image-20200327155142197"></p><h2 id="12、设置MySQL数据库的相关信息"><a href="#12、设置MySQL数据库的相关信息" class="headerlink" title="12、设置MySQL数据库的相关信息"></a>12、设置MySQL数据库的相关信息</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155441330.png" alt="image-20200327155441330"></p><h2 id="13、设置管理员账号和密码"><a href="#13、设置管理员账号和密码" class="headerlink" title="13、设置管理员账号和密码"></a>13、设置管理员账号和密码</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155536618.png" alt="image-20200327155536618"></p><h2 id="14、安装完成后，访问论坛首页"><a href="#14、安装完成后，访问论坛首页" class="headerlink" title="14、安装完成后，访问论坛首页"></a>14、安装完成后，访问论坛首页</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155648008.png" alt="image-20200327155648008"></p><p>部署后，访问论坛首页，如下图所示：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327155712092.png" alt="image-20200327155712092"></p><h1 id="三、域名与解析"><a href="#三、域名与解析" class="headerlink" title="三、域名与解析"></a>三、域名与解析</h1><h2 id="1、为什么需要域名"><a href="#1、为什么需要域名" class="headerlink" title="1、为什么需要域名"></a>1、为什么需要域名</h2><p>我们现在访问论坛是通过IP地址实现的，但是IP地址比较复杂，更重要的是不方便用户记忆。</p><p>域名 =&gt; 代替公网IP地址</p><h2 id="2、购买域名"><a href="#2、购买域名" class="headerlink" title="2、购买域名"></a>2、购买域名</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327162641419.png" alt="image-20200327162641419"></p><p>登录控制台，然后选择域名菜单：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327162742162.png" alt="image-20200327162742162"></p><p>找到域名注册菜单：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327162831242.png" alt="image-20200327162831242"></p><p>找到想要注册的域名，然后加入清单，然后进行立即结算：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327163458795.png" alt="image-20200327163458795"></p><p>购买完成后，进入域名控制台：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327163713347.png" alt="image-20200327163713347"></p><h2 id="3、把域名解析到公网IP"><a href="#3、把域名解析到公网IP" class="headerlink" title="3、把域名解析到公网IP"></a>3、把域名解析到公网IP</h2><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327163913091.png" alt="image-20200327163913091"></p><p>进入解析菜单，然后添加记录：</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327164010354.png" alt="image-20200327164010354"></p><p>① 把<a href="http://www.itcast.top解析到公网ip/">www.itcast.top解析到公网IP</a></p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327164144887.png" alt="image-20200327164144887"></p><p>② 把itcast.top解析到公网IP</p><p><img src="/../assets/blog_res/LAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200327164318781.png" alt="image-20200327164318781"></p><p>以上记录添加完成后，等待10分钟左右，即可使用域名访问论坛项目了！</p><h2 id="4、域名备案"><a href="#4、域名备案" class="headerlink" title="4、域名备案"></a>4、域名备案</h2><p>如果在国内运行项目，我们使用的域名必须要进行备案操作。</p><p>备案就是向工信部提交网站运行的相关资料，比如域名的证书、持有者的身份证号码，以及真人手持身份证照片（背景图）</p><p>由于现在监管比较严格，提交资料后，大概5-7个工作日进行审核，完全备案完成大概2周左右。</p><blockquote><p><a href="https://beian.aliyun.com/">https://beian.aliyun.com/</a></p></blockquote><p>如果不想进行域名备案，可以购买中国香港、中国台湾以及国外的服务器，可以免备案。但是其运行速度略慢一些。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程的优先级与LAMP项目部署实战</title>
      <link href="/2023/12/23/jin-cheng-de-you-xian-ji-yu-lamp-xiang-mu-bu-shu-shi-zhan/"/>
      <url>/2023/12/23/jin-cheng-de-you-xian-ji-yu-lamp-xiang-mu-bu-shu-shi-zhan/</url>
      
        <content type="html"><![CDATA[<h1 id="进程的优先级与LAMP项目部署实战"><a href="#进程的优先级与LAMP项目部署实战" class="headerlink" title="进程的优先级与LAMP项目部署实战"></a>进程的优先级与LAMP项目部署实战</h1><h1 id="一、进程的优先级（扩展）"><a href="#一、进程的优先级（扩展）" class="headerlink" title="一、进程的优先级（扩展）"></a>一、进程的优先级（扩展）</h1><h2 id="1、什么是进程的优先级"><a href="#1、什么是进程的优先级" class="headerlink" title="1、什么是进程的优先级"></a>1、什么是进程的优先级</h2><p>Linux是一个多用户、多任务的操作系统，系统中通常运行着非常多的进程。哪些进程先运行，哪些进程后运行，就由进程优先级来控制</p><p>思考：什么时候需要用到进程的优先级呢？</p><p>答：当CPU负载过高时，如CPU的使用率&gt;=90%以上。这个时候进程的优先级就会起作用。</p><h2 id="2、查看进程的优先级"><a href="#2、查看进程的优先级" class="headerlink" title="2、查看进程的优先级"></a>2、查看进程的优先级</h2><p>PR  优先级，数值越小优先级越高。<br>NI  优先级，数值越小优先级越高，可以人为更改。（NI = NICE = Nice）</p><p>讲个小故事：Nice值 = 0，Nice值越高，代表这个人越绅士（Nice值越高，优先级越低）</p><blockquote><p>NI值有一个范围 -20 ~ 19</p></blockquote><p>问题：这两个数值是在哪里看到的？</p><p>答：top命令</p><h2 id="3、调整进程的优先级"><a href="#3、调整进程的优先级" class="headerlink" title="3、调整进程的优先级"></a>3、调整进程的优先级</h2><h3 id="☆-使用top调整进程的优先级"><a href="#☆-使用top调整进程的优先级" class="headerlink" title="☆ 使用top调整进程的优先级"></a>☆ 使用top调整进程的优先级</h3><p>第一步：使用top命令获取你要调整的进程信息（PID编号）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># top -bn 1PID   COMMAND7107atd（at命令的底层服务）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：运行top命令，然后按==”r”==，输入要调整进程的PID编号</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># top按r，输入要调整进程的PID编号,按回车<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第三步：根据提示，重置NICE值</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Renice PID 7107 to value : -5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第四步：按q退出top模式，然后使用top -p PID编号，只查询某个进程的信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># top -p 7107<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-使用renice命令调整进程的优先级"><a href="#☆-使用renice命令调整进程的优先级" class="headerlink" title="☆ 使用renice命令调整进程的优先级"></a>☆ 使用renice命令调整进程的优先级</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># renice [NI优先级设置的数字] 想调整的进程ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：使用renice调整atd的优先级</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一步：通过ps或top命令获取atd的PID编号# ps -ef |grep atd7107第二步：使用renice命令调整7107的NICE值# renice -10 71077107 (process ID) old priority 0, new priority -10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：NICE值取值范围-20 ~ 19，不能使用小数</p></blockquote><h3 id="☆-使用nice命令调整进程的优先级"><a href="#☆-使用nice命令调整进程的优先级" class="headerlink" title="☆ 使用nice命令调整进程的优先级"></a>☆ 使用nice命令调整进程的优先级</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># nice [NI优先级设置的数字] 想调整的进程名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：nice命令只能调整没有运行的程序</p></blockquote><p>nice实际操作三步走：</p><p>第一步：将程序停止</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps -ef |grep crond# kill PID或# systemctl stop crond<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第二步：启动并制定优先级（使用nice）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># nice -n -10 crond<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>nice命令包含两个功能：① 启动进程 ② 调整进程的优先级</p></blockquote><p>第三步：确认优先级（查看优先级）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps -ef |grep crondPID# top -p PID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="二、YUM"><a href="#二、YUM" class="headerlink" title="二、YUM"></a>二、YUM</h1><h2 id="1、什么是YUM"><a href="#1、什么是YUM" class="headerlink" title="1、什么是YUM"></a>1、什么是YUM</h2><p>在CentOS系统中，软件管理方式通常有三种方式：<code>rpm安装</code>、<code>yum安装</code>以及<code>编译安装</code>。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">编译安装，从过程上来讲比较麻烦，包需要用户自行下载，下载的是源码包，需要进行编译操作，编译好了才能进行安装，这个过程对于刚接触Linux的人来说比较麻烦，而且还容易出错。好处在于是源码包，对于有需要自定义模块的用户来说非常方便。(就业班会着重讲解)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>难度：编译安装 &gt; rpm安装 &gt; yum安装（有网络 + yum源支持）</p><p>Yum（全称为 <code>Yellow dog Updater, Modified</code>）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。</p><p>基于rpm包管理，能够从<strong>指定的服务器</strong>(yum源）自动下载RPM包并且安装，可以==自动处理依赖性关系==，并且==一次安装所有依赖的软件包==，无须繁琐地一次次下载、安装。</p><blockquote><p>rpm和yum区别？答：① yum底层也是基于rpm进行安装的（yum安装的软件，可以通过rpm -qa进行查询） ② yum相对于rpm最大的优势，可以解决依赖关系。</p><p>A =&gt; B =&gt; C</p></blockquote><h2 id="2、YUM源配置"><a href="#2、YUM源配置" class="headerlink" title="2、YUM源配置"></a>2、YUM源配置</h2><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326115612781.png" alt="image-20200326115612781"></p><p>YUM源配置文件所在路径 =&gt; /etc/yum.repos.d文件夹</p><p>-rw-r–r–. 1 root root 1991 Mar 28  2017 CentOS-Base.repo            网络yum源配置文件<br>-rw-r–r–. 1 root root  647 Mar 28  2017 CentOS-Debuginfo.repo    内核相关的更新包<br>-rw-r–r–. 1 root root  289 Mar 28  2017 CentOS-fasttrack.repo       快速通道<br>-rw-r–r–. 1 root root  630 Mar 28  2017 CentOS-Media.repo           本地yum源配置文件<br>-rw-r–r–. 1 root root 7989 Mar 28  2017 CentOS-Vault.repo          最近版本加入老本的YUM配置   </p><p>扩展：在YUM镜像源中添加阿里云镜像源</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一步：备份CentOS-Base.repo这个源（更改后缀名.repo =&gt; .repo.bak）# mv CentOS-Base.repo CentOS-Base.repo.bak第二步：使用wget命令下载阿里云的镜像文件# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo选项说明：-O ：指定文件下载的位置以及名称第三步：清理YUM缓存# yum clean all第四步：重新建立缓存（让新YUM源生效）# yum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、yum命令详解"><a href="#3、yum命令详解" class="headerlink" title="3、yum命令详解"></a>3、yum命令详解</h2><h3 id="☆-搜索要安装的软件"><a href="#☆-搜索要安装的软件" class="headerlink" title="☆ 搜索要安装的软件"></a>☆ 搜索要安装的软件</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum search 软件名称的关键词<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：搜索阿里云仓库中的vim软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum search vim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：搜索firefox火狐浏览器</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum search firefox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-使用yum安装软件"><a href="#☆-使用yum安装软件" class="headerlink" title="☆ 使用yum安装软件"></a>☆ 使用yum安装软件</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install 软件名称关键词 [选项]选项：-y ：yes缩写，确认安装，不提示。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：使用yum命令安装vim编辑器</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install vim -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：使用yum命令安装firefox浏览器</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install firefox -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-使用yum卸载软件"><a href="#☆-使用yum卸载软件" class="headerlink" title="☆ 使用yum卸载软件"></a>☆ 使用yum卸载软件</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum remove 软件名称关键词 [选项]选项：-y ：yes缩写，确认卸载，不提示。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把firefox火狐浏览器进行卸载操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum remove firefox -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把httpd软件进行强制卸载</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum remove httpd -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-使用yum更新软件"><a href="#☆-使用yum更新软件" class="headerlink" title="☆ 使用yum更新软件"></a>☆ 使用yum更新软件</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum update 软件名称关键词 [选项]选项：-y ：yes缩写，确认更新，不提示<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把vim编辑器进行更新操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum update vim -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把firefox火狐浏览器进行更新操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum update firefox -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三、LAMP概述"><a href="#三、LAMP概述" class="headerlink" title="三、LAMP概述"></a>三、LAMP概述</h1><h2 id="1、什么是LAMP"><a href="#1、什么是LAMP" class="headerlink" title="1、什么是LAMP"></a>1、什么是LAMP</h2><p>LAMP：==L==inux + ==A==pache + ==M==ySQL + ==P==HP                        LAMP 架构（组合）</p><p>LNMP：Linux + Nginx + MySQL + php-fpm                             LNMP 架构（组合）</p><p>LNMPA：Linux + Nginx(80) + MySQL + PHP + Apache           Nginx 代理方式</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326152052773.png" alt="image-20200326152052773"></p><p>Apache：Apache是世界使用排名第一的Web服务器软件。</p><p>PHP：一种专门用于Web开发的编程语言。</p><p>MySQL：MySQL是一个关系型数据库管理系统，主要用于永久存储项目数据。</p><h2 id="2、AMP三者之间的关系"><a href="#2、AMP三者之间的关系" class="headerlink" title="2、AMP三者之间的关系"></a>2、AMP三者之间的关系</h2><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326152231295.png" alt="image-20200326152231295"></p><p>Apache：用于接收用户的请求（输入网址，返回网页=&gt;结果）</p><p>PHP：注册、登录、加入购物车、下单、支付等动态功能（有编程语言的支持）</p><p>MySQL：永久保存数据，比如你在网站上注册的用户和密码、你加入购物车的产品、你的产品订单</p><p>LAMP = Linux + APache + PHP + MySQL</p><h1 id="四、阿里云详解"><a href="#四、阿里云详解" class="headerlink" title="四、阿里云详解"></a>四、阿里云详解</h1><p>要想部署一个互联网上可以访问到的环境，必须先具备以下内容 ：</p><p>服务器（IP、帐号密码、终端）、相应的软件、域名（备案、解析）、代码等。</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326154214921.png" alt="image-20200326154214921"></p><p>代码：前端工程师 + 后端工程师进行开发提供的！</p><h2 id="1、注册阿里云账号"><a href="#1、注册阿里云账号" class="headerlink" title="1、注册阿里云账号"></a>1、注册阿里云账号</h2><p>阿里云官网：<a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326154527903.png" alt="image-20200326154527903"></p><blockquote><p>特别说明：云服务器的厂商特别多，你可以进行任意选择 =&gt; 阿里云、百度云、腾讯云、华为云…</p></blockquote><p>注册时建议使用支付宝，方便快捷。最重要：付款方便</p><h2 id="2、实名认证（上传身份证照片）"><a href="#2、实名认证（上传身份证照片）" class="headerlink" title="2、实名认证（上传身份证照片）"></a>2、实名认证（上传身份证照片）</h2><p>第一步：单击账号下方的实名认证（选择个人认证）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155133047.png" alt="image-20200326155133047"></p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155146301.png" alt="image-20200326155146301"></p><p>第二步：选择支付宝授权认证（及时开通，无需等待）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155223066.png" alt="image-20200326155223066"></p><p>第三步：勾选同意，点击提交</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155308208.png" alt="image-20200326155308208"></p><p>第四步：使用手机支付宝扫描二维码，进行授权</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155339781.png" alt="image-20200326155339781"></p><p>第五步：填写相关信息（住址）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155358292.png" alt="image-20200326155358292"></p><p>填写完毕，即可完成认证。</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326155428202.png" alt="image-20200326155428202"></p><h2 id="3、购买阿里云的ECS云服务器"><a href="#3、购买阿里云的ECS云服务器" class="headerlink" title="3、购买阿里云的ECS云服务器"></a>3、购买阿里云的ECS云服务器</h2><p>第一步：回到阿里云首页，找到弹性计算 =&gt; ECS云服务器</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326161759062.png" alt="image-20200326161759062"></p><p>第二步：单击立即购买，购买ECS服务器（选区域、选配置）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326161916781.png" alt="image-20200326161916781"></p><p>第三步：选择付费模式、选择CPU与内存的配置</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326162659403.png" alt="image-20200326162659403"></p><p>第四步：选择镜像（CentOS7.6）与云盘（硬盘）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326162845467.png" alt="image-20200326162845467"></p><p>第四步：设置网络、公网IP以及安全组（重要）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326163143681.png" alt="image-20200326163143681"></p><blockquote><p>用户 =&gt;  阿里云安全组  =&gt;  firewalld防火墙  =&gt; Linux服务器</p></blockquote><p>第五步：设置root账号密码（一定要选择自定义密码）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326163533492.png" alt="image-20200326163533492"></p><blockquote><p>8 - 30 个字符，必须同时包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&amp;*_-+=|{}[]:;’&lt;&gt;,.?/ 中的特殊符号），其中 Windows 实例不能以斜线号（/）为首字符</p></blockquote><p>第六步：设置释放时间 =&gt; 什么时候删除这台服务器（不收钱）</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326163830484.png" alt="image-20200326163830484"></p><blockquote><p>特别说明：只有个人购买的ECS服务器可以设置释放时间，生产环境一定不要设置释放时间，否则后果自负！！！</p></blockquote><p>第七步：进入管理控制台，找到我们刚才购买的ECS服务器，如下图所示：</p><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326164148544.png" alt="image-20200326164148544"></p><blockquote><p>使用MX软件，直接连接公网IP + root账号 + 自定义的密码即可连接</p></blockquote><h2 id="4、使用MX连接ECS服务器"><a href="#4、使用MX连接ECS服务器" class="headerlink" title="4、使用MX连接ECS服务器"></a>4、使用MX连接ECS服务器</h2><p><img src="/../assets/blog_res/%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8ELAMP%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98.assets/image-20200326164519379.png" alt="image-20200326164519379"></p><h2 id="5、使用yum安装sl小工具"><a href="#5、使用yum安装sl小工具" class="headerlink" title="5、使用yum安装sl小工具"></a>5、使用yum安装sl小工具</h2><p>安装过程：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install sl -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用sl命令：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># sl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux自有服务与软件包管理</title>
      <link href="/2023/12/23/linux-zi-you-fu-wu-yu-ruan-jian-bao-guan-li/"/>
      <url>/2023/12/23/linux-zi-you-fu-wu-yu-ruan-jian-bao-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux自有服务与软件包管理"><a href="#Linux自有服务与软件包管理" class="headerlink" title="Linux自有服务与软件包管理"></a>Linux自有服务与软件包管理</h1><p>服务是一些特定的进程，自有服务就是系统开机后就自动运行的一些进程，一旦客户发出请求，这些进程就自动为他们提供服务，windows系统中，把这些自动运行的进程，称为”服务”</p><p>举例：当我们使用SSH客户端软件连接linux的时候，我们的服务器为什么会对连接做出响应？是因为SSH服务开机就自动运行了。</p><p>所谓自有服务，简单来说，可以理解为Linux系统开机自动运行的服务（程序）。</p><h1 id="一、systemctl管理系统服务"><a href="#一、systemctl管理系统服务" class="headerlink" title="一、systemctl管理系统服务"></a>一、systemctl管理系统服务</h1><h2 id="1、systemctl概述"><a href="#1、systemctl概述" class="headerlink" title="1、systemctl概述"></a>1、systemctl概述</h2><p>CentOS6版本：</p><p>service命令（管理服务开启、停止以及重启）+ chkconfig（定义开机启动项）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># service network start|stop|restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>CentOS7版本：</p><p>systemctl命令 = system系统 + control控制（服务管理+开启启动项管理）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start|stop|restart network<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、显示系统服务"><a href="#2、显示系统服务" class="headerlink" title="2、显示系统服务"></a>2、显示系统服务</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl [选项]选项说明：list-units --type service --all：列出所有服务（包含启动的和没启动的）list-units --type service：列出所有启动的服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：列出Linux系统中所有的服务（包含启动的和没启动的）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl list-units --type service --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：只列出已经启动的Linux系统服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl list-units --type service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把systemctl显示系统服务与管道命令相结合，筛选我们想要的服务信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl list-units --type service | grep sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、Linux系统服务管理"><a href="#3、Linux系统服务管理" class="headerlink" title="3、Linux系统服务管理"></a>3、Linux系统服务管理</h2><h3 id="☆-status查看状态"><a href="#☆-status查看状态" class="headerlink" title="☆ status查看状态"></a>☆ status查看状态</h3><p>查看系统服务的状态</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl status 系统服务的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：查询系统中网络服务的状态信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl status network<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321101758022.png" alt="image-20200321101758022"></p><p>案例：查询系统中sshd服务的状态信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl status sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321102106850.png" alt="image-20200321102106850"></p><h3 id="☆-stop停止服务"><a href="#☆-stop停止服务" class="headerlink" title="☆ stop停止服务"></a>☆ stop停止服务</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop 系统服务的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：使用systemctl命令停止network网络服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop network<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-start启动服务"><a href="#☆-start启动服务" class="headerlink" title="☆ start启动服务"></a>☆ start启动服务</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start 系统服务的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：使用systemctl命令启动network网络服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start network<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-restart重启服务"><a href="#☆-restart重启服务" class="headerlink" title="☆ restart重启服务"></a>☆ restart重启服务</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart 系统服务的名称等价于# systemctl stop 系统服务的名称# systemctl start 系统服务的名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：使用systemctl命令重启crond计划任务的服务信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart crond<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-reload热重载技术"><a href="#☆-reload热重载技术" class="headerlink" title="☆ reload热重载技术"></a>☆ reload热重载技术</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl reload 系统服务名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>reload：重新加载指定服务的配置文件（并非所有服务都支持reload，通常使用restart)</p><blockquote><p>有些服务，如Nginx，更改了配置文件，但是不能重启Nginx服务，只是想立即让我们配置文件的更改生效，则就可以使用热重载技术了。</p></blockquote><p>案例：使用热重载技术重新加载crond服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl reload crond<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、服务持久化（开机自启与开机不自启）"><a href="#4、服务持久化（开机自启与开机不自启）" class="headerlink" title="4、服务持久化（开机自启与开机不自启）"></a>4、服务持久化（开机自启与开机不自启）</h2><p> 所谓服务持久化，就是服务在开机的时候，是否自动启动。</p><h3 id="☆-开机自启"><a href="#☆-开机自启" class="headerlink" title="☆ 开机自启"></a>☆ 开机自启</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl enable 系统服务的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把network网络服务设置为开机自启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl enable networknetwork.service is not a native service, redirecting to /sbin/chkconfig.Executing /sbin/chkconfig network on以上提示代表network.service不是一个本地的系统服务，所以想设置开机自启需要使用/sbin/chkconfig进行操作# /sbin/chkconfig network on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：把crond计划任务的服务信息添加到开机自启动中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl enable crond<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321105158884.png" alt="image-20200321105158884"></p><h3 id="☆-开机不自启"><a href="#☆-开机不自启" class="headerlink" title="☆ 开机不自启"></a>☆ 开机不自启</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl disable 系统服务的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把crond计划任务的服务信息从开机自启动中移除</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl disable crond<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321105106368.png" alt="image-20200321105106368"></p><h1 id="二、扩展：系统运行级别"><a href="#二、扩展：系统运行级别" class="headerlink" title="二、扩展：系统运行级别"></a>二、扩展：系统运行级别</h1><h2 id="1、什么是运行级别"><a href="#1、什么是运行级别" class="headerlink" title="1、什么是运行级别"></a>1、什么是运行级别</h2><p>运行级别全称（Running Level），代表Linux系统的不同运行模式</p><h2 id="2、CentOS6的运行级别"><a href="#2、CentOS6的运行级别" class="headerlink" title="2、CentOS6的运行级别"></a>2、CentOS6的运行级别</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/inittab0   系统关机状态   halt (Do NOT set initdefault to this)1   单用户工作状态   Single user mode (类似Windows的安全模式，Linux忘记密码)2   多用户状态（没有NFS） Multiuser, without NFS (The same as 3, if you do not have networking)3   多用户状态（有NFS）   Full multiuser mode (字符模式,服务基本都是此模式)4   系统未使用，留给用户   unused5   图形界面    X11 (图形模式，个人计算机都是此模式)6   系统正常关闭并重新启动   reboot (Do NOT set initdefault to this)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、CentOS7的运行级别"><a href="#3、CentOS7的运行级别" class="headerlink" title="3、CentOS7的运行级别"></a>3、CentOS7的运行级别</h2><pre class="line-numbers language-poweshell" data-language="poweshell"><code class="language-poweshell">0   shutdown.target1   emergency.target2   rescure.target3   multi-user.target   字符模式4   无5   graphical.target    图形模式6   无<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、init命令（临时更改运行模式）"><a href="#4、init命令（临时更改运行模式）" class="headerlink" title="4、init命令（临时更改运行模式）"></a>4、init命令（临时更改运行模式）</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># init 模式编号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：立即关机</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># shutdown -h 0或now或# halt -p或# init 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：立即重启</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># reboot或# init 6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把计算机切换到字符模式（黑窗口）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># init 3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把计算机切换到图形模式（图形界面）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># init 5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、CentOS6中的chkconfig"><a href="#5、CentOS6中的chkconfig" class="headerlink" title="5、CentOS6中的chkconfig"></a>5、CentOS6中的chkconfig</h2><p>问题：在CentOS7中，设置network开机启动时，系统要求使用chkconfig命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chkconfig network on<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置完成后，怎么查看network有没有随开机自动启动呢？</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chkconfig --list |grep network network        0:off1:off2:on3:on4:on5:on6:off0 关机模式1 单用户模式2 多用户模式（无NFS）3 字符模式4 自定义模式5 图形模式6 重启模式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三、NTP时间同步服务"><a href="#三、NTP时间同步服务" class="headerlink" title="三、NTP时间同步服务"></a>三、NTP时间同步服务</h1><h2 id="1、什么是NTP服务"><a href="#1、什么是NTP服务" class="headerlink" title="1、什么是NTP服务"></a>1、什么是NTP服务</h2><p> NTP是网络时间协议(Network Time Protocol)，它是用来同步网络中各个计算机的时间的协议。</p><p> 工作场景：</p><p>​        公司开发了一个电商网站，由于访问量很大，网站后端由100台服务器组成集群。50台负责接收订单，50台负责安排发货，接收订单的服务器需要记录用户下订单的具体时间，把数据传给负责发货的服务器，由于100台服务器时间各不相同，记录的时间经常不一致，甚至会出现下单时间是明天，发货时间是昨天的情况。</p><h2 id="2、NTP时间同步的原理"><a href="#2、NTP时间同步的原理" class="headerlink" title="2、NTP时间同步的原理"></a>2、NTP时间同步的原理</h2><p>问题：标准时间是哪里来的？</p><p>​        现在的标准时间是由原子钟报时的国际标准时间UTC（Universal Time Coordinated，世界协调时)，所以NTP获得UTC的时间来源可以是原子钟、天文台、卫星，也可以从Internet上获取。</p><p>在NTP中，定义了时间按照服务器的等级传播，<strong>Stratum层的总数限制在15以内</strong></p><p>工作中，==通常我们会直接使用各个组织提供的，现成的NTP服务器==</p><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321114613074.png" alt="image-20200321114613074"></p><blockquote><p>备注：千万不要改Windows系统时间！</p></blockquote><h2 id="3、从哪里找合适的NTP服务器呢？"><a href="#3、从哪里找合适的NTP服务器呢？" class="headerlink" title="3、从哪里找合适的NTP服务器呢？"></a>3、从哪里找合适的NTP服务器呢？</h2><p>NTP授时网站：<a href="http://www.ntp.org.cn/pool.php">http://www.ntp.org.cn/pool.php</a></p><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321115655939.png" alt="image-20200321115655939"></p><h2 id="4、NTP时间同步操作"><a href="#4、NTP时间同步操作" class="headerlink" title="4、NTP时间同步操作"></a>4、NTP时间同步操作</h2><h3 id="☆-手工同步"><a href="#☆-手工同步" class="headerlink" title="☆ 手工同步"></a>☆ 手工同步</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate NTP服务器的IP地址或域名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：查看Linux系统时间</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># date<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：从NTP服务器中同步系统时间</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ntpdate cn.ntp.org.cn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-自动同步"><a href="#☆-自动同步" class="headerlink" title="☆ 自动同步"></a>☆ 自动同步</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">① 启动ntpd服务# systemctl start ntpd② 把ntpd服务追加到系统开机启动项中# systemctl enable ntpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>问题1：启动ntpd服务后，是不是时间就自动同步了？</p><p>启动后就自动同步了</p><p>问题2：需不需要让ntpd服务，开机自动运行？</p><p>需要</p><p>ntpd服务配置文件位置  /etc/ntp.conf</p><h1 id="四、Linux下的软件包管理"><a href="#四、Linux下的软件包管理" class="headerlink" title="四、Linux下的软件包管理"></a>四、Linux下的软件包管理</h1><h2 id="1、什么是软件包"><a href="#1、什么是软件包" class="headerlink" title="1、什么是软件包"></a>1、什么是软件包</h2><p>这是什么？</p><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321143411461.png" alt="image-20200321143411461"></p><p>由以上图解可知，这个PCQQ2019.exe是Windows中的软件安装包。</p><blockquote><p>所谓的Linux软件包就是Linux下软件的安装程序</p></blockquote><h2 id="2、Linux下软件的安装方式"><a href="#2、Linux下软件的安装方式" class="headerlink" title="2、Linux下软件的安装方式"></a>2、Linux下软件的安装方式</h2><p>① RPM软件包安装   =&gt;   软件名称.rpm</p><p>② YUM包管理工具   =&gt;   yum  install  软件名称  -y</p><p>③ 源码安装 =&gt; 下载软件的源代码 =&gt; 编译 =&gt; 安装（最麻烦的，但是也最稳定）</p><h2 id="3、二进制软件包"><a href="#3、二进制软件包" class="headerlink" title="3、二进制软件包"></a>3、二进制软件包</h2><p>​        二进制包，也就是源码包经过成功编译之后产生的包。</p><p>​        二进制包是 Linux 下默认的软件安装包，目前主要有以下 2 大主流的二进制包管理系统：</p><ul><li>==RPM 包==管理系统：功能强大，安装、升级、査询和卸载非常简单方便，因此很多 Linux 发行版都默认使用此机制作为软件安装的管理方式，例如 Fedora、==CentOS==、SuSE 等。</li><li>DPKG 包管理系统：由 Debian Linux 所开发的包管理机制，通过 DPKG 包，Debian Linux 就可以进行软件包管理，主要应用在 Debian 和 Ubuntu 中。</li></ul><p>​        <strong>RPM</strong>是RedHat Package Manager（RedHat软件包管理工具）的缩写</p><p>​        作用：rpm 的作用类似于豌豆荚，华为应用市场，App Store，主要作用是对linux 服务器上的软件包进行对应管理操作，管理分为：查询、卸载、安装/更新。</p><h2 id="4、获取-rpm软件包"><a href="#4、获取-rpm软件包" class="headerlink" title="4、获取*.rpm软件包"></a>4、获取*.rpm软件包</h2><p>a. 去官网去下载（<a href="http://rpm.pbone.net);/">http://rpm.pbone.net）；</a></p><p>b. 不介意老版本的话，可以从光盘（或者镜像文件）中读取；CentOS7.6*.iso</p><h2 id="5、查询系统中已安装的rpm软件"><a href="#5、查询系统中已安装的rpm软件" class="headerlink" title="5、查询系统中已安装的rpm软件"></a>5、查询系统中已安装的rpm软件</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa |grep 要搜索的软件名称选项说明：-q ：query，查询操作-a ：all，代表所有<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例1：查询计算机中已安装的rpm软件包</p> <pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例2：搜索计算机中已安装的firefox软件包</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa |grep firefox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、卸载CentOS系统中的rpm软件包"><a href="#6、卸载CentOS系统中的rpm软件包" class="headerlink" title="6、卸载CentOS系统中的rpm软件包"></a>6、卸载CentOS系统中的rpm软件包</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -e 软件名称 [选项]选项说明：--nodeps ：强制卸载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把系统中的firefox浏览器进行卸载操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa |grep firefoxfirefox-60.2.2-1.el7.centos.x86_64# rpm -e firefox-60.2.2-1.el7.centos.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、rpm软件包的安装"><a href="#7、rpm软件包的安装" class="headerlink" title="7、rpm软件包的安装"></a>7、rpm软件包的安装</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ivh 软件包的名称.rpm选项说明：-i：install，安装-v：显示进度条-h：表示以"#"形式显示进度条<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8、rpm软件包的获取（光盘）"><a href="#8、rpm软件包的获取（光盘）" class="headerlink" title="8、rpm软件包的获取（光盘）"></a>8、rpm软件包的获取（光盘）</h2><p>第一步：在VMware虚拟机中加载CentOS7.6的安装光盘</p><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321152142795.png" alt="image-20200321152142795"></p><p>第二步：使用 # lsblk（list block devices）或者df -T 查看块状设备的信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># lsblk[root@yunwei ~]# lsblkNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTsda               8:0    0   20G  0 disk├─sda1            8:1    0    1G  0 part /boot└─sda2            8:2    0   19G  0 part  ├─centos-root 253:0    0   17G  0 lvm  /  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]sr0              11:0    1  4.3G  0 rom  /run/media/itheima/CentOS 7 x86_64由以上图解可知，/dev/sr0代表光驱设备 =&gt; 挂载点 =&gt; /run/media/itheima/CentOS 7 x86_64文件夹或# df -T<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Linux操作系统的中所有存储设备必须先挂载后使用</p></blockquote><p>第三步：使用cd命令，切换到挂载目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /run/media/itheima/CentOS\ 7\ x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321152744329.png" alt="image-20200321152744329"></p><p>第四步：使用cd命令，切换到Packages软件包中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd Packages<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第五步：查询我们要安装的软件包</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls |grep firefoxfirefox-60.2.2-1.el7.centos.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>第六步：使用rpm -ivh命令安装软件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ivh firefox-60.2.2-1.el7.centos.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>输入firefox + Tab，让其自动补全</p></blockquote><h2 id="9、rpm软件包的升级"><a href="#9、rpm软件包的升级" class="headerlink" title="9、rpm软件包的升级"></a>9、rpm软件包的升级</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -Uvh 升级后的软件包名称.rpm选项说明：-U ：Update，更新操作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：使用rpm -Uvh对firefox-60.2.2版本进行升级</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -Uvh firefox-68.4.1-1.el7.centos.x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="10、rpm扩展"><a href="#10、rpm扩展" class="headerlink" title="10、rpm扩展"></a>10、rpm扩展</h2><h3 id="☆-依赖关系"><a href="#☆-依赖关系" class="headerlink" title="☆ 依赖关系"></a>☆ 依赖关系</h3><p>一个软件必须先有其他软件才能运行，例如之前xmind启动过程中提示的缺少DLL，称之为依赖</p><p>WAMP（Windows + Apache + MySQL + PHP）安装前必须先安装VC++ 2014 x86_64，这种情况就称之为有依赖关系。</p><p>60.8.0的firefox可以更新成功</p><p>下面我们尝试更新到68.4.1的版本</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">用法：rpm -Uvh 软件包名称# rpm -Uvh firefox-68.4.1-1.el7.centos.x86_64.rpm使用rpm命令，安装68.4.1版本的软件包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E4%B8%8E%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86.assets/image-20200321155724824.png" alt="image-20200321155724824"></p><p>错误提示：</p><p>error：Failed dependencies:</p><p>提示安装68版本的firefox需要依赖nspr4.21的版本，nss的3.44的版本，这就是我们说的==依赖关系==。</p><p>为了解决依赖关系的问题，有另外一个管理工具叫做==yum==，后面我们会讲到。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">A软件A软件 =&gt; 需要依赖B软件B软件 =&gt; 需要依赖C软件C软件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>依赖关系的解决：使用YUM软件包管理工具对其进行安装（自动解决依赖关系）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install firefox -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-查看文件所属的包名"><a href="#☆-查看文件所属的包名" class="headerlink" title="☆ 查看文件所属的包名"></a>☆ 查看文件所属的包名</h3><p>基本语法：f = file</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qf 文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：判断某个文件所属的包名称</p><p>案例：查询/etc/ntp.conf 属于哪个软件包</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qf /etc/ntp.confntp-4.2.6p5-28.el7.centos.x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-查询软件安装完成后，生成了哪些文件"><a href="#☆-查询软件安装完成后，生成了哪些文件" class="headerlink" title="☆ 查询软件安装完成后，生成了哪些文件"></a>☆ 查询软件安装完成后，生成了哪些文件</h3><p>基本语法：l = list，显示这个软件安装后生成了哪些文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ql 软件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例1：查询firefox软件生成了哪些文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ql firefox特别说明：软件安装完成后，一共生成了以下几类文件配置文件类：/etc目录程序文件本身，二进制文件命令：/usr/bin或/usr/sbin目录文档手册：/usr/share/doc或man目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例2：查询openssh软件生成了哪些文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -ql openssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="11、光盘的挂载与解挂"><a href="#11、光盘的挂载与解挂" class="headerlink" title="11、光盘的挂载与解挂"></a>11、光盘的挂载与解挂</h2><p>在Linux操作系统中，所有的存储设备都必须先挂载然后才能使用。</p><p>问题：为什么当我们直接访问/run/media/itheima/CentOS 7 x86_64就相当于访问光盘</p><p>答：主要原因就是因为CentOS7的操作系统自动把光驱设备挂载到此目录了，访问这个目录就相当于访问光盘。</p><h3 id="☆-解挂"><a href="#☆-解挂" class="headerlink" title="☆ 解挂"></a>☆ 解挂</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd ~# umount /run/media/itheima/CentOS\ 7\ x86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>常见问题：当我们执行以上命令时，系统提示target  is busy！</p><p>出现以上问题的主要原因在于我们当前所在的目录为挂载目录。</p><h3 id="☆-挂载"><a href="#☆-挂载" class="headerlink" title="☆ 挂载"></a>☆ 挂载</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mount 设备文件 挂载目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>提示：光驱的设备文件为/dev/sr0</p></blockquote><p>案例：把光驱挂载到/mnt/cdrom目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /mnt/cdrom# mount /dev/sr0 /mnt/cdrommount: /dev/sr0 is write-protected, mounting read-only<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把/mnt/cdrom进行解挂操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd ~# umount /mnt/cdrom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统自有服务</title>
      <link href="/2023/12/23/linux-xi-tong-zi-you-fu-wu/"/>
      <url>/2023/12/23/linux-xi-tong-zi-you-fu-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统自有服务"><a href="#Linux系统自有服务" class="headerlink" title="Linux系统自有服务"></a>Linux系统自有服务</h1><h1 id="一、Linux中防火墙firewalld"><a href="#一、Linux中防火墙firewalld" class="headerlink" title="一、Linux中防火墙firewalld"></a>一、Linux中防火墙firewalld</h1><h2 id="1、什么是防火墙"><a href="#1、什么是防火墙" class="headerlink" title="1、什么是防火墙"></a>1、什么是防火墙</h2><p>防火墙：防范一些网络攻击。有软件防火墙、硬件防火墙之分。</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323103515971.png" alt="image-20200323103515971"></p><p>防火墙选择让正常请求通过，从而保证网络安全性。</p><p>Windows防火墙：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323103649880.png" alt="image-20200323103649880"></p><p>Windows防火墙的划分与开启、关闭操作：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323103742027.png" alt="image-20200323103742027"></p><h2 id="2、防火墙的作用"><a href="#2、防火墙的作用" class="headerlink" title="2、防火墙的作用"></a>2、防火墙的作用</h2><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323104432522.png" alt="image-20200323104432522"></p><h2 id="3、Linux中的防火墙分类"><a href="#3、Linux中的防火墙分类" class="headerlink" title="3、Linux中的防火墙分类"></a>3、Linux中的防火墙分类</h2><p>CentOS5、CentOS6 =&gt; 防火墙 =&gt; iptables防火墙</p><p>CentOS7 =&gt; 防火墙 =&gt; firewalld防火墙</p><blockquote><p>firewalld = fire火  wall墙  daemon守护进程</p></blockquote><h2 id="4、firewalld防火墙"><a href="#4、firewalld防火墙" class="headerlink" title="4、firewalld防火墙"></a>4、firewalld防火墙</h2><h3 id="☆-区域"><a href="#☆-区域" class="headerlink" title="☆ 区域"></a>☆ 区域</h3><p>firewalld增加了区域(zone)的概念，所谓区域是指，firewalld<strong>预先准备了几套防火墙策略的集合</strong>，类似于<strong>策略的模板</strong>，用户可以根据需求选择区域。</p><p>常见区域及相应策略规则(规则：哪些端口或服务可以通过防火墙，哪些不能通过)</p><table><thead><tr><th>区域</th><th>默认策略</th></tr></thead><tbody><tr><td>trusted</td><td>允许所有数据包</td></tr><tr><td>home</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,mdns,ippclient,amba-client,dhcpv6-client服务通过</td></tr><tr><td>internal</td><td>等同于home</td></tr><tr><td>work</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,ipp-client,dhcpv6-client服务通过</td></tr><tr><td>==public==</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,dhcpv6-client服务通过</td></tr><tr><td>external</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh服务通过</td></tr><tr><td>dmz</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh服务通过</td></tr><tr><td>block</td><td>拒绝流入的流量，除非与流出的流量相关，非法流量采取拒绝操作</td></tr><tr><td>drop</td><td>拒绝流入的流量，除非与流出的流量相关，非法流量采取丢弃操作</td></tr></tbody></table><p>案例：在Linux系统中安装httpd服务（Web服务），占用计算机的80端口</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install httpd -y# systemctl start httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装启动完成后，在浏览器中，输入http://服务器的IP地址/即可访问httpd服务页面</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323110040266.png" alt="image-20200323110040266"></p><blockquote><p>以上操作只能使用Google浏览器、360浏览器或者Firefox火狐浏览器，一定不要使用IE</p></blockquote><p>以上问题的原因在于：firewalld防火墙已经把httpd（80端口）屏蔽了，所以没有办法访问这台服务器的80端口（httpd服务）</p><p>临时解决办法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323110420640.png" alt="image-20200323110420640"></p><h3 id="☆-运行模式和永久模式"><a href="#☆-运行模式和永久模式" class="headerlink" title="☆ 运行模式和永久模式"></a>☆ 运行模式和永久模式</h3><p>运行模式：此模式下，配置的防火墙策略立即生效，但是不写入配置文件</p><p>永久模式：此模式下，配置的防火墙策略写入配置文件，但是需要reload重新加载才能生效。</p><p>==firewalld默认采用运行模式==</p><h2 id="5、防火墙设置"><a href="#5、防火墙设置" class="headerlink" title="5、防火墙设置"></a>5、防火墙设置</h2><h3 id="☆-防火墙的启动、停止以及查看运行状态"><a href="#☆-防火墙的启动、停止以及查看运行状态" class="headerlink" title="☆ 防火墙的启动、停止以及查看运行状态"></a>☆ 防火墙的启动、停止以及查看运行状态</h3><p>查看运行状态</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl status firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323113130407.png" alt="image-20200323113130407"></p><p>停止防火墙（学习环境任意操作，生产环境一定不要停止防火墙）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl stop firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>记住：防火墙一旦停止，其设置的所有规则会全部失效！</p></blockquote><p>启动防火墙</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-防火墙重启与重载操作"><a href="#☆-防火墙重启与重载操作" class="headerlink" title="☆ 防火墙重启与重载操作"></a>☆ 防火墙重启与重载操作</h3><p>重启操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl restart firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>restart = stop + start，重启首先停止服务，然后在重新启动服务</p></blockquote><p>重载操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl reload firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们对防火墙的配置文件做了更改（永久模式），需要使用reload进行重载让其立即生效</p><blockquote><p>reload并没有停止正在运行的防火墙服务，只是在服务的基础上变换了防火墙规则</p></blockquote><h3 id="☆-把防火墙设置为开机启动与开机不启动"><a href="#☆-把防火墙设置为开机启动与开机不启动" class="headerlink" title="☆ 把防火墙设置为开机启动与开机不启动"></a>☆ 把防火墙设置为开机启动与开机不启动</h3><p>开机启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl enable firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>开机不启动</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl disable firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、firewalld防火墙规则"><a href="#6、firewalld防火墙规则" class="headerlink" title="6、firewalld防火墙规则"></a>6、firewalld防火墙规则</h2><h3 id="☆-firewalld管理工具"><a href="#☆-firewalld管理工具" class="headerlink" title="☆ firewalld管理工具"></a>☆ firewalld管理工具</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd [选项1] [选项2] [...N]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-查看防火墙默认的区域（zone）"><a href="#☆-查看防火墙默认的区域（zone）" class="headerlink" title="☆ 查看防火墙默认的区域（zone）"></a>☆ 查看防火墙默认的区域（zone）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --get-default-zone<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行效果：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323115400536.png" alt="image-20200323115400536"></p><h3 id="☆-查看所有支持的区域（zones）"><a href="#☆-查看所有支持的区域（zones）" class="headerlink" title="☆ 查看所有支持的区域（zones）"></a>☆ 查看所有支持的区域（zones）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --get-zones<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行结果：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323115553881.png" alt="image-20200323115553881"></p><blockquote><p>为什么要有区域的概念：其实不同的区域就是不同的规则</p></blockquote><h3 id="☆-查看当前区域的规则设置"><a href="#☆-查看当前区域的规则设置" class="headerlink" title="☆ 查看当前区域的规则设置"></a>☆ 查看当前区域的规则设置</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --list-all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323120055400.png" alt="image-20200323120055400"></p><h3 id="☆-查看所有区域的规则设置"><a href="#☆-查看所有区域的规则设置" class="headerlink" title="☆ 查看所有区域的规则设置"></a>☆ 查看所有区域的规则设置</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --list-all-zones<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行结果：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323140809857.png" alt="image-20200323140809857"></p><h3 id="☆-添加允许通过的服务或端口（重点）"><a href="#☆-添加允许通过的服务或端口（重点）" class="headerlink" title="☆ 添加允许通过的服务或端口（重点）"></a>☆ 添加允许通过的服务或端口（重点）</h3><h4 id="①-通过服务的名称添加规则"><a href="#①-通过服务的名称添加规则" class="headerlink" title="① 通过服务的名称添加规则"></a>① 通过服务的名称添加规则</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --zone=public --add-service=服务的名称备注：服务必须存储在/usr/lib/firewalld/services目录中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：把http服务添加到防火墙的规则中，允许通过防火墙</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --zone=public --add-service=http<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323142852553.png" alt="image-20200323142852553"></p><p>扩展：把http服务从防火墙规则中移除，不允许其通过防火墙</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --zone=public --remove-service=http# firewall-cmd --list-all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323143838389.png" alt="image-20200323143838389"></p><h4 id="②-通过服务的端口号添加规则"><a href="#②-通过服务的端口号添加规则" class="headerlink" title="② 通过服务的端口号添加规则"></a>② 通过服务的端口号添加规则</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --zone=public --add-port=端口号/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把80/tcp添加到防火墙规则中，允许通过防火墙</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ss -naltp |grep httpdhttpd :::80# 允许80端口通过firewalld防火墙# firewall-cmd --zone=public --add-port=80/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>运行效果：</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323145118290.png" alt="image-20200323145118290"></p><p>案例：从firewalld防火墙中把80端口的规则移除掉</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --zone=public --remove-port=80/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323152402733.png" alt="image-20200323152402733"></p><h3 id="☆-永久模式permanent"><a href="#☆-永久模式permanent" class="headerlink" title="☆ 永久模式permanent"></a>☆ 永久模式permanent</h3><p>在Linux的新版防火墙firewalld中，其模式一共分为两大类：运行模式（临时模式）+ 永久模式。</p><p>运行模式：不会把规则保存到防火墙的配置文件中，设置完成后立即生效</p><p>永久模式：会把规则写入到防火墙的配置文件中，但是其需要reload重载后才会立即生效</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># 根据服务名称添加规则（永久）# firewall-cmd --zone=public --add-service=服务名称 --permanent# firewall-cmd --reload# 根据端口号添加规则（永久）# firewall-cmd --zone=public --add-port=服务占用的端口号 --permanent# firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：把80端口添加到firewalld防火墙规则中，要求永久生效</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># firewall-cmd --zone=public --add-port=80/tcp --permanent# firewall-cmd --reload# firewall-cmd --list-all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、Linux中的计划任务"><a href="#二、Linux中的计划任务" class="headerlink" title="二、Linux中的计划任务"></a>二、Linux中的计划任务</h1><h2 id="1、什么是计划任务"><a href="#1、什么是计划任务" class="headerlink" title="1、什么是计划任务"></a>1、什么是计划任务</h2><p>作用：操作系统不可能24 小时都有人在操作，有些时候想在指定的时间点去执行任务（例如：每天凌晨 2 点去重新启动httpd=&gt;阿帕奇），此时不可能真有人每天夜里 2 点去执行命令，这就可以交给计划任务程序去执行操作了。</p><blockquote><p>在指定的时间执行指定的操作！</p></blockquote><h2 id="2、Windows中计划任务"><a href="#2、Windows中计划任务" class="headerlink" title="2、Windows中计划任务"></a>2、Windows中计划任务</h2><p>开始 =&gt; 控制面板=&gt; 管理工具</p><blockquote><p>Windows10 =&gt; Windows键  +  X</p></blockquote><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323155756266.png" alt="image-20200323155756266"></p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323155841596.png" alt="image-20200323155841596"></p><p>案例：在Windows中创建一个计划任务</p><p>第一步：创建基本任务</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323155948453.png" alt="image-20200323155948453"></p><p>第二步：设置计划任务名称</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160038098.png" alt="image-20200323160038098"></p><p>第三步：创建任务触发器（什么时间触发这个任务）</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160124406.png" alt="image-20200323160124406"></p><p>第四步：设置具体的时间</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160210033.png" alt="image-20200323160210033"></p><p>第五步：可以做的工作</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160240174.png" alt="image-20200323160240174"></p><p>第六步：设置要启动的程序</p><p> <img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323160326102.png" alt="image-20200323160326102"></p><h2 id="3、Linux中的计划任务"><a href="#3、Linux中的计划任务" class="headerlink" title="3、Linux中的计划任务"></a>3、Linux中的计划任务</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab [选项]-l ：list，显示目前已经设置的计划任务-e ：使用vim编辑器编辑计划任务的文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：显示当前账号下的计划任务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab -lno crontab for root =&gt; root账号下没有创建计划任务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：编写计划任务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab -e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、计划任务的编辑"><a href="#4、计划任务的编辑" class="headerlink" title="4、计划任务的编辑"></a>4、计划任务的编辑</h2><p>crontab -e进入计划任务编辑文件</p><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323162534378.png" alt="image-20200323162534378"></p><p>打开计划任务编辑文件后，可以在此文件中编写我们自定义的计划任务：</p><p>==计划任务的规则语法格式，以行为单位，一行则为一个计划==</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">分  时  日  月  周  要执行的命令（要求必须使用命令的完整路径，可以使用which查看）取值范围（常识）：分：0~59时：0~23日：1~31月：1~12周：0~7，0 和 7 表示星期天四个符号：*：表示取值范围中的每一个数字-：做连续区间表达式的，要想表示1~7，则可以写成：1-7/：表示每多少个，例如：想每 10 分钟一次，则可以在分的位置写：*/10,：表示多个取值，比如想在 1 点，2 点 6 点执行，则可以在时的位置写：1,2,6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%B3%BB%E7%BB%9F%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1.assets/image-20200323163957324.png" alt="image-20200323163957324"></p><h2 id="5、几个小案例"><a href="#5、几个小案例" class="headerlink" title="5、几个小案例"></a>5、几个小案例</h2><p>问题1：每月1、10、22 日的4:45 重启network 服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一步：定制格式分  时  日      月   周 /usr/bin/systemctl restart network第二步：定制时间45  4  1,10,22  *   *  /usr/bin/systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>问题2：每周六、周日的1:10 重启network 服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一步：定制格式分 时 日 月 周 /usr/bin/systemctl restart network第二步：定制时间10 1  * *  6,7 /usr/bin/systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>问题3：每天18:00 至23:00 之间每隔30 分钟重启network 服务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一步：定制格式分 时 日 月 周 /usr/bin/systemctl restart network第二步：定制时间*/30 18-23 * * * /usr/bin/systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>问题4：每隔两天的上午8 点到11 点的第3 和第15 分钟执行一次重启</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一步：定制格式分 时 日 月 周 /usr/sbin/reboot第二步：定制时间3,15  8-11 */2 * * /usr/sbin/reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：每1 分钟往 root 家目录中的 readme.txt 中输一个1，为了看到效果使用追加输出【输出使用echo 命令，语法：# echo 输出的内容】</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># crontab -e* * * * * /usr/bin/echo 1 &gt;&gt; /root/readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>提示：为了看到计划任务的效果，你可以单独开一个选项卡，使用tail  -f  /root/readme.txt</p><h2 id="6、计划任务"><a href="#6、计划任务" class="headerlink" title="6、计划任务"></a>6、计划任务</h2><p>常见的一个操作：定时备份（定时把数据库中的数据导出到某个文件中）</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux计划任务以及进程检测与控制</title>
      <link href="/2023/12/23/linux-ji-hua-ren-wu-yi-ji-jin-cheng-jian-ce-yu-kong-zhi/"/>
      <url>/2023/12/23/linux-ji-hua-ren-wu-yi-ji-jin-cheng-jian-ce-yu-kong-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux计划任务以及进程检测与控制"><a href="#Linux计划任务以及进程检测与控制" class="headerlink" title="Linux计划任务以及进程检测与控制"></a>Linux计划任务以及进程检测与控制</h1><h1 id="一、Linux计划任务"><a href="#一、Linux计划任务" class="headerlink" title="一、Linux计划任务"></a>一、Linux计划任务</h1><h2 id="1、计划任务权限"><a href="#1、计划任务权限" class="headerlink" title="1、计划任务权限"></a>1、计划任务权限</h2><h3 id="☆-黑名单"><a href="#☆-黑名单" class="headerlink" title="☆ 黑名单"></a>☆ 黑名单</h3><p>crontab是任何用户都可以创建的计划任务，但是超级管理员可以通过配置来设置某些用户不允许设置计划任务 。</p><p>提出问题：如果我们想限定某个用户（如itheima）使用计划任务，如何处理呢？</p><p>答：可以使用计划任务的黑名单，黑名单文件路径 =&gt; ==/etc/cron.deny==文件</p><p>案例：把普通账号itheima加入到cron.deny黑名单中，禁止其创建计划任务</p><p>第一步：切换到超级管理员root</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：使用vim打开/etc/cron.deny文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/cron.deny<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三步：把你需要禁止的用户名单，加入此文件（如itheima）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">itheima<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>切换到itheima账号，测试是否可以使用crontab命令</p><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324095412933.png" alt="image-20200324095412933"></p><h3 id="☆-白名单"><a href="#☆-白名单" class="headerlink" title="☆ 白名单"></a>☆ 白名单</h3><p>在Linux的计划任务中，除了拥有黑名单以外，还有白名单。作用：允许哪些用户使用计划任务。</p><p>白名单文件的路径 =&gt; ==/etc/cron.allow==，但是要特别注意，此文件需要手工创建。</p><blockquote><p>注意：白名单优先级高于黑名单，如果一个用户同时存在两个名单文件中，则会被默认允许创建计划任务。</p></blockquote><h2 id="2、查看计划任务的保存文件"><a href="#2、查看计划任务的保存文件" class="headerlink" title="2、查看计划任务的保存文件"></a>2、查看计划任务的保存文件</h2><p>问题：计划任务文件具体保存在哪里呢？</p><p>答：<code>/var/spool/cron/用户名称</code>，如果使用root用户编辑计划任务，则用户文件名为root</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ll /var/spool/crontotal 4-rw-------. 1 itheima itheima  0 Mar 24 09:50 itheima-rw-------. 1 root    root    40 Mar 24 10:21 root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、计划任务的日志程序"><a href="#3、计划任务的日志程序" class="headerlink" title="3、计划任务的日志程序"></a>3、计划任务的日志程序</h2><p>问题：在实际应用中，我们如何查看定时任务运行情况？</p><p>答：通过计划任务日志，日志文件位于<code>/var/log/cron</code></p><p>案例：演示计划任务的日志程序</p><p>第一步：使用root账号创建一个计划任务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - root# crontab -e* * * * * echo 1 &gt;&gt; ~/readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：使用tail -f命令监控/var/log/cron日志程序</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail -f /var/log/cron<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、扩展内容：at命令"><a href="#4、扩展内容：at命令" class="headerlink" title="4、扩展内容：at命令"></a>4、扩展内容：at命令</h2><p>在Linux系统下，有两个命令可以实现计划任务：crontab与at（第三方需要额外安装）</p><p>crontab ：每天定时执行计划任务（最小单元分钟）</p><p>at ：一次性定时执行任务</p><h3 id="☆-安装at命令"><a href="#☆-安装at命令" class="headerlink" title="☆ 安装at命令"></a>☆ 安装at命令</h3><p>CentOS7自带，其他版本可能需要手工安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install at -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-启动底层服务"><a href="#☆-启动底层服务" class="headerlink" title="☆ 启动底层服务"></a>☆ 启动底层服务</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start atd# systemctl enable atd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>atd = at + d = at命令 + daemon缩写</p></blockquote><h3 id="☆-案例演示"><a href="#☆-案例演示" class="headerlink" title="☆ 案例演示"></a>☆ 案例演示</h3><p>案例1：三天后下午5点执行/bin/ls</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># at 5pm+3 daysat&gt;/bin/ls &gt;/root/readme.txtat&gt;按Ctrl+D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>am = 上午、pm = 下午、3 days = 3天</p></blockquote><p>案例2：明天17点，输出时间到指定的文件中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># at 17:00 tomorrowat&gt;date&gt;/root/readme.txtat&gt;按Ctrl+D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>tomorrow = 明天</p></blockquote><p>案例3：使用atq查看没有执行的计划任务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># atq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>atq = at + q = at命令 + query查询</p></blockquote><p>案例4：删除指定的计划任务</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># atq# atrm 任务号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>atrm = at + rm = at命令 + remove移除</p></blockquote><h1 id="二、Linux进程与程序"><a href="#二、Linux进程与程序" class="headerlink" title="二、Linux进程与程序"></a>二、Linux进程与程序</h1><h2 id="1、了解一下进程与程序的关系"><a href="#1、了解一下进程与程序的关系" class="headerlink" title="1、了解一下进程与程序的关系"></a>1、了解一下进程与程序的关系</h2><p>​        <strong>进程</strong>是正在执行的一个程序或命令，每个进程都是一个运行的实体，并占用一定的系统资源。<strong>程序</strong>是人使用计算机语言编写的可以实现特定目标或解决特定问题的代码集合。</p><p>​        简单来说，程序是人使用计算机语言编写的，可以实现一定功能，并且可以执行的代码集合。进程是正在执行中的程序。</p><p><strong>举例</strong>：谷歌浏览器是一个程序，当我们打开谷歌浏览器，就会在系统中看到一个浏览器的进程，当程序被执行时，程序的代码都会被加载入内存，操作系统给这个进程分配一个 ID，称为 <strong>PID</strong>（进程 ID）。我们打开多个谷歌浏览器，就有多个浏览器子进程，但是这些进程使用的程序，都是chrome</p><blockquote><p>PID = Process ID = 进程编号</p></blockquote><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324113209223.png" alt="image-20200324113209223"></p><h2 id="2、Linux下的进程管理工作"><a href="#2、Linux下的进程管理工作" class="headerlink" title="2、Linux下的进程管理工作"></a>2、Linux下的进程管理工作</h2><p>进程查看，通过查看，判断健康状态</p><p>进程终止</p><p>进程优先级控制</p><h1 id="三、Linux下进程管理命令"><a href="#三、Linux下进程管理命令" class="headerlink" title="三、Linux下进程管理命令"></a>三、Linux下进程管理命令</h1><h2 id="1、任务背景"><a href="#1、任务背景" class="headerlink" title="1、任务背景"></a>1、任务背景</h2><p>工作场景：</p><p>​        小黑入职到一家公司，接到的第一项任务，就是监控生产服务器的性能，提到服务器性能，我们首先想到的就是CPU，内存和磁盘。</p><h2 id="2、使用top命令动态监测CPU信息"><a href="#2、使用top命令动态监测CPU信息" class="headerlink" title="2、使用top命令动态监测CPU信息"></a>2、使用top命令动态监测CPU信息</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># top<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324114201114.png" alt="image-20200324114201114"></p><h2 id="3、系统的整体情况"><a href="#3、系统的整体情况" class="headerlink" title="3、系统的整体情况"></a>3、系统的整体情况</h2><h3 id="☆-第一行"><a href="#☆-第一行" class="headerlink" title="☆ 第一行"></a>☆ 第一行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324114427942.png" alt="image-20200324114427942"></p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>10:12:28</td><td>系统当前时间</td></tr><tr><td>up 13:05</td><td>系统的运行时间.本机己经运行 13 小时 05 分钟</td></tr><tr><td>3 users</td><td>当前登录了三个用户</td></tr><tr><td>load average: 0.00,0.01，0.05</td><td>系统在之前 1 分钟、5 分钟、15 分钟的平均负载。如果 CPU 是单核的，则这个数值超过 1 就是高负载：如果 CPU 是四核的，则这个数值超过 4 就是高负载</td></tr></tbody></table><h3 id="☆-第二行"><a href="#☆-第二行" class="headerlink" title="☆ 第二行"></a>☆ 第二行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324115718442.png" alt="image-20200324115718442"></p><table><thead><tr><th>Tasks:   230 total</th><th>系统中的进程总数</th></tr></thead><tbody><tr><td>1 running</td><td>正在运行的进程数</td></tr><tr><td>229 sleeping</td><td>睡眠的进程数</td></tr><tr><td>0 stopped</td><td>正在停止的进程数</td></tr><tr><td>0 zombie</td><td>僵尸进程数。如果不是   0，则需要手工检查僵尸进程</td></tr></tbody></table><h3 id="☆-第三行"><a href="#☆-第三行" class="headerlink" title="☆ 第三行"></a>☆ 第三行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324142002240.png" alt="image-20200324142002240"></p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Cpu(s): 0.1 %us</td><td>用户模式占用的   CPU 百分比</td></tr><tr><td>0.1%sy</td><td>系统模式占用的   CPU 百分比</td></tr><tr><td>0.0%ni</td><td>改变过优先级的用户进程占用的   CPU 百分比</td></tr><tr><td>99.7%id</td><td>idle缩写，空闲   CPU 占用的 CPU 百分比</td></tr><tr><td>0.1%wa</td><td>等待输入/输出的进程占用的   CPU 百分比</td></tr><tr><td>0.0%hi</td><td>硬中断请求服务占用的   CPU 百分比</td></tr><tr><td>0.1%si</td><td>软中断请求服务占用的   CPU 百分比</td></tr><tr><td>0.0%st</td><td>st（steal   time）意为虚拟时间百分比，就是当有虚拟机时，虚拟 CPU 等待实际 CPU 的时间百分比</td></tr></tbody></table><h4 id="问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？"><a href="#问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？" class="headerlink" title="问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？"></a>问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？</h4><p>答：交换快捷键 “1”</p><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324142144911.png" alt="image-20200324142144911"></p><blockquote><p>CPU负载测试 =&gt;  cat  /dev/urandom |md5sum</p></blockquote><h3 id="☆-第四行"><a href="#☆-第四行" class="headerlink" title="☆ 第四行"></a>☆ 第四行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324143340302.png" alt="image-20200324143340302"></p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Mem: 1863252 total</td><td>物理内存的总量，单位为KB</td></tr><tr><td>829960 used</td><td>己经使用的物理内存数量</td></tr><tr><td>68352 free</td><td>空闲的物理内存数量。我们使用的是虚拟机，共分配了 628MB内存，所以只有53MB的空闲内存</td></tr><tr><td>96490 buff/cache</td><td>作为缓冲的内存数量</td></tr></tbody></table><blockquote><p>扩展：真正剩余内存 = free + buff/cache，真正使用内存 = used - buff/cache</p></blockquote><h3 id="☆-第五行"><a href="#☆-第五行" class="headerlink" title="☆ 第五行"></a>☆ 第五行</h3><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324144347040.png" alt="image-20200324144347040"></p><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Swap: 2097148 total</td><td>交换分区（虚拟内存）的总大小</td></tr><tr><td>3336 used</td><td>已经使用的交换分区的大小</td></tr><tr><td>2093812 free</td><td>空闲交换分区的大小</td></tr><tr><td>622420 avail Mem</td><td>可用内存</td></tr></tbody></table><p> 在Linux操作系统分区时，最少需要3个分区：</p><p>① /boot分区 ： 系统分区</p><p>② swap交换分区 ：一般情况下为内存的1~2倍，但是尽量不要超过2G</p><p>③ /分区 ：根分区，所有文件都存放于此</p><blockquote><p>swap分区：就是当计算机的内存不足时，系统会自动从硬盘中划出一块区域充当内存使用。</p></blockquote><p>​       我们通过 top 命令的整体信息部分，就可以判断服务器的健康状态。如果 1 分钟、5 分钟、15 分钟的平均负载高于CPU核数，说明系统压力较大。如果物理内存的空闲内存过小，则也证明系统压力较大。</p><p>问题：根据以上信息，目前我们的系统压力如何？</p><p>答：看CPU负载及内存的使用情况</p><p>问题：如果我们发现CPU负载过大，接下来怎么办？</p><p>答：如果1分钟、5分钟以及15分钟全部超过CPU的总核心数（必须引起警觉），这个时候就要查看底部的进程信息了。</p><blockquote><p>经验之谈：如果一个总核数=8核心的CPU，理论上平均负载达到16，也还可以坚持很长一段时间。</p></blockquote><h2 id="4、系统的进程信息"><a href="#4、系统的进程信息" class="headerlink" title="4、系统的进程信息"></a>4、系统的进程信息</h2><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324151820219.png" alt="image-20200324151820219"></p><table><thead><tr><th>PID</th><th>进程的 ID。</th></tr></thead><tbody><tr><td>USER</td><td>该进程所属的用户。</td></tr><tr><td>PR</td><td>优先级，数值越小优先级越高。</td></tr><tr><td>NI</td><td>NICE优先级，数值越小优先级越高，取值范围-20到19，默认都是0</td></tr><tr><td>VIRT</td><td>该进程使用的虚拟内存的大小，单位为 KB。</td></tr><tr><td>RES</td><td>该进程使用的物理内存的大小，单位为 KB。</td></tr><tr><td>SHR</td><td>共享内存大小，单位为 KB。计算一个进程实际使用的内存 = 常驻内存（RES）- 共享内存（SHR）</td></tr><tr><td>S</td><td>进程状态。其中S 表示睡眠，R 表示运行</td></tr><tr><td>%CPU</td><td>该进程占用 CPU 的百分比。</td></tr><tr><td>%MEM</td><td>该进程占用内存的百分比。</td></tr><tr><td>TIME+</td><td>该进程共占用的 CPU 时间。</td></tr><tr><td>COMMAND</td><td>进程名</td></tr></tbody></table><h4 id="问题：如果我们发现CPU负载过大，接下来怎么办？"><a href="#问题：如果我们发现CPU负载过大，接下来怎么办？" class="headerlink" title="问题：如果我们发现CPU负载过大，接下来怎么办？"></a>问题：如果我们发现CPU负载过大，接下来怎么办？</h4><p>答：查看占用CPU最多的进程</p><h4 id="问题：如何查看占用CPU最多的进程？"><a href="#问题：如何查看占用CPU最多的进程？" class="headerlink" title="问题：如何查看占用CPU最多的进程？"></a>问题：如何查看占用CPU最多的进程？</h4><p>答：交互操作快捷键P，P（大写）：，表示将结果按照CPU 使用率从高到低进行降序排列</p><h4 id="问题：如果我们发现内存可用量很小，接下来怎么办？"><a href="#问题：如果我们发现内存可用量很小，接下来怎么办？" class="headerlink" title="问题：如果我们发现内存可用量很小，接下来怎么办？"></a>问题：如果我们发现内存可用量很小，接下来怎么办？</h4><p>答：查看占用内存最多的进程，使用交互快捷键M（大写）：表示将结果按照内存（MEM）从高到低进行降序排列</p><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324154216736.png" alt="image-20200324154216736"></p><h4 id="问题：当我们查看完系统状态，需要做什么？"><a href="#问题：当我们查看完系统状态，需要做什么？" class="headerlink" title="问题：当我们查看完系统状态，需要做什么？"></a>问题：当我们查看完系统状态，需要做什么？</h4><p>答：退出，使用q，按键盘上的q，就会回到#提示符的状态。</p><h2 id="5、free查看内存使用情况"><a href="#5、free查看内存使用情况" class="headerlink" title="5、free查看内存使用情况"></a>5、free查看内存使用情况</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># free [选项]  1GB = 1024MB  1MB = 1024KB选项说明：-m : 以MB的形式显示内存大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：显示计算机的内存使用情况</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># free -m<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    和Centos6相比，buffer和cached被合成一组，加入了一个available。</p><p>​    关于此available，即系统可用内存，用户不需要去计算buffer/cache，即可以看到还有多少内存可用，更加简单直观</p><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324155922424.png" alt="image-20200324155922424"></p><h2 id="6、df查看磁盘剩余空间"><a href="#6、df查看磁盘剩余空间" class="headerlink" title="6、df查看磁盘剩余空间"></a>6、df查看磁盘剩余空间</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># df [选项]-h ：以较高的可读性显示磁盘剩余空间大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>df = disk free = 磁盘 剩余</p></blockquote><p>这几列依次是：</p><table><thead><tr><th>Filesystem</th><th>磁盘名称</th></tr></thead><tbody><tr><td>Size</td><td>总大小</td></tr><tr><td>Used</td><td>被使用的大小</td></tr><tr><td>Avail</td><td>剩余大小</td></tr><tr><td>Use%</td><td>使用百分比</td></tr><tr><td>Mounted on</td><td>挂载路径（相当于Windows 的磁盘符）</td></tr></tbody></table><h2 id="7、ps查看系统进程信息"><a href="#7、ps查看系统进程信息" class="headerlink" title="7、ps查看系统进程信息"></a>7、ps查看系统进程信息</h2><p>top ： 动态查看系统进程的信息（每隔3s切换一次）</p><p>ps  ： 静态查看系统进程的信息（只能查询运行ps命令瞬间，系统的进程信息）</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps [选项]选项说明：-e : 等价于“-A”，表示列出全部（all）的进程-f : 表示full，显示全部的列（显示全字段）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：显示当前系统中所有进程的信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps -ef<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324162137670.png" alt="image-20200324162137670"></p><table><thead><tr><th>UID</th><th>该进程执行的用户ID</th></tr></thead><tbody><tr><td>PID</td><td>进程ID</td></tr><tr><td>PPID</td><td>该进程的父级进程ID，如果找不到，则该进程就被称之为僵尸进程（Parent Process ID）</td></tr><tr><td>C</td><td>Cpu的占用率，其形式是百分数</td></tr><tr><td>STIME</td><td>进程的启动时间</td></tr><tr><td>TTY</td><td>终端设备，发起该进程的设备识别符号，如果显示“?”则表示该进程并不是由终端设备发起</td></tr><tr><td>TIME</td><td>进程实际使用CPU的时间</td></tr><tr><td>CMD</td><td>该进程的名称或者对应的路径</td></tr></tbody></table><blockquote><p>经验之谈：我们在实际工作中使用ps命令其实主要用于查询某个进程的PID或PPID</p></blockquote><p>工作场景</p><p>​        小黑用学到的命令，发现某个进程占用CPU很高，希望进一步查看这个简称的信息。</p><p>​        ps -ef 会列出全部进程，但是我们发现进程非常多，我们很难找到自己想要看的进程。这里需要使用过滤命令grep，来过滤掉我们不需要的信息。</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">用法：ps -ef |grep 想要看到的进程名示例代码：# ps -ef |grep crond含义：查看crond进程的详细情况注意：查询结果中，如果只有一条则表示没查到对应的进程（这1 条表示刚才ps 指令的自身）。只有查到的结果多余1 条，才表示有对应的进程。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：查询crond的进程信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps -ef |grep crondroot       7102      1  0 Mar23 ?        00:00:04 /usr/sbin/crond -nroot      24752  12881  0 16:34 pts/2    00:00:00 grep --color=auto crond<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>问题：以上信息只有第一行是crond的进程，第二行，实际是管道命令发起时，grep所启动的进程，如何去掉？</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps -ef |grep crond |grep -v "grep"root       7102      1  0 Mar23 ?        00:00:04 /usr/sbin/crond -n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>grep  -v  需要去除的相关信息 ： 去除包含指定关键词的那一行</p></blockquote><p>扩展：ps  aux命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps aux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p># man ps</p><p>1   UNIX options, which may be grouped and must be preceded by a dash.     ps  -ef<br>2   BSD options, which may be grouped and must not be used with a dash. ps  aux</p></blockquote><p><img src="/../assets/blog_res/Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BB%A5%E5%8F%8A%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%8E%A7%E5%88%B6.assets/image-20200324165018806.png" alt="image-20200324165018806"></p><p>USER：该 process 属于哪个使用者账号<br>==PID ：该 process 的ID==<br>==%CPU：该 process 使用掉的 CPU 资源百分比==<br>==%MEM：该 process 所占用的物理内存百分比==<br>VSZ ：该 process 使用掉的虚拟内存量 (Kbytes)<br>RSS ：该 process 占用的固定的内存量 (Kbytes)<br>TTY ：该 process 是在那个终端机上面运作，若与终端机无关，则显示 ?，另外， tty1-tty6 是本机上面的登入者程序，若为 pts/0 等等的，则表示为由网络连接进主机的程序。<br>==STAT：该程序目前的状态，主要的状态有==<br>    R ：该程序目前正在运作，或者是可被运作<br>    S ：该程序目前正在睡眠当中 (可说是 idle 状态)，但可被某些讯号 (signal) 唤醒。<br>    T ：该程序目前正在侦测或者是停止了<br>   ==Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态==<br>START：该 process 被触发启动的时间<br>TIME ：该 process 实际使用 CPU 运作的时间<br>COMMAND：该程序的实际指令</p><h2 id="8、netstat-ss查询网络访问信息"><a href="#8、netstat-ss查询网络访问信息" class="headerlink" title="8、netstat/ss查询网络访问信息"></a>8、netstat/ss查询网络访问信息</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># netstat [选项] |grep 进程名称选项说明：-t：表示只列出tcp 协议的连接（tcp协议与udp协议）-n：表示将地址从字母组合转化成ip 地址，将协议转化成端口号来显示  10.1.1.10:80-l：表示过滤出"state（状态）"列中其值为LISTEN（监听）的连接-p：表示显示发起连接的进程pid 和进程名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：查询Web Server（httpd）服务的端口信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># netstat -tnlp |grep httpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ss -naltp |grep 进程名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：查询sshd服务的端口信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ss -naltp |grep sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>netstat与ss区别？① netstat信息比较简洁，ss更加丰富 ② ss执行效率比netstat略高一些</p></blockquote><h2 id="9、kill-killall杀死进程"><a href="#9、kill-killall杀死进程" class="headerlink" title="9、kill/killall杀死进程"></a>9、kill/killall杀死进程</h2><h3 id="☆-根据pid杀掉进程"><a href="#☆-根据pid杀掉进程" class="headerlink" title="☆ 根据pid杀掉进程"></a>☆ 根据pid杀掉进程</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">命令：kill语法：kill [信号] PID作用：kill 命令会向操作系统内核发送一个信号（多是终止信号）和目标进程的 PID，然后系统内核根据收到的信号类型，对指定进程进行相应的操作经验：kill经常结合ps命令一起使用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>kill命令用于杀死某个进程，这其实只是其一个功能。kill命令的实质是向进程发送信号</p></blockquote><p>信号种类：</p><table><thead><tr><th>信号编号</th><th>含义</th></tr></thead><tbody><tr><td>9</td><td>杀死进程，即强制结束进程。</td></tr><tr><td>15</td><td>正常结束进程，是 kill   命令的默认信号。</td></tr></tbody></table><p>案例：使用kill命令杀死crond进程</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps -ef |grep crond7102# kill 7102<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>备注：在互联网中，经常看到kill  -9  进程PID，强制杀死某个进程，kill -9 pid</p></blockquote><h3 id="☆-根据进程名称杀掉进程"><a href="#☆-根据进程名称杀掉进程" class="headerlink" title="☆ 根据进程名称杀掉进程"></a>☆ 根据进程名称杀掉进程</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># killall [信号编号] 进程名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：使用killall命令杀死crond进程</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># killall crond<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：使用killall命令杀死httpd进程</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># killall httpd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux的权限管理操作</title>
      <link href="/2023/12/23/linux-de-quan-xian-guan-li-cao-zuo/"/>
      <url>/2023/12/23/linux-de-quan-xian-guan-li-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux的权限管理操作"><a href="#Linux的权限管理操作" class="headerlink" title="Linux的权限管理操作"></a>Linux的权限管理操作</h1><h1 id="一、权限概述"><a href="#一、权限概述" class="headerlink" title="一、权限概述"></a>一、权限概述</h1><h2 id="1、权限的基本概念"><a href="#1、权限的基本概念" class="headerlink" title="1、权限的基本概念"></a>1、权限的基本概念</h2><p>在多用户计算机系统的管理中，权限是指某个特定的用户具有特定的系统资源使用权利。</p><p>在Linux 中分别有读、写、执行权限：</p><table><thead><tr><th></th><th>权限针对文件</th><th>权限针对目录</th></tr></thead><tbody><tr><td>读r</td><td>表示可以查看文件内容；cat</td><td>表示可以(ls)查看目录中存在的文件名称</td></tr><tr><td>写w</td><td>表示可以更改文件的内容；vim 修改，保存退出</td><td>表示是否可以删除目录中的子文件或者新建子目录(rm/touch/mkdir)</td></tr><tr><td>执行x</td><td>表示是否可以开启文件当中记录的程序,一般指二进制文件(.sh) =&gt; 绿色</td><td>表示是否可以进入目录中(cd)</td></tr></tbody></table><blockquote><p>注：一般给予目录读权限时，也将会给其执行权限，属于“套餐”组合</p><p>可读权限 read =&gt; r（简写），可写权限 write =&gt; w（简写），可执行权限 excute =&gt; x（简写）</p></blockquote><h2 id="2、为什么要设置权限"><a href="#2、为什么要设置权限" class="headerlink" title="2、为什么要设置权限"></a>2、为什么要设置权限</h2><p>1）服务器中的数据价值</p><p>2）员工的工作职责和分工不同</p><p>3）应对自外部的攻击(挂马)</p><p>4）内部管理的需要</p><h2 id="3、Linux用户身份类别"><a href="#3、Linux用户身份类别" class="headerlink" title="3、Linux用户身份类别"></a>3、Linux用户身份类别</h2><p>Linux 系统一般将文件权限分为3 类：</p><p>read（读）</p><p>write（写）</p><p>execute（执行）</p><p>**==谁==**对文件有读，写，执行的权限呢？ 答：针对三大类用户</p><h2 id="4、user文件拥有者"><a href="#4、user文件拥有者" class="headerlink" title="4、user文件拥有者"></a>4、user文件拥有者</h2><p>文件的拥有者：默认情况下，谁创建了这个文件谁就是文件的拥有者。文件的拥有者可以进行更改并不是一成不变的。</p><p>裴凯 =&gt; linux.txt，默认情况下，裴凯就是linux.txt文件的拥有者</p><h2 id="5、group文件所属组内用户"><a href="#5、group文件所属组内用户" class="headerlink" title="5、group文件所属组内用户"></a>5、group文件所属组内用户</h2><p>group所属组内用户代表与文件的所属组相同的组内用户。</p><p>比如，裴凯与罗新兴、周卓都同属于一个itheima的用户组，罗新兴和周卓就是这个文件的组内用户。</p><h2 id="6、other其他用户"><a href="#6、other其他用户" class="headerlink" title="6、other其他用户"></a>6、other其他用户</h2><p>other其他用户代表这些人既不是文件的拥有者，也不是文件所属组内的用户，我们把这些人就称之为other其他用户。</p><h2 id="7、特殊用户root"><a href="#7、特殊用户root" class="headerlink" title="7、特殊用户root"></a>7、特殊用户root</h2><p>在Linux操作系统中，root拥有最高权限（针对所有文件），所以权限设置对root账号没有效果。</p><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320110034242.png" alt="image-20200320110034242"></p><blockquote><p>在Linux系统中，三大类用户也可以拥有简写形式user(u)、group(g)、other(o)</p></blockquote><h1 id="二、普通权限管理"><a href="#二、普通权限管理" class="headerlink" title="二、普通权限管理"></a>二、普通权限管理</h1><h2 id="1、ls-l命令查看文件权限"><a href="#1、ls-l命令查看文件权限" class="headerlink" title="1、ls -l命令查看文件权限"></a>1、ls -l命令查看文件权限</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls -l或# ll<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>备注：ll命令是红帽以及CentOS系统特有的一个命令，在其他操作系统中可能并不支持</p></blockquote><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320113017121.png" alt="image-20200320113017121"></p><h2 id="2、文件类型-权限解析"><a href="#2、文件类型-权限解析" class="headerlink" title="2、文件类型+权限解析"></a>2、文件类型+权限解析</h2><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320114528433.png" alt="image-20200320114528433"></p><p>Linux一共有7种文件类型,分别如下:<br>-：普通文件<br>d：目录文件<br>l： 软链接（类似Windows的快捷方式）</p><p>(下面四种是特殊文件)<br>b：block，块设备文件（例如硬盘、光驱等）<br>p：管道文件<br>c：字符设备文件（例如猫(上网猫)等串口设备）<br>s：套接口文件/数据接口文件（例如启动一个MySql服务器时会产生一个mysql.sock文件）</p><h2 id="3、文件或文件夹权限设置（字母）"><a href="#3、文件或文件夹权限设置（字母）" class="headerlink" title="3、文件或文件夹权限设置（字母）"></a>3、文件或文件夹权限设置（字母）</h2><p>基本语法：ch = change mod简单理解权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod [选项] 权限设置 文件或目录的名称选项说明：-R ：递归设置，针对文件夹（目录）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>重点：字母设置并不难，重点看三方面</p><p>第一个：确认要给哪个身份设置权限，u、g、o、ugo(a)</p><p>第二个：确认是添加权限(+)、删除权限(-)还是赋予权限(=) </p><p>第三个：确认给这个用户针对这个文件或文件夹设置什么样的权限，r、w、x</p></blockquote><p>案例：给readme.txt文件的拥有者，增加一个可执行权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod u+x readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把readme.txt文件的拥有者的可执行权限去除</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod u-x readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：为readme.txt中的所属组内用户赋予rw权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod g=rw readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：给shop目录及其内部的文件统一添加w可写权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod -R ugo+w shop或# chomd -R a+w shop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：给shop目录设置权限，要求拥有者rwx，组内用户r-x，其他用户r-x</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod -R u=rwx,g=r-x,o=r-x shop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、文件或文件夹权限设置（数字）"><a href="#4、文件或文件夹权限设置（数字）" class="headerlink" title="4、文件或文件夹权限设置（数字）"></a>4、文件或文件夹权限设置（数字）</h2><p> 经常会在技术网站上看到类似于# chmod 777 a.txt 这样的命令，这种形式称之为==数字形式权限==。</p><p>文件<strong>权限与数字</strong>的对应关系，我们会发现<strong>没有7</strong>这个数字</p><table><thead><tr><th>权限</th><th>对应数字</th><th align="left">意义</th></tr></thead><tbody><tr><td>r</td><td>4</td><td align="left">可读</td></tr><tr><td>w</td><td>2</td><td align="left">可写</td></tr><tr><td>x</td><td>1</td><td align="left">可执行</td></tr><tr><td>-</td><td>0</td><td align="left">没有权限</td></tr></tbody></table><p>777 ：</p><p>第一个数字7，代表文件拥有者权限</p><p>第二个数字7，代表文件所属组内用户权限</p><p>第三个数字7，代表其他用户权限</p><p>rwx = 4 + 2 + 1 = 7</p><p>rw = 4 + 2 = 6</p><p>rx = 4 + 1 = 5</p><p>案例：给readme.txt设置权限，文件的拥有者rwx，组内用户rw，其他用户r</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">rwx = 7rw = 6r = 4# chmod 764 readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：给shop文件夹设置777权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod -R 777 shop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、奇葩权限"><a href="#5、奇葩权限" class="headerlink" title="5、奇葩权限"></a>5、奇葩权限</h2><p>问题：用超级管理员设置文档的权限命令是# chmod  -R  731 shop，请问这个命令有没有什么不合理的地方？</p><p>答：731权限进行拆解</p><p>7 = 4 + 2 + 1 = rwx</p><p>3 = 2 + 1 = wx</p><p>1 = x</p><p>问题在权限731中的3权限，3表示写+执行权限，但是写又必须需要能打开之后才可以写，因此必须需要具备可读权限，因此此权限设置不合理。</p><p>注：实际工作中，各位小伙伴在设置权限时一定不要设置这种”奇葩权限”，一般情况下，单独出现2、3的权限数字一般都是有问题的权限。</p><h2 id="6、练习题"><a href="#6、练习题" class="headerlink" title="6、练习题"></a>6、练习题</h2><p>1）使用root 用户设置文件夹/root/shop 的权限为：属主全部权限，属组拥有读和执行权限，其他用户没有权限，请使用数字权限的形式设置</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">rwx=7,rx=4+1=5,0# chmod -R 750 /root/shop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2）请置文件/root/readme.txt 的权限，权限要求为：</p><p>​        属主拥有<strong>全部</strong>权限，属组要求可以<strong>读写</strong>，其他用户<strong>只读</strong>，要求使用数字形式；</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">rwx=7,rw=4+2=6,r=4# chmod 764 /root/readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3）请设置/root/email.doc权限，权限要求只有属主可以读写，除此之外任何人没有权限；</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">rw=6,0,0# chmod 600 /root/email.doc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7、特殊权限说明"><a href="#7、特殊权限说明" class="headerlink" title="7、特殊权限说明"></a>7、特殊权限说明</h2><p>在Linux 中，如果要删除一个文件，不是看文件有没有对应的权限，而是看文件所在的==目录是否有写权限==，如果有才可以删除（同时必须具备执行权限）。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">/shell/readme.txt我们想删除readme.txt文件，必须要对shell目录具有可写权限，否则文件无法删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="三、文件拥有者以及文件所属组设置"><a href="#三、文件拥有者以及文件所属组设置" class="headerlink" title="三、文件拥有者以及文件所属组设置"></a>三、文件拥有者以及文件所属组设置</h1><p>文件拥有者：属主</p><p>文件所属组：属组</p><h2 id="1、什么是属主与属组"><a href="#1、什么是属主与属组" class="headerlink" title="1、什么是属主与属组"></a>1、什么是属主与属组</h2><p>属主：所属的用户，文档所有者，这是一个账户，这是一个人</p><p>属组：所属的用户组，这是一个组</p><h2 id="2、文件拥有者与所属组的查看"><a href="#2、文件拥有者与所属组的查看" class="headerlink" title="2、文件拥有者与所属组的查看"></a>2、文件拥有者与所属组的查看</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls -l或# ll<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320150210026.png" alt="image-20200320150210026"></p><h2 id="3、了解文件的拥有者与文件所属组来源"><a href="#3、了解文件的拥有者与文件所属组来源" class="headerlink" title="3、了解文件的拥有者与文件所属组来源"></a>3、了解文件的拥有者与文件所属组来源</h2><p>在Linux操作系统中，每个文件都是由Linux系统用户创建的。</p><p>在Linux操作系统中，每个用户都具有一个用户名称以及一个主组的概念</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - itheima# touch readme.txt# ll readme.txt-rw-rw-r--. 1 itheima itheima 0 Mar 20 15:17 readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、为什么需要更改文件拥有者与所属组"><a href="#4、为什么需要更改文件拥有者与所属组" class="headerlink" title="4、为什么需要更改文件拥有者与所属组"></a>4、为什么需要更改文件拥有者与所属组</h2><p>一个财务表格，以前由胡一菲进行更新，她有读写权限，现在胡一菲去阿拉善沙漠找曾老师了，改权限没用，需要把属主改成诸葛大力，由诸葛大力更新。</p><h2 id="5、文件拥有者设置"><a href="#5、文件拥有者设置" class="headerlink" title="5、文件拥有者设置"></a>5、文件拥有者设置</h2><p>基本语法：ch = change ，own = owner</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown [选项] 新文件拥有者名称 文件名称选项说明：-R ：代表递归修改，主要针对文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把/root/readme.txt文件的拥有者更改为itheima</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown itheima /root/readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把/root/shop文件夹的拥有者更改为linuxuser</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown -R linuxuser /root/shop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6、文件所属组的设置"><a href="#6、文件所属组的设置" class="headerlink" title="6、文件所属组的设置"></a>6、文件所属组的设置</h2><p>基本语法： ch = change , group，chgrp</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chgrp [选项] 新文件所属组名称 文件名称选项说明：-R : 代表递归修改，主要针对文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把/root/readme.txt文件的所属组名称更改为itheima</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chgrp itheima /root/readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把/root/shop文件夹的所属组名称也更改为itheima</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chgrp -R itheima /root/shop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7、chown同时修改属主与属组"><a href="#7、chown同时修改属主与属组" class="headerlink" title="7、chown同时修改属主与属组"></a>7、chown同时修改属主与属组</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown [选项] 文件拥有者名称:文件所属组名称 文件名称或# chown [选项] 文件拥有者名称.文件所属组名称 文件名称选项说明：-R : 代表递归修改，主要针对文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：readme.txt文件的拥有者与所属组同时更改为root</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown root:root readme.txt或# chown root.root readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：更改shop目录的拥有者以及所属组为root</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chown -R root:root shop或# chown -R root.root shop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="四、特殊权限（扩展）"><a href="#四、特殊权限（扩展）" class="headerlink" title="四、特殊权限（扩展）"></a>四、特殊权限（扩展）</h1><h2 id="1、设置位S（针对二进制文件）"><a href="#1、设置位S（针对二进制文件）" class="headerlink" title="1、设置位S（针对二进制文件）"></a>1、设置位S（针对二进制文件）</h2><h3 id="☆-设置位S的作用"><a href="#☆-设置位S的作用" class="headerlink" title="☆ 设置位S的作用"></a>☆ 设置位S的作用</h3><p>作用：为了让一般使用者临时具有该文件所属主/组的执行权限。</p><p>主要针对二进制文件（命令）</p><p>例如：/usr/bin/passwd在执行它的时候需要去修改/etc/passwd和/etc/shadow等文件，这些文件除了root外，其他用户都没有写权限，但是又为了能让普通用户修改自己的密码，该怎么办呢？</p><blockquote><p>whereis命令，主要功能就是查询某个命令所在的路径，基本语法 =&gt; whereis  passwd</p></blockquote><p>itheima普通账号 =&gt; 执行/usr/bin/passwd =&gt; 修改/etc/shadow文件（存放用户的密码）</p><blockquote><p>/etc/shadow文件比较特殊，其权限为— — —（000），除root外，其他人都没有权限</p></blockquote><h3 id="☆-去除S位权限"><a href="#☆-去除S位权限" class="headerlink" title="☆ 去除S位权限"></a>☆ 去除S位权限</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod u-s /usr/bin/passwd 或者# chmod 0755 /usr/bin/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="☆-添加S位权限"><a href="#☆-添加S位权限" class="headerlink" title="☆ 添加S位权限"></a>☆ 添加S位权限</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod u+s /usr/bin/passwd或者# chmod 4755 /usr/bin/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2、沾滞位T（针对文件夹）"><a href="#2、沾滞位T（针对文件夹）" class="headerlink" title="2、沾滞位T（针对文件夹）"></a>2、沾滞位T（针对文件夹）</h2><h3 id="☆-粘滞位作用"><a href="#☆-粘滞位作用" class="headerlink" title="☆ 粘滞位作用"></a>☆ 粘滞位作用</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod -R o+t 文件夹的名称或# chmod -R 1777 文件夹的名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>==主要功能：只允许文件的创建者和root用户删除文件（防止误删除权限位）==</p><p>案例：/tmp文件夹，拥有最高权限777，比如itheima创建了一个文件在此目录，linuxuser用户可以对其进行删除操作，这种显然不太合适。</p><p>7 = r + w + x = 可读、可写、可执行</p><p>案例：使用ls -l命令查看/tmp目录权限</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls -ld /tmp或# ll -d /tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="☆-移除粘滞位"><a href="#☆-移除粘滞位" class="headerlink" title="☆ 移除粘滞位"></a>☆ 移除粘滞位</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod -R o-t /tmp或# chmod -R 0777 /tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="☆-添加粘滞位"><a href="#☆-添加粘滞位" class="headerlink" title="☆ 添加粘滞位"></a>☆ 添加粘滞位</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># chmod -R o+t /tmp或# chmod -R 1777 /tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="五、ACL访问控制"><a href="#五、ACL访问控制" class="headerlink" title="五、ACL访问控制"></a>五、ACL访问控制</h1><h2 id="1、为什么需要ACL"><a href="#1、为什么需要ACL" class="headerlink" title="1、为什么需要ACL"></a>1、为什么需要ACL</h2><p><img src="/../assets/blog_res/Linux%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E6%93%8D%E4%BD%9C.assets/image-20200320164900337.png" alt="image-20200320164900337"></p><p>ACL，是 Access Control List（访问控制列表）的缩写，在 Linux 系统中， ACL 可实现对单一用户设定访问文件的权限。</p><blockquote><p>扩展：ACL权限可以针对某个用户，也可以针对某个组。ACL优势就是让权限控制更加的精准。</p></blockquote><h2 id="2、获取某个文件的ACL权限"><a href="#2、获取某个文件的ACL权限" class="headerlink" title="2、获取某个文件的ACL权限"></a>2、获取某个文件的ACL权限</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># getfacl 文件或目录名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、给某个文件设置ACL权限"><a href="#3、给某个文件设置ACL权限" class="headerlink" title="3、给某个文件设置ACL权限"></a>3、给某个文件设置ACL权限</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl [选项] 文件或目录名称选项说明：-m ： 修改acl策略-x ： 去掉某个用户或者某个组的权限-b ： 删除所有的acl策略-R  ：递归,通常用在文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：针对readme.txt文件给linuxuser设置一个权限=&gt;可读</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -m u:linuxuser:r readme.txt=&gt;  针对某个用户开通ACL权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：针对shop文件夹给itheima组设置一个权限=&gt;可读可写权限rw</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -R -m g:itheima:rw shop=&gt; 针对某个用户组开通ACL权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把linuxuser用户权限从readme.txt中移除掉</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -x u:linuxuser readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把itheima用户组权限从shop中移除掉</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -x -R g:itheima shop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把readme.txt文件中的所有ACL权限全部移除</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># setfacl -b readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="六、umask（了解，不要更改！！！）"><a href="#六、umask（了解，不要更改！！！）" class="headerlink" title="六、umask（了解，不要更改！！！）"></a>六、umask（了解，不要更改！！！）</h1><h2 id="1、什么是umask"><a href="#1、什么是umask" class="headerlink" title="1、什么是umask"></a>1、什么是umask</h2><p>umask表示创建文件时的默认权限（即创建文件时不需要设置而天生的权限）</p><p> root用户下，touch a ，文件a的默认权限是644</p><p> 普通用户下，touch b ，文件b的默认权限是664 </p><p>644和664我们并没有设置，其中的关键因素就是<strong>umask</strong></p><blockquote><p>扩展：实际上我们创建一个普通文件最高权限666。而创建一个文件夹其最高权限777</p><p>实际文件权限 = 最高权限 - umask的值</p></blockquote><h2 id="2、获取用户的umask值"><a href="#2、获取用户的umask值" class="headerlink" title="2、获取用户的umask值"></a>2、获取用户的umask值</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># umask0022注：0022中第一位0代表特殊权限位，可以不设置。umask的默认值，在root和普通用户下是不一样的，分别是022和002<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>为什么文件在root下创建就是644，在itheima下就是664</p><p>root : 666 - 022 = 644</p><p>itheima：666 - 002 = 664</p><h2 id="3、修改umask值（一定不要改）"><a href="#3、修改umask值（一定不要改）" class="headerlink" title="3、修改umask值（一定不要改）"></a>3、修改umask值（一定不要改）</h2><h3 id="☆-临时修改（重启后失效）"><a href="#☆-临时修改（重启后失效）" class="headerlink" title="☆ 临时修改（重启后失效）"></a>☆ 临时修改（重启后失效）</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># umask 002777 - 002 = 775<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-永久修改"><a href="#☆-永久修改" class="headerlink" title="☆ 永久修改"></a>☆ 永久修改</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim ~/.bashrc ① 在文件末尾添加umask 002② 保存退出 ③ su切换用户则立即生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件管理与用户管理</title>
      <link href="/2023/12/23/linux-wen-jian-guan-li-yu-yong-hu-guan-li/"/>
      <url>/2023/12/23/linux-wen-jian-guan-li-yu-yong-hu-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件管理与用户管理"><a href="#Linux文件管理与用户管理" class="headerlink" title="Linux文件管理与用户管理"></a>Linux文件管理与用户管理</h1><h1 id="一、查看文件内容"><a href="#一、查看文件内容" class="headerlink" title="一、查看文件内容"></a>一、查看文件内容</h1><h2 id="1、回顾之前的命令"><a href="#1、回顾之前的命令" class="headerlink" title="1、回顾之前的命令"></a>1、回顾之前的命令</h2><p>cat命令、tac命令、head命令、tail命令、扩展：tail  -f动态查看一个文件的内容</p><h2 id="2、more分屏显示文件内容（了解）"><a href="#2、more分屏显示文件内容（了解）" class="headerlink" title="2、more分屏显示文件内容（了解）"></a>2、more分屏显示文件内容（了解）</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># more 文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>特别注意：more命令在加载文件时并不是一点一点进行加载，而是打开文件时就已经把文件的全部内容加载到内存中了。如果打开文件较大，则可能会出现卡顿情况。</p></blockquote><p>more命令拥有一些交互功能，可以通过快捷键进行操作这个more的阅读器。</p><table><thead><tr><th>回车键</th><th>向下移动一行。</th></tr></thead><tbody><tr><td>d</td><td>向下移动半页。</td></tr><tr><td>空格键</td><td>向下移动一页。</td></tr><tr><td>b</td><td>向上移动一页，后期引入功能，早期more只能前进不能后退</td></tr><tr><td>q</td><td>退出   more。</td></tr></tbody></table><blockquote><p>早期more命令没有现在这么强大，其只能前进不能后退</p></blockquote><h2 id="3、less分屏显示文件内容（重点）"><a href="#3、less分屏显示文件内容（重点）" class="headerlink" title="3、less分屏显示文件内容（重点）"></a>3、less分屏显示文件内容（重点）</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># less 文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>特别注意：less命令不是加载整个文件到内存，而是一点一点进行加载，相对而言，读取大文件时，效率比较高。</p></blockquote><p>另外：less可以通过上下方向键显示上下内容，退出时不会在Shell中留下刚显示的内容</p><p>less 命令的执行也会打开一个交互界面，下面是一些常用交互命令（和more类似）：</p><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>回车键</td><td>向下移动一行。</td></tr><tr><td>d</td><td>向下移动半页。</td></tr><tr><td>空格键</td><td>向下移动一页。</td></tr><tr><td>b</td><td>向上移动一页。</td></tr><tr><td>上下方向键</td><td>向上与向下移动，less命令特有功能键</td></tr><tr><td>less -N 文件名称</td><td>显示行号</td></tr><tr><td>/ 字符串</td><td>搜索指定的字符串。</td></tr><tr><td>q</td><td>退出less</td></tr></tbody></table><p>cat,more,less三者的对比：</p><table><thead><tr><th></th><th>cat</th><th>more</th><th>less</th></tr></thead><tbody><tr><td>作用</td><td>显示小文件(一屏以内)</td><td>显示大文件（超过一屏）</td><td>显示大文件（超过一屏）</td></tr><tr><td>交互命令</td><td>无</td><td>有</td><td>有</td></tr><tr><td>上下键翻行</td><td>无</td><td>无</td><td>有</td></tr></tbody></table><h1 id="二、文件统计命令"><a href="#二、文件统计命令" class="headerlink" title="二、文件统计命令"></a>二、文件统计命令</h1><h2 id="1、wc命令"><a href="#1、wc命令" class="headerlink" title="1、wc命令"></a>1、wc命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wc [选项] 文件名称选项说明：-l：表示lines，行数（以回车/换行符为标准）-w：表示words，单词数 依照空格来判断单词数量-c：表示bytes，字节数（空格，回车，换行）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：统计linux.txt文件的总行数</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wc -l linux.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：统计linux.txt文件中的单词数</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wc -w linux.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：统计文件的字节数（数字、字母一般1个字符=1个字节，中文和编码格式有关，如utf-8编码格式，1个汉字占用3个字节）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wc -c linux.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>扩展：wc  [选项]  文件的名称可以统计一个文件的信息，实际情况下，我们选项还可以一起使用</p></blockquote><p>案例：统计一个文件的总行数、总单词数以及总字节数</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wc -wlc linux.txt或# wc -lwc linux.txt或# wc -clw linux.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、du命令"><a href="#2、du命令" class="headerlink" title="2、du命令"></a>2、du命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># du [选项] 统计的文件或文件夹选项说明：-s ：summaries，只显示汇总的大小，统计文件夹的大小-h ：以较高的可读性显示文件或文件夹的大小，（KB/MB/GB/TB)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>主要功能：查看文件或目录(会递归显示子目录)占用磁盘空间大小</p><p>案例：显示readme.txt文件的大小（占用磁盘空间，不显示文件大小的单位）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># du readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：显示readme.txt文件的大小（占用磁盘空间，显示文件大小的单位）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># du -h readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：统计wechat文件夹的大小</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># du -sh wechat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：统计/etc目录的大小</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># du -sh /etc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三、文件处理命令"><a href="#三、文件处理命令" class="headerlink" title="三、文件处理命令"></a>三、文件处理命令</h1><h2 id="1、find命令"><a href="#1、find命令" class="headerlink" title="1、find命令"></a>1、find命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find 搜索路径 [选项]选项说明：-name：指定要搜索文件的名称，支持*星号通配符（Shift + 8）-type：代表搜索的文件类型，f代表普通文件，d代表文件夹=&gt;加快检索速度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>主要功能：当我们查找一个文件时，必须使用的一个命令。</p><p>案例：搜索/var目录中boot.log文件（普通文件）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /var -name "boot.log" -type f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：全盘搜索ssh目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find / -name "ssh" -type d <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>特别注意：实际工作时，尽量减少全盘检索，比较消耗资源</p></blockquote><p>扩展功能：find实现模糊查询（必须结合通配符）</p><p>案例：搜索/var/log目录下的所有的以”.log”结尾的文件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /var/log -name "*.log" -type f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>* ：通配符，代表任意个任意字符。如*.log代表以.log结尾的文件，apache*代表搜索以apache开头的文件信息</p></blockquote><h2 id="2、grep命令"><a href="#2、grep命令" class="headerlink" title="2、grep命令"></a>2、grep命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep [选项] 要搜索的关键词 搜索的文件名称选项说明：-n ：代表显示包含关键词的行号信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>单位：行，一行一行向下搜索</p><p>主要功能：在文件中直接找到包含指定关键词的那些行，并把这些信息高亮显示出来</p><p>案例：在initial-setup-ks.cfg文件中搜索包含关键词”network”的行</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep network initial-setup-ks.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：在initial-setup-ks.cfg文件中搜索包含关键词”network”的行，然后显示行号信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep -n network initial-setup-ks.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>扩展语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep 要搜索的关键词 多个文件的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：在多个文件中查找包含指定关键词的那些行，并高亮显示出来</p><p>案例：搜索/var/log目录下所有文件，找到包含关键词”network”的所有行信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># grep network /var/log/*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、echo命令"><a href="#3、echo命令" class="headerlink" title="3、echo命令"></a>3、echo命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo "文本内容"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：在终端中输入指定的文本内容</p><p>案例：在终端中，输出hello world字符串</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo "hello world"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、输出重定向"><a href="#4、输出重定向" class="headerlink" title="4、输出重定向"></a>4、输出重定向</h2><p>场景：一般命令的输出都会显示在终端中，有些时候需要将一些命令的执行结果想要保存到文件中进行后续的分析/统计，则这时候需要使用到的输出重定向技术。</p><p>&gt;  ：标准输出重定向 : 覆盖输出，会覆盖掉原先的文件内容</p><p>&gt;&gt;：追加重定向 : 追加输出，不会覆盖原始文件内容，会在原始内容末尾继续添加</p><p>案例：把echo输出的”hello world”写入到readme.txt文件中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo "hello world" &gt; readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上程序的主要功能代表把echo命令的执行结果，输出写入到readme.txt文件中，如果readme.txt文件中存在内容，则首先清空，然后在写入hello world</p><p>案例：把echo输出的”hello linux”写入到readme.txt，要求不能覆盖原来的内容</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># echo "hello linux" &gt;&gt; readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="四、Linux操作系统用户和组的概念"><a href="#四、Linux操作系统用户和组的概念" class="headerlink" title="四、Linux操作系统用户和组的概念"></a>四、Linux操作系统用户和组的概念</h1><h2 id="1、为什么需要了解用户和组"><a href="#1、为什么需要了解用户和组" class="headerlink" title="1、为什么需要了解用户和组"></a>1、为什么需要了解用户和组</h2><p>服务器要添加多账户的作用</p><p>​        针对不同用户分配==不同的权限==，不同权限可以限制用户==可以访问到的系统资源==<br>​        提高系统的安全性<br>​        帮助系统管理员对使用系统的用户进行跟踪</p><h2 id="2、用户和组的关系"><a href="#2、用户和组的关系" class="headerlink" title="2、用户和组的关系"></a>2、用户和组的关系</h2><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E4%B8%8E%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86.assets/image-20200317145905871.png" alt="image-20200317145905871"></p><p>理论上Linux系统中的每个用户在创建时都应该有一个对应的用户组，这个组就称之为用户的主组。同时，有些情况下，某个用户需要临时使用某个组的权限，那这个组就称之为这个用户的附属组或附加组。</p><blockquote><p>主组只能拥有一个，但是附属组或附加组可以同时拥有多个 =&gt;  亲爹，干爹（多个）</p></blockquote><h2 id="3、用户组操作"><a href="#3、用户组操作" class="headerlink" title="3、用户组操作"></a>3、用户组操作</h2><p>用户组的操作无疑三件事：用户组的添加、用户组的修改以及用户组的删除操作</p><p>组：group</p><p>添加：add</p><p>修改：mod</p><p>删除：del</p><h3 id="☆-用户组的添加"><a href="#☆-用户组的添加" class="headerlink" title="☆ 用户组的添加"></a>☆ 用户组的添加</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupadd [选项]  用户组的组名称选项说明：-g ：代表用户组的组ID编号，自定义组必须从1000开始，不能重复<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：在系统中添加一个hr的用户组</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupadd hr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：在系统中添加一个test的用户组并指定定编号1100</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupadd -g 1100 test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>问题：我们刚才创建的hr以及test用户组到底添加到哪里了？</p><p>答：默认情况下，我们添加的用户组都会放在一个系统文件中，文件位置=&gt;/etc/group</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail -3 /etc/grouproot:x:0:itheima:x:1000:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="☆-etc-group文件解析"><a href="#☆-etc-group文件解析" class="headerlink" title="☆ /etc/group文件解析"></a>☆ /etc/group文件解析</h3><p>由以上命令的执行结果可知，在/etc/group文件中，其一共拥有三个冒号，共四列。每列含义：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一列：用户组的组名称第二列：用户组的组密码，使用一个x占位符第三列：用户组的组ID编号，1-999代表系统用户组的组编号，1000以后的代表自定义组的组编号CentOS6 =&gt; 1-499,500...CentOS7 =&gt; 1-999,1000...第四列：用户组内的用户信息（如果一个用户的附属组或附加组为这个组名，则显示在此位置）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="☆-用户组的修改"><a href="#☆-用户组的修改" class="headerlink" title="☆ 用户组的修改"></a>☆ 用户组的修改</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupmod [选项 选项的值] 原来组的组名称选项说明：-g ：gid缩写，设置一个自定义的用户组ID数字，1000以后-n ：name缩写，设置新的用户组的名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：把hr用户组更名为szhr</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupmod -n szhr hr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把test用户组的组编号由1100更改为1003</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupmod -g 1003 test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把itcast组的组名称更改为admin且用户组的组编号更改为1004</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupmod -g 1004 -n admin itcast<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-用户组的删除"><a href="#☆-用户组的删除" class="headerlink" title="☆ 用户组的删除"></a>☆ 用户组的删除</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupdel 用户组名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：使用groupdel删除test用户组</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># groupdel test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、用户操作"><a href="#4、用户操作" class="headerlink" title="4、用户操作"></a>4、用户操作</h2><p>用户：user</p><p>添加：add</p><p>修改：mod</p><p>删除：del</p><h3 id="☆-用户的添加"><a href="#☆-用户的添加" class="headerlink" title="☆ 用户的添加"></a>☆ 用户的添加</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd [选项 选项的值] 用户名称选项说明：-g ：代表添加用户时指定用户所属组的主组，唯一的组信息（重要）-s ：代表指定用户可以使用的Shell类型，默认为/bin/bash（拥有大部分权限）还可以是/sbin/nologin，代表账号创建成功，但是不能用于登录操作系统。/bin/bash =&gt; 给人使用的（运维工程师）/sbin/nologin =&gt; 给软件使用的-G ：代表添加用户时指定用户所属组的附属组或附加组，可以指定多个，用逗号隔开即可(了解)-u ：代表添加用户时指定的用户ID编号，CentOS6从500开始，CentOS7中从1000开始(了解)-c ：代表用户的备注信息，cqw:123456:(陈权伟的账号)-d ：代表用户的家目录，默认为/home/用户名称。可以使用-d进行更改-n ：取消建立以用户名称为名的群组（了解）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：在系统中创建一个linuxuser账号</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd linuxuser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>问题：我们并没有为linuxuser账号指定所属的主组，可以成功创建账号么？</p><p>答：可以，因为在创建账号时，如果没有明确指定用户所属的主组，默认情况下，系统会自动在用户组中创建一个与用户linuxuser同名的用户组，这个组就是这个用户的主组。</p><p>问题：刚才创建的linuxuser账号能不能用于登录操作系统</p><p>答：不行，因为Linux的登录账号==必须要求有密码==，如果一个账号没有密码是无法登录操作系统的。</p><p>案例：在系统中创建一个账号zhangsan，指定用户所属的主组为itheima</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">第一步：查询一下itheima的组ID编号# tail -5 /etc/groupitheima:x:1000:第二步：根据组的编号添加用户# useradd -g 1000 zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：在系统中创建一个账号lisi，指定主组为itheima，此用户只能被软件所使用，不能用于登录操作系统</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd -g 1000 -s /sbin/nologin lisi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：在系统中创建一个wangwu，指定主组为wangwu，附属组为itheima</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd -G 1000 wangwu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-用户信息查询"><a href="#☆-用户信息查询" class="headerlink" title="☆ 用户信息查询"></a>☆ 用户信息查询</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># id 用户名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：查询某个指定的用户信息</p><p>案例：查询linuxuser用户的信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># id linuxuseruid=1002(linuxuser) gid=1005(linuxuser) groups=1005(linuxuser)uid：用户编号gid：用户所属的主组的编号groups：用户的主组以及附属组信息，第一个是主组，后面的都是附属组或附加组信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件管理（上）-2</title>
      <link href="/2023/12/23/linux-wen-jian-guan-li-shang-2/"/>
      <url>/2023/12/23/linux-wen-jian-guan-li-shang-2/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件管理（上）"><a href="#Linux文件管理（上）" class="headerlink" title="Linux文件管理（上）"></a>Linux文件管理（上）</h1><h1 id="一、VIM编辑器"><a href="#一、VIM编辑器" class="headerlink" title="一、VIM编辑器"></a>一、VIM编辑器</h1><h2 id="1、vi概述"><a href="#1、vi概述" class="headerlink" title="1、vi概述"></a>1、vi概述</h2><p> vi（visual editor）编辑器通常被简称为vi，它是Linux和Unix系统上最基本的文本编辑器，类似于Windows 系统下的notepad（记事本）编辑器。</p><h2 id="2、vim编辑器"><a href="#2、vim编辑器" class="headerlink" title="2、vim编辑器"></a>2、vim编辑器</h2><p>Vim(Vi improved)是vi编辑器的加强版，比vi更容易使用。vi的命令几乎全部都可以在vim上使用。</p><h2 id="3、vim编辑器的安装"><a href="#3、vim编辑器的安装" class="headerlink" title="3、vim编辑器的安装"></a>3、vim编辑器的安装</h2><h3 id="☆-已安装"><a href="#☆-已安装" class="headerlink" title="☆ 已安装"></a>☆ 已安装</h3><p>Centos通常都已经默认安装好了 vi 或 Vim 文本编辑器，我们只需要通过vim命令就可以直接打开vim编辑器了，如下图所示：</p><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315093026701.png" alt="image-20200315093026701"></p><h3 id="☆-未安装"><a href="#☆-未安装" class="headerlink" title="☆ 未安装"></a>☆ 未安装</h3><p>有些精简版的Linux操作系统，默认并没有安装vim编辑器（可能自带的是vi编辑器）。当我们在终端中输入vim命令时，系统会提示”command  not  found”。</p><p>解决办法：有网的前提下，可以使用yum工具对vim编辑器进行安装</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># yum install vim -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、vim编辑器的四种模式（重点）"><a href="#4、vim编辑器的四种模式（重点）" class="headerlink" title="4、vim编辑器的四种模式（重点）"></a>4、vim编辑器的四种模式（重点）</h2><h3 id="☆-命令模式"><a href="#☆-命令模式" class="headerlink" title="☆ 命令模式"></a>☆ 命令模式</h3><p>使用VIM编辑器时，==默认处于命令模式。==在该模式下可以移动光标位置，可以通过==快捷键==对文件==内容==进行复制、粘贴、删除等操作。</p><h3 id="☆-编辑模式或输入模式"><a href="#☆-编辑模式或输入模式" class="headerlink" title="☆ 编辑模式或输入模式"></a>☆ 编辑模式或输入模式</h3><p>在命令模式下输入小写字母a或小写字母i即可进入编辑模式，在该模式下可以对文件的内容进行编辑</p><h3 id="☆-末行模式"><a href="#☆-末行模式" class="headerlink" title="☆ 末行模式"></a>☆ 末行模式</h3><p>在命令模式下输入冒号:即可进入末行模式，可以在==末行输入命令==来对文件进行查找、替换、保存、退出等操作</p><h3 id="☆-可视化模式（了解）"><a href="#☆-可视化模式（了解）" class="headerlink" title="☆ 可视化模式（了解）"></a>☆ 可视化模式（了解）</h3><p>可以做一些列选操作（通过方向键选择某些列的内容）</p><h1 id="二、VIM四种模式的关系"><a href="#二、VIM四种模式的关系" class="headerlink" title="二、VIM四种模式的关系"></a>二、VIM四种模式的关系</h1><h2 id="1、VIM四种模式"><a href="#1、VIM四种模式" class="headerlink" title="1、VIM四种模式"></a>1、VIM四种模式</h2><p>命令模式/编辑模式/末行模式/可视化模式</p><h2 id="2、VIM四种模式的关系"><a href="#2、VIM四种模式的关系" class="headerlink" title="2、VIM四种模式的关系"></a>2、VIM四种模式的关系</h2><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315094423790.png" alt="image-20200315094423790"></p><h1 id="三、VIM编辑器的使用"><a href="#三、VIM编辑器的使用" class="headerlink" title="三、VIM编辑器的使用"></a>三、VIM编辑器的使用</h1><h2 id="1、使用vim打开文件"><a href="#1、使用vim打开文件" class="headerlink" title="1、使用vim打开文件"></a>1、使用vim打开文件</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim  文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>① 如果文件已存在，则直接打开</p><p>② 如果文件不存在，则vim编辑器会自动在内存中创建一个新文件</p><p>案例：使用vim命令打开readme.txt文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、vim编辑器保存文件"><a href="#2、vim编辑器保存文件" class="headerlink" title="2、vim编辑器保存文件"></a>2、vim编辑器保存文件</h2><p>在任何模式下，连续按两次Esc键，即可返回到命令模式。然后按冒号：，进入到末行模式，输入wq，代表保存并退出。</p><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315102210869.png" alt="image-20200315102210869"></p><h2 id="3、vim编辑器强制退出（不保存）"><a href="#3、vim编辑器强制退出（不保存）" class="headerlink" title="3、vim编辑器强制退出（不保存）"></a>3、vim编辑器强制退出（不保存）</h2><p>在任何模式下，连续按两次Esc键，即可返回到命令模式。然后按冒号：，进入到末行模式，输入q!，代表强制退出但是不保存文件。</p><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315102248865.png" alt="image-20200315102248865"></p><h2 id="4、命令模式下的相关操作（重点）"><a href="#4、命令模式下的相关操作（重点）" class="headerlink" title="4、命令模式下的相关操作（重点）"></a>4、命令模式下的相关操作（重点）</h2><h3 id="☆-如何进入命令模式"><a href="#☆-如何进入命令模式" class="headerlink" title="☆ 如何进入命令模式"></a>☆ 如何进入命令模式</h3><p>答：在Linux操作系统中，当我们使用vim命令直接打开某个文件时，默认进入的就是命令模式。如果我们处于其他模式（编辑模式、可视化模式以及末行模式）可以连续按两次Esc键也可以返回命令模式</p><h3 id="☆-命令模式下我们能做什么"><a href="#☆-命令模式下我们能做什么" class="headerlink" title="☆ 命令模式下我们能做什么"></a>☆ 命令模式下我们能做什么</h3><p>① 移动光标 ② 复制 粘贴 ③ 剪切 粘贴 删除 ④ 撤销与恢复</p><h3 id="☆-移动光标到首行或末行（重点）"><a href="#☆-移动光标到首行或末行（重点）" class="headerlink" title="☆ 移动光标到首行或末行（重点）"></a>☆ 移动光标到首行或末行（重点）</h3><p>移动光标到首行 =&gt; gg</p><p>移动光标到末行 =&gt; G</p><h3 id="☆-翻屏"><a href="#☆-翻屏" class="headerlink" title="☆ 翻屏"></a>☆ 翻屏</h3><p>向上    翻屏，按键：<code>ctrl + b （before） 或 PgUp</code></p><p>向下    翻屏，按键：<code>ctrl + f （after）  或 PgDn</code></p><p>向上翻半屏，按键：<code>ctrl + u （up）</code></p><p>向下翻半屏，按键：<code>ctrl + d （down）</code></p><h3 id="☆-快速定位光标到指定行（重点）"><a href="#☆-快速定位光标到指定行（重点）" class="headerlink" title="☆ 快速定位光标到指定行（重点）"></a>☆ 快速定位光标到指定行（重点）</h3><p>行号 + G，如150G代表快速移动光标到第150行。</p><h3 id="☆-复制-粘贴（重点）"><a href="#☆-复制-粘贴（重点）" class="headerlink" title="☆ 复制/粘贴（重点）"></a>☆ 复制/粘贴（重点）</h3><p>① 复制当前行（光标所在那一行）</p><p>按键：yy</p><p>粘贴：在想要粘贴的地方按下p 键【将粘贴在光标所在行的下一行】,如果想粘贴在光标所在行之前，则使用P键</p><p>② 从当前行开始复制指定的行数，如复制5行，5yy</p><p>粘贴：在想要粘贴的地方按下p 键【将粘贴在光标所在行的下一行】,如果想粘贴在光标所在行之前，则使用P键</p><h3 id="☆-剪切-删除（重点）"><a href="#☆-剪切-删除（重点）" class="headerlink" title="☆ 剪切/删除（重点）"></a>☆ 剪切/删除（重点）</h3><p>在VIM编辑器中，剪切与删除都是dd</p><p>如果剪切了文件，但是没有使用p进行粘贴，就是删除操作</p><p>如果剪切了文件，然后使用p进行粘贴，这就是剪切操作</p><p>① 剪切/删除当前光标所在行</p><p>按键：dd （删除之后下一行上移）</p><p>粘贴：p</p><p>注意：dd 严格意义上说是剪切命令，但是如果剪切了不粘贴就是删除的效果。</p><p>② 剪切/删除多行（从当前光标所在行开始计算）</p><p>按键：数字dd</p><p>粘贴：p</p><p>特殊用法：</p><p>③ 剪切/删除光标所在的当前行（光标所在位置）之后的内容，但是删除之后下一行不上移</p><p>按键：D （删除之后当前行会变成空白行）</p><h3 id="☆-撤销-恢复（重点）"><a href="#☆-撤销-恢复（重点）" class="headerlink" title="☆ 撤销/恢复（重点）"></a>☆ 撤销/恢复（重点）</h3><p>撤销：u（undo）</p><p>恢复：ctrl + r 恢复（取消）之前的撤销操作【重做，redo】</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>① 怎么进入命令模式（vim 文件名称，在任意模式下，可以连续按两次Esc键即可返回命令模式）</p><p>② 命令模式能做什么？移动光标、复制/粘贴、剪切/删除、撤销与恢复</p><p>首行 =&gt; gg，末行 =&gt; G  翻屏（了解） 快速定位 行号G，如150G</p><p>yy  p   5yy  p</p><p>dd p   5dd p</p><p>u</p><p>ctrl + r</p><h2 id="5、末行模式下的相关操作（重点）"><a href="#5、末行模式下的相关操作（重点）" class="headerlink" title="5、末行模式下的相关操作（重点）"></a>5、末行模式下的相关操作（重点）</h2><h3 id="☆-如何进入末行模式"><a href="#☆-如何进入末行模式" class="headerlink" title="☆ 如何进入末行模式"></a>☆ 如何进入末行模式</h3><p>进入末行模式的方法只有一个，在命令模式下使用冒号：的方式进入。</p><h3 id="☆-末行模式下我们能做什么"><a href="#☆-末行模式下我们能做什么" class="headerlink" title="☆ 末行模式下我们能做什么"></a>☆ 末行模式下我们能做什么</h3><p>文件保存、退出、查找与替换、显示行号、paste模式等等</p><h3 id="☆-保存-退出（重点）"><a href="#☆-保存-退出（重点）" class="headerlink" title="☆ 保存/退出（重点）"></a>☆ 保存/退出（重点）</h3><p>:w =&gt; 代表对当前文件进行保存操作，但是其保存完成后，并没有退出这个文件</p><p>:q =&gt; 代表退出当前正在编辑的文件，但是一定要注意，文件必须先保存，然后才能退出</p><p>:wq =&gt; 代表文件先保存后退出（保存并退出）</p><p>如果一个文件在编辑时没有名字，则可以使用:wq  文件名称，代表把当前正在编辑的文件保存到指定的名称中，然后退出</p><p>:q! =&gt; 代表强制退出但是文件未保存（不建议使用）</p><h3 id="☆-查找-搜索（重点）"><a href="#☆-查找-搜索（重点）" class="headerlink" title="☆ 查找/搜索（重点）"></a>☆ 查找/搜索（重点）</h3><p>切换到命令模式，然后输入斜杠/（也是进入末行模式的方式之一）</p><p>进入到末行模式后，输入要查找或搜索的关键词，然后回车</p><p>如果在一个文件中，存在多个满足条件的结果。在搜索结果中切换上/下一个结果：N/n （大写N代表上一个结果，小写n代表next）</p><p>如果需要取消高亮，则需要在末行模式中输入<code>:noh</code>【no highlight】</p><h3 id="☆-文件内容的替换（重点）"><a href="#☆-文件内容的替换（重点）" class="headerlink" title="☆ 文件内容的替换（重点）"></a>☆ 文件内容的替换（重点）</h3><p>第一步：首先要进入末行模式（在命令模式下输入冒号:）</p><p>第二步：根据需求替换内容</p><p>① 只替换光标所在这一行的第一个满足条件的结果（只能替换1次）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">:s/要替换的关键词/替换后的关键词   +  回车<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把hello centos中的centos替换为centos7.6</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">切换光标到hello centos这一行:s/centos/centos7.6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>② 替换光标所在这一行中的所有满足条件的结果（替换多次，只能替换一行）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">:s/要替换的关键词/替换后的关键词/gg=global全局替换<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把hello centos中的所有centos都替换为centos7.6</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">切换光标到hello centos这一行:s/centos/centos7.6/g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>③ 针对整个文档中的所有行进行替换，只替换每一行中满足条件的第一个结果</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">:%s/要替换的关键词/替换后的关键词<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把每一行中的第一个hello关键词都替换为hi</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">:%s/hello/hi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>④ 针对整个文档中的所有关键词进行替换（只要满足条件就进行替换操作）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">:%s/要替换的关键词/替换后的关键词/g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：替换整个文档中的hello关键词为hi</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">:%s/hello/hi/g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-显示行号"><a href="#☆-显示行号" class="headerlink" title="☆ 显示行号"></a>☆ 显示行号</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">:set nunu = number，行号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>取消行号 =&gt; :set  nonu</p></blockquote><h3 id="☆-set-paste模式-了解"><a href="#☆-set-paste模式-了解" class="headerlink" title="☆ set paste模式(了解)"></a>☆ set paste模式(了解)</h3><p>为什么要使用paste模式？</p><p>问题：在终端Vim中粘贴代码时，发现插入的代码会有多余的缩进，而且会逐行累加。原因是终端把粘贴的文本存入键盘缓存（Keyboard Buffer）中，Vim则把这些内容作为用户的键盘输入来处理。导致在遇到换行符的时候，如果Vim开启了自动缩进，就会默认的把上一行缩进插入到下一行的开头，最终使代码变乱。</p><p>在粘贴数据之前，输入下面命令开启paste模式<br>:set paste</p><p>粘贴完毕后，输入下面命令关闭paste模式<br>:set nopaste</p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>① 如何进入末行模式，必须从命令模式中使用冒号进行切换</p><p>② 末行模式下能做什么？保存、退出、查找、替换、显示行号以及paste模式</p><p>③ 保存 =&gt; :w</p><p>④ 退出 =&gt; :q，先保存后退出。:wq     :wq  文件名称    :q!</p><p>⑤ 查找功能 =&gt; 命令模式输入/斜杠  +  关键词（高亮显示）=&gt; :noh</p><p>⑥ 替换功能</p><p>:s/要替换的关键词/替换后的关键词</p><p>:s/要替换的关键词/替换后的关键词/g</p><p>:%s/要替换的关键词/替换后的关键词</p><p>:%s/要替换的关键词/替换后的关键词/g</p><p>⑦ 显示行号 =&gt; :set nu 取消行号 =&gt; :set nonu</p><p>⑧ paste模式 =&gt; 将来在粘贴代码的时候为了保存原格式 =&gt; 粘贴之前 =&gt; :set paste</p><h1 id="四、编辑模式"><a href="#四、编辑模式" class="headerlink" title="四、编辑模式"></a>四、编辑模式</h1><h2 id="1、编辑模式的作用"><a href="#1、编辑模式的作用" class="headerlink" title="1、编辑模式的作用"></a>1、编辑模式的作用</h2><p>编辑模式的作用比较简单，主要是实现对文件的内容进行编辑模式。</p><h2 id="2、如何进入编辑模式"><a href="#2、如何进入编辑模式" class="headerlink" title="2、如何进入编辑模式"></a>2、如何进入编辑模式</h2><p>首先你需要进入到命令模式，然后使用小写字母a或小写字母i，进入编辑模式。</p><p>命令模式 + i  ： insert缩写，代表在光标之前插入内容</p><p>命令模式 + a ： append缩写，代表在光标之后插入内容</p><h2 id="3、退出编辑模式"><a href="#3、退出编辑模式" class="headerlink" title="3、退出编辑模式"></a>3、退出编辑模式</h2><p>在编辑模式中，直接按Esc，即可从编辑模式退出到命令模式。</p><h1 id="五、可视化模式"><a href="#五、可视化模式" class="headerlink" title="五、可视化模式"></a>五、可视化模式</h1><h2 id="1、如何进入到可视化模式"><a href="#1、如何进入到可视化模式" class="headerlink" title="1、如何进入到可视化模式"></a>1、如何进入到可视化模式</h2><p>在命令模式中，直接按ctrl + v（可视块）或V（可视行）或v（可视），然后按下↑  ↓  ←  →方向键来选中需要复制的区块，按下y 键进行复制（不要按下yy），最后按下p 键粘贴</p><p>退出可视模式按下Esc</p><h2 id="2、可视化模式复制操作"><a href="#2、可视化模式复制操作" class="headerlink" title="2、可视化模式复制操作"></a>2、可视化模式复制操作</h2><p>第一步：在命令模式下，直接按小v，进入可视化模式</p><p>第二步：使用方向键↑  ↓  ←  →选择要复制的内容，然后按y键</p><p>第三步：移动光标，停在需要粘贴的位置，按p键进行粘贴操作</p><h2 id="3、为配置文件添加-多行注释（重点）"><a href="#3、为配置文件添加-多行注释（重点）" class="headerlink" title="3、为配置文件添加#多行注释（重点）"></a>3、为配置文件添加#多行注释（重点）</h2><p>第一步：按Esc退出到命令模式，按gg切换到第1行</p><p>第二步：然后按Ctrl+v进入到可视化区块模式（列模式）</p><p>第三步：在行首使用上下键选择需要注释的多行</p><p>第四步：按下键盘（大写）“I”键，进入插入模式（Shift + i）</p><p>第五步：输入#号注释符</p><p>第六步：输入完成后，连续按两次Esc即可完成添加多行注释的过程</p><h2 id="4、为配置文件去除-多行注释（重点）"><a href="#4、为配置文件去除-多行注释（重点）" class="headerlink" title="4、为配置文件去除#多行注释（重点）"></a>4、为配置文件去除#多行注释（重点）</h2><p>第一步：按Esc退出到命令模式，按gg切换到第1行</p><p>第二步：然后按Ctrl+v进入可视化区块模式（列模式）</p><p>第三步：使用键盘上的方向键的上下选中需要移除的#号注释</p><p>第四步：直接按Delete键即可完成删除注释的操作</p><h1 id="六、VIM编辑器实用功能"><a href="#六、VIM编辑器实用功能" class="headerlink" title="六、VIM编辑器实用功能"></a>六、VIM编辑器实用功能</h1><h2 id="1、代码着色"><a href="#1、代码着色" class="headerlink" title="1、代码着色"></a>1、代码着色</h2><p>之前说过vim 是vi 的升级版本，其中比较典型的区别就是vim 更加适合coding，因为vim比vi 多一个代码着色的功能，这个功能主要是为程序员提供编程语言升的语法显示效果，如下：</p><p>第一步：定义后缀名为网页文件的代码文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim index.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步：编写对应的PHP代码</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">&lt;?phpecho 'hello world';?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在VIM编辑器中，我们可以通过<code>:syntax on</code>或<code>:syntax off</code>开启或关闭代码着色功能。</p><h2 id="2、异常退出解决方案"><a href="#2、异常退出解决方案" class="headerlink" title="2、异常退出解决方案"></a>2、异常退出解决方案</h2><p>什么是异常退出：在编辑文件之后并没有正常的去wq（保存退出），而是遇到突然关闭终端或者断电的情况，则会显示下面的效果，这个情况称之为异常退出：</p><p><img src="/../assets/blog_res/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%8A2%EF%BC%89.assets/image-20200315155600276.png" alt="image-20200315155600276"></p><blockquote><p>温馨提示：每个文件的异常文件都会有所不同，其命名规则一般为<code>.文件名称.swp</code></p></blockquote><p>解决办法：将交换文件（在编程过程中产生的临时文件）删除掉即可【在上述提示界面按下D 键或者使用rm 指令删除交换文件】</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm .1.php.swp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、退出vim编辑器"><a href="#3、退出vim编辑器" class="headerlink" title="3、退出vim编辑器"></a>3、退出vim编辑器</h2><p>回顾：在vim中，退出正在编辑的文件可以使用<code>:q</code>或者<code>:wq</code></p><p>除了上面的这个语法之外，vim 还支持另外一个保存退出(针对内容)方法<code>:x</code></p><p>① <code>:x</code>在文件没有修改的情况下，表示直接退出（等价于:q），在文件修改的情况下表</p><p>示保存并退出（:wq）</p><p>② 如果文件没有被修改，但是使用wq 进行退出的话，则文件的修改时间会被更新；但是如果文件没有被修改，使用x 进行退出的话，则文件修改时间不会被更新的；主要是会混淆用户对文件的修改时间的认定。</p><h1 id="七、查看文件的内容"><a href="#七、查看文件的内容" class="headerlink" title="七、查看文件的内容"></a>七、查看文件的内容</h1><h2 id="1、cat命令"><a href="#1、cat命令" class="headerlink" title="1、cat命令"></a>1、cat命令</h2><h3 id="☆-输出文件内容"><a href="#☆-输出文件内容" class="headerlink" title="☆ 输出文件内容"></a>☆ 输出文件内容</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cat 文件名称111222333444<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主要功能：正序输出文件的内容</p><h3 id="☆-合并多个文件内容"><a href="#☆-合并多个文件内容" class="headerlink" title="☆ 合并多个文件内容"></a>☆ 合并多个文件内容</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cat 文件名称1  文件名称2  ... &gt; 合并后的文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：把文件名称1、文件名称2、…中的内容的合并到一个文件中</p><h2 id="2、tac命令"><a href="#2、tac命令" class="headerlink" title="2、tac命令"></a>2、tac命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tac 文件名称444333222111<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主要功能：倒序输出文件的内容</p><h2 id="3、head命令"><a href="#3、head命令" class="headerlink" title="3、head命令"></a>3、head命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># head -n 文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：查看一个文件的前n 行，如果不指定n，则默认显示前10 行</p><p>案例：查询linux.txt文件中的前10行</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># head linux.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：查询linux.txt文件中的前3行</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># head -3 linux.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、tail命令"><a href="#4、tail命令" class="headerlink" title="4、tail命令"></a>4、tail命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail -n 文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：查看一个文件的最后n 行，如果不指定n，则默认显示最后10 行</p><p>案例：查询linux.txt文件的最后10行</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail linux.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：查询linux.txt文件的最后3行</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail -3 linux.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、tail-f命令"><a href="#5、tail-f命令" class="headerlink" title="5、tail -f命令"></a>5、tail -f命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail  -f  文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：动态查看一个文件内容的输出信息（主要用于将来查询日志文件的变化）</p><p>案例：查询系统的/var/log/messages文件的日志信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail -f /var/log/messages<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>退出方式可以直接按快捷键：Ctrl + C，中断操作</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux用户管理与远程管理</title>
      <link href="/2023/12/23/linux-yong-hu-guan-li-yu-yuan-cheng-guan-li/"/>
      <url>/2023/12/23/linux-yong-hu-guan-li-yu-yuan-cheng-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux用户管理与远程管理"><a href="#Linux用户管理与远程管理" class="headerlink" title="Linux用户管理与远程管理"></a>Linux用户管理与远程管理</h1><h1 id="一、用户管理"><a href="#一、用户管理" class="headerlink" title="一、用户管理"></a>一、用户管理</h1><h2 id="1、回顾用户组管理"><a href="#1、回顾用户组管理" class="headerlink" title="1、回顾用户组管理"></a>1、回顾用户组管理</h2><p>groupadd ：组添加</p><p>groupmod：组修改</p><p>groupdel：组删除</p><p>与用户组相关的文件/etc/group，一共拥有4列</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">itheima:x:1000:1-组名称2-组密码3-组编号4-组内用户信息（这个组必须是这个用户的附属组或附加组）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、回顾用户管理"><a href="#2、回顾用户管理" class="headerlink" title="2、回顾用户管理"></a>2、回顾用户管理</h2><p>useradd用户的添加</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># useradd [选项 选项的值]  用户名称选项说明：-g ：指定用户的主组的编号信息-s ：指定用户可以使用的Shell类型/bin/bash ：给人用的，给运维工程师/sbin/nologin ：给软件用的，比如mysql-G ：指定附属组的ID编号，如果有多个附属组，可以使用逗号隔开 useradd -G 1000,1001 ..-d ：指定用户的家，/home/itheima，useradd -d /itheima itheima-u ：指定用户的ID编号，默认是自动生成的-c ：comment，注释信息，scj:x:uid:gid:宋楚杰的账号-n ：取消以用户名称命名的组信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>id命令</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># id itheima<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、与用户相关的用户文件"><a href="#3、与用户相关的用户文件" class="headerlink" title="3、与用户相关的用户文件"></a>3、与用户相关的用户文件</h2><p>组：/etc/group文件</p><p>用户：/etc/passwd文件，每创建一个用户，其就会在此文件中追加一行</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/passwdroot:x:0:0:root:/root:/bin/bash由上图可知，一共拥有7列第1列：用户名称第2列：用户的密码，使用一个x占位符，真实密码存储在/etc/shadow(1-用户名，2-加密密码)第3列：数字，用户的ID编号第4列：数字，用户的主组ID编号第5列：代表注释信息，useradd -c "备注信息" 用户名称第6列：用户的家目录，默认在/home/用户名称第7列：用户可以使用的Shell类型，useradd -s /bin/bash或/sbin/nologin 用户名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、用户修改操作"><a href="#4、用户修改操作" class="headerlink" title="4、用户修改操作"></a>4、用户修改操作</h2><p>用户：user，添加：add，修改：mod，删除：del</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod [选项 选项的值] 用户名称选项说明：-g ：修改用户所属的主组的编号-l ：login name修改用户的名称-s ：修改用户可以使用的Shell类型，如/bin/bash =&gt; /sbin/nologin扩展：-L：锁定用户，锁定后用户无法登陆系统lock-U：解锁用户unlock了解：-G ：修改用户附属组的编号信息-d ：修改用户的家目录-c ：修改用户的备注信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：修改zhangsan账号信息，更名为zs</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -l zs zhangsan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：修改wangwu账号信息，把用户的主组的编号更新为1000（itheima）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -g 1000 wangwu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：禁止linuxuser账号登录Linux操作系统</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -s /sbin/nologin linuxuser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：禁止linux用户登录操作（Ctrl + Alt + F2 ~ F6）</p><blockquote><p>Linux系统除了默认的图形化界面，其实还有5个隐藏的字符界面，按Ctrl + Alt + F1~F6</p><p>有些电脑开启Fn功能键，所以如果Ctrl + Alt + F1<del>F6不生效，则可以按Ctrl + Alt + Fn + F1</del>F6</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -L linux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：解锁linux用户</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># usermod -U linux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>问题：账号已经解锁，但是无法登录</p><p>① 当前账号没有设置密码，因为Linux操作系统不允许没有密码的操作进行登录</p><p>② 当前用户的Shell类型为/sbin/nologin，所以其无法登录</p></blockquote><h2 id="5、passwd命令"><a href="#5、passwd命令" class="headerlink" title="5、passwd命令"></a>5、passwd命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># passwd 用户名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：为某个用户设置密码（添加或修改），可以给自己也可以给别人设置</p><p>案例：修改自己的密码</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@yunwei ~]# passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：为linux账号添加一个密码，密码：123456</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">[root@yunwei ~]# passwd linux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>特别注意：在Linux操作系统中，如果一个账号没有密码，则无法登录操作系统。</p></blockquote><h2 id="6、su命令"><a href="#6、su命令" class="headerlink" title="6、su命令"></a>6、su命令</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su [-] root选项：- ：横杠（减号），代表切换用户的同时，切换目录到用户的家<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>主要功能：切换用户的账号</p><blockquote><p>从超级管理员切换到普通用户，root =&gt; itheima，不需要输入itheima的密码</p><p>从普通账号切换到超级管理员，itheima =&gt; root，需要输入root的密码</p><p>从普通账号切换到普通账号，itheima =&gt; linuxuser，也需要输入linuxuser密码</p></blockquote><h2 id="7、wheel组（了解）"><a href="#7、wheel组（了解）" class="headerlink" title="7、wheel组（了解）"></a>7、wheel组（了解）</h2><p>Linux系统中，理论上只有在wheel组中的普通用户，才可以通过su命令切换到root账户，默认所有普通用户都能切换到root，只要知道root密码，换句话说，默认此配置不生效</p><h2 id="8、用户删除操作"><a href="#8、用户删除操作" class="headerlink" title="8、用户删除操作"></a>8、用户删除操作</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># userdel [选项] 用户名称选项说明：-r ：删除用户的同时，删除用户的家（默认不删除）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：删除用户但是不删除用户的家目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># userdel zs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除用户的同时删除用户的家目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># userdel -r lisi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>删除账号流程：① 删除账号 ② 确认是否删除用户家 ③ 删除用户主组（没有其他用户）</p></blockquote><p>扩展：当我们想要删除某个账号时，系统提示当前账号正在被某个进程所使用</p><p>![image-20200318114052650](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318114052650.png)</p><p>解决方案：</p><p>第一种方案：找到登录的这个用户，然后将其直接注销</p><p>第二种方案：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># kill [-9] 进程的ID编号选项说明：-9代表强制结束某个进程主要功能：用于结束某个进程的继续运行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：结束11565进程</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># kill 11565<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>简单粗暴，kill 对应用户的全部进程（尽量斩草除根，结束父进程）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps -ef |grep linuxps命令：查看进程-ef ：查看系统的所有进程|：管道命令grep linux：搜索包含了linux关键词的所有进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结束完成后，再次使用userdel删除即可</p><h1 id="二、管道（重点）"><a href="#二、管道（重点）" class="headerlink" title="二、管道（重点）"></a>二、管道（重点）</h1><h2 id="1、管道符"><a href="#1、管道符" class="headerlink" title="1、管道符"></a>1、管道符</h2><p>==”|”==，竖线</p><p>作用：管道是一种通信机制，通常用于进程间的通信。它表现出来的形式将==前面每一个进程的输出（stdout）直接作为下一个进程的输入（stdin）==。</p><p>![image-20200318140553750](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318140553750.png)</p><p>0 ： 标准输入，程序或命令需要外部的某些程序传递相应的参数，才能正常运行</p><p>1 ：标准输出，程序或命令正确的执行结果，我们就称之为标准输出</p><p>2 ：标准错误，程序或命令错误的执行结果，我们就称之为标准错误</p><h2 id="2、过滤（筛选）功能"><a href="#2、过滤（筛选）功能" class="headerlink" title="2、过滤（筛选）功能"></a>2、过滤（筛选）功能</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># 前一个命令 | 后一个命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：获取/根目录下包含关键字”y”的文件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls / | grep y解析：| ：管道符号，作用=&gt;把ls /的正确的执行结果作为参数传递给grep命令ls / ：管道左边的命令grep y ：管道右边的命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>grep命令的基本语法 =&gt; grep  关键字  文件名称</p></blockquote><p>案例：检索系统中的已安装文件，只筛选mariadb软件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rpm -qa | grep mariadb-q ：query，查询-a ：all，所有<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：在系统的进程中进行查找，查找与itheima相关的进程信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ps -ef | grep itheimaps -ef ：查询系统中所有正在运行的进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3、特殊功能"><a href="#3、特殊功能" class="headerlink" title="3、特殊功能"></a>3、特殊功能</h2><p>通过管道的操作方法来实现less 的等价效果（了解）</p><p>例如：源指令是”less xxx.txt”，使用管道的话则可以写成：cat xxx.txt | less</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># less initial-setup-ks.cfg更改为管道命令# cat initial-setup-ks.cfg | less<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="4、统计功能（重点）"><a href="#4、统计功能（重点）" class="headerlink" title="4、统计功能（重点）"></a>4、统计功能（重点）</h2><p>回顾：wc命令，word count，文件统计功能</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># wc [选项] 文件名称选项说明：-l : 统计总行数-w : word，总单词数-c : 统计总字节数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：统计/根目录下一共有多少个文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls / | wc -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：用户在计算机中有一个配置文件（/etc/passwd），一般情况下，一个用户会占用一行配置，请你使用现学的管道统计当前计算机中一共有多少个用户个信息（一个用户一行）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cat /etc/passwd | wc -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5、xargs命令扩展"><a href="#5、xargs命令扩展" class="headerlink" title="5、xargs命令扩展"></a>5、xargs命令扩展</h2><p>问题：为什么需要xargs命令？</p><p>答：之所以能用到这个命令，关键是由于很多命令不支持 | 管道来传递参数，而日常工作中又有这个必要，所以就有了 xargs 命令。</p><blockquote><p>简单来说，xargs命令就相当于对管道命令进行了一个扩展，让所有命令都支持管道</p></blockquote><p>案例：搜索/etc目录下的所有”.conf”结尾的文件信息，然后以详细列表形式显示</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /etc -name "*.conf" | ls -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解决方案，在ls命令之前添加一个xargs命令，这样ls命令就支持管道了，可以用于接收前一个命令的执行结果</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># find /etc -name "*.conf" | xargs ls -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三、Linux网络管理"><a href="#三、Linux网络管理" class="headerlink" title="三、Linux网络管理"></a>三、Linux网络管理</h1><h2 id="1、获取计算机的网络信息"><a href="#1、获取计算机的网络信息" class="headerlink" title="1、获取计算机的网络信息"></a>1、获取计算机的网络信息</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ifconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Windows =&gt; ipconfig    Linux =&gt; ifconfig</p></blockquote><p>第一步：连接网络</p><p>![image-20200318153054968](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318153054968.png)</p><p>第二步：使用ifconfig命令，获取计算机的网络信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ifconfigens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500        inet 10.1.1.16  netmask 255.255.255.0  broadcast 10.1.1.255        inet6 fe80::e472:7b78:c871:8e12  prefixlen 64  scopeid 0x20&lt;link&gt;        ether 00:0c:29:48:bf:f9  txqueuelen 1000  (Ethernet)        RX packets 254  bytes 54837 (53.5 KiB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 287  bytes 42006 (41.0 KiB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0        解析：inet 10.1.1.16  netmask 255.255.255.0  broadcast 10.1.1.255inet 10.1.1.16 ：代表ens33网卡的IP地址，将来远程连接就是用这个IPnetmask ：子网掩码，一般为255.255.255.0broadcast ：广播地址，10.1.1.255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>CentOS6 =&gt; eth0 ， CentOS7 =&gt; ens33</p></blockquote><p>ens33 ：是默认的网卡，我们获取的IP也要从这个网卡中获取</p><p>lo（loop，循环）：表示回环网卡，只有一个固定的IP地址，127.0.0.1代表本机</p><p>virbr0：虚拟网络接口，因为咱们使用vmware虚拟机安装Centos，所以其会产生virbr0虚拟网络接口</p><h2 id="2、与网卡相关的配置文件"><a href="#2、与网卡相关的配置文件" class="headerlink" title="2、与网卡相关的配置文件"></a>2、与网卡相关的配置文件</h2><p>Linux系统中，一切皆文件。所以保存网络信息的也是通过一个文件来完成的。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># vim /etc/sysconfig/network-scripts/ifcfg-ens33TYPE="Ethernet"BOOTPROTO="dhcp"NAME="ens33"UUID="6c809893-d12c-46af-9987-4c05b2773c91"DEVICE="ens33"ONBOOT="yes"参数解析：TYPE ：网络类型，Ethernet以太网BOOTPROTO：IP的获取方式，dhcp代表自动获取，static/none代表手工设置NAME ：网卡的名称（名字），ens33UUID ：代表网卡的UUID编号（必须是唯一的）DEVICE ：设备名称ONBOOT ：代表网卡是否随计算机开启启动，yes随计算机开机启动，no代表不启动<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、查询计算机的网络状态"><a href="#3、查询计算机的网络状态" class="headerlink" title="3、查询计算机的网络状态"></a>3、查询计算机的网络状态</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl  status  networksystemctl = system + control = 系统控制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>主要功能：查询计算机网络的状态，网络是否正常连接。</p><p>![image-20200318160415929](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318160415929.png)</p><p>Active ： active（正常）或  inactive（dead，网络状态不正常没有连接）</p><h2 id="4、systemctl启动-重启-停止网络"><a href="#4、systemctl启动-重启-停止网络" class="headerlink" title="4、systemctl启动/重启/停止网络"></a>4、systemctl启动/重启/停止网络</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl start network# systemctl stop network# systemctl restart network选项解析：start ：启动stop ：停止restart ：重启<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="四、Linux远程连接与文件传输"><a href="#四、Linux远程连接与文件传输" class="headerlink" title="四、Linux远程连接与文件传输"></a>四、Linux远程连接与文件传输</h1><h2 id="1、为什么需要远程连接"><a href="#1、为什么需要远程连接" class="headerlink" title="1、为什么需要远程连接"></a>1、为什么需要远程连接</h2><p>![image-20200318163657190](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318163657190.png)</p><h2 id="2、SSH协议"><a href="#2、SSH协议" class="headerlink" title="2、SSH协议"></a>2、SSH协议</h2><p>  简单说，SSH是一种网络协议，用于计算机之间的加密登录。</p><h2 id="3、sshd服务"><a href="#3、sshd服务" class="headerlink" title="3、sshd服务"></a>3、sshd服务</h2><p>当我们在计算机中安装了sshd软件，启动后，就会在进程中产生一个sshd进程，其遵循计算机的SSH协议。默认情况下，sshd服务随系统自动安装的。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># systemctl  status  sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、sshd服务的端口号"><a href="#4、sshd服务的端口号" class="headerlink" title="4、sshd服务的端口号"></a>4、sshd服务的端口号</h2><p>SSH协议，其规则了远程连接与传输的端口号，所以sshd服务启动后，就会占用计算机的22号端口。</p><blockquote><p>端口号能解决什么问题？答：能让我们的计算机区分出不同的服务</p></blockquote><p>![image-20200318164340849](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318164340849.png)</p><h2 id="5、使用MX软件连接Linux服务器"><a href="#5、使用MX软件连接Linux服务器" class="headerlink" title="5、使用MX软件连接Linux服务器"></a>5、使用MX软件连接Linux服务器</h2><h3 id="Putty"><a href="#Putty" class="headerlink" title="Putty"></a>Putty</h3><p>官网：<a href="https://links.jianshu.com/go?to=http://www.putty.org">www.putty.org</a></p><p>PuTTY为一开放源代码软件，主要由Simon Tatham维护，使用MIT licence授权。</p><h3 id="SecureCRT"><a href="#SecureCRT" class="headerlink" title="SecureCRT"></a>SecureCRT</h3><p>官网：<a href="https://links.jianshu.com/go?to=http://www.vandyke.com">www.vandyke.com</a><br> SecureCRT是一款支持SSH(SSH1和SSH2)的终端仿真程序，简单地说是Windows下登录UNIX或Linux服务器主机的软件。（颜色方案不是特别好看）</p><h3 id="XShell"><a href="#XShell" class="headerlink" title="XShell"></a>XShell</h3><p>官网：<a href="https://links.jianshu.com/go?to=http://www.netsarang.com">www.netsarang.com</a></p><p>Xshell是一个强大的安全终端模拟软件，它支持SSH1, SSH2, 以及Microsoft Windows 平台的TELNET 协议。Xshell 通过互联网到远程主机的安全连接以及它创新性的设计和特色帮助用户在复杂的网络环境中享受他们的工作。</p><p>缺点：收费</p><h3 id="MobaXterm"><a href="#MobaXterm" class="headerlink" title="MobaXterm"></a>MobaXterm</h3><p>官网：<a href="https://mobaxterm.mobatek.net/">https://mobaxterm.mobatek.net/</a></p><p>① 获取Linux的的IP地址</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ifconfig10.1.1.16<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>② 打开MX软件，单击Session，创建一个SSH远程连接</p><p>![image-20200318170051275](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318170051275.png)</p><p>③ 设置书签（给这台服务器起个名字）</p><p>![image-20200318170217196](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318170217196.png)</p><p> ④ 输入CentOS7.6的root管理员密码</p><p>管理员：root</p><p>密    码：123456</p><p>![image-20200318170322945](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318170322945.png)</p><h2 id="6、使用MX实现文件传输"><a href="#6、使用MX实现文件传输" class="headerlink" title="6、使用MX实现文件传输"></a>6、使用MX实现文件传输</h2><p>![image-20200318170715403](../assets/blog_res/Linux文件管理与用户管理 (copy).assets/image-20200318170715403.png)</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md模版</title>
      <link href="/2023/12/23/md/"/>
      <url>/2023/12/23/md/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> none </category>
          
      </categories>
      
      
        <tags>
            
            <tag> none </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相册页的创建故障</title>
      <link href="/2023/12/22/xiang-ce-ye-de-chuang-jian-gu-zhang/"/>
      <url>/2023/12/22/xiang-ce-ye-de-chuang-jian-gu-zhang/</url>
      
        <content type="html"><![CDATA[<p>相册页创建参考资料：</p><p><a href="https://cloud.tencent.com/developer/article/2076603">hexo-theme-matery_文字博客wordpress主题-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>期间故障：</p><p>gallery.ejs文件已经提前存在，其内部也书写了相当多的代码，在浏览的过程之中忽略了作者的‘新建’二字，产生冲突无法成功执行命令。</p><p>后删除原gallery.ejs文件，重新建立空白文档并添加参考资料内部代码，重新运行后成功。</p><p>以下是参考资料的gallery.ejs代码：</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&lt;style type="text/css"&gt;    /* don't remove. */    .about-cover {        height: 75vh;    }&lt;/style&gt;&lt;%- partial('_partial/bg-cover') %&gt;&lt;main class="content"&gt;&lt;% if (theme.myGallery &amp;&amp; theme.myGallery.enable) { %&gt;&lt;%- partial('_widget/my-gallery') %&gt;&lt;% } %&gt;&lt;/main&gt;&lt;% if (page.total &gt; 1) { %&gt;&lt;%- partial('_partial/paging') %&gt;&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后是原gallery.ejs代码，已做保存；</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.css.gallery) %&gt;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>link type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.css.fancybox) %&gt;"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>link type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.css.justifiedGallery) %&gt;"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token keyword">let</span> galleries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">)</span> <span class="token punctuation">{</span>    galleries <span class="token operator">=</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> pageTitle <span class="token operator">=</span> page<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span><span class="token parameter">galleries<span class="token punctuation">,</span> pageTitle</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> galleries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">==</span> pageTitle<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> currentGallery <span class="token operator">=</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span>galleries<span class="token punctuation">,</span> pageTitle<span class="token punctuation">)</span><span class="token keyword">var</span> photos <span class="token operator">=</span> currentGallery<span class="token punctuation">.</span>photos<span class="token punctuation">;</span><span class="token keyword">var</span> galleryImageStr <span class="token operator">=</span> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url <span class="token operator">?</span> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">let</span> imageStr <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> photos<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> photo <span class="token operator">=</span> photos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    imageStr <span class="token operator">+=</span> <span class="token string">"&lt;a href=\""</span> <span class="token operator">+</span> galleryImageStr <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\""</span> <span class="token operator">+</span>            <span class="token string">"     class=\"photo-item\" rel=\"example_group\""</span> <span class="token operator">+</span>            <span class="token string">"     data-fancybox=\"images\"&gt;"</span> <span class="token operator">+</span>            <span class="token string">"      &lt;img src=\""</span> <span class="token operator">+</span> galleryImageStr <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\""</span> <span class="token operator">+</span>            <span class="token string">"       alt="</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"&gt;\n"</span> <span class="token operator">+</span>            <span class="token string">"    &lt;/a&gt;"</span><span class="token punctuation">}</span><span class="token operator">%</span><span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"photo-wrapper"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>password <span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/crypto-js.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/gallery-encrypt.js"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"hbe-security"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hbe-input-container"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hbe-form-control"</span> id<span class="token operator">=</span><span class="token string">"pass"</span>  placeholder<span class="token operator">=</span><span class="token string">"请输入密码查看内容"</span><span class="token operator">/</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn-decrypt"</span> id<span class="token operator">=</span><span class="token string">"btn_decrypt"</span><span class="token operator">&gt;</span>解密<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div  id<span class="token operator">=</span><span class="token string">"mygallery"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waterfall"</span> id<span class="token operator">=</span><span class="token string">"encrypt-blog"</span> style<span class="token operator">=</span><span class="token string">"display:none"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">aes</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">,</span> page<span class="token punctuation">.</span>password<span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waterfall"</span> id<span class="token operator">=</span><span class="token string">"encrypt-blog"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> imageStr <span class="token operator">%</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.fancybox) %&gt;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.justifiedGallery) %&gt;"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"a[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#encrypt-blog"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">justifiedGallery</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">margins</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">rowHeight</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功后的相册页面：</p><p><img src="/../assets/blog_res/%E5%AF%BC%E8%88%AA%E9%A1%B5%E7%9A%84%E5%88%9B%E5%BB%BA%E6%95%85%E9%9A%9C.assets/image-20231222193734284.png" alt="image-20231222193734284"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件管理（上）-1</title>
      <link href="/2023/12/22/linux-wen-jian-guan-li-shang/"/>
      <url>/2023/12/22/linux-wen-jian-guan-li-shang/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件管理（上）"><a href="#Linux文件管理（上）" class="headerlink" title="Linux文件管理（上）"></a>Linux文件管理（上）</h1><h1 id="一、Linux下文件命名规则"><a href="#一、Linux下文件命名规则" class="headerlink" title="一、Linux下文件命名规则"></a>一、Linux下文件命名规则</h1><h2 id="1、可以使用哪些字符？"><a href="#1、可以使用哪些字符？" class="headerlink" title="1、可以使用哪些字符？"></a>1、可以使用哪些字符？</h2><p>理论上==除了字符“/”之外，所有的字符都可以使用==，但是要注意，在目录名或文件名中，不建议使用某些特殊字符，例如， &lt;、&gt;、？、* 等，尽量避免使用。</p><p>工作时文件的命名规则：</p><p>① 由于linux严格区分大小写，所以==尽量都用小写字母==</p><p>② 如果必须==对文件名进行分割，建议使用”_”==，例如：itheima_bj_2020.log</p><blockquote><p>_ 下划线，在Linux操作系统中，可以使用Shift键 + 减号</p></blockquote><h2 id="2、文件名的长度"><a href="#2、文件名的长度" class="headerlink" title="2、文件名的长度"></a>2、文件名的长度</h2><p>目录名或文件名的长度不能超过 255 个字符</p><blockquote><p>尽量不要太长，另外文件名称一定要见名知意，可以使用英文单词</p></blockquote><h2 id="3、文件名的大小写"><a href="#3、文件名的大小写" class="headerlink" title="3、文件名的大小写"></a>3、文件名的大小写</h2><p> Linux目录名或文件名是区分大小写的。如 itheima、ITheima、yunwei 和 Yunwei ，是互不相同的目录名或文件名。</p><p>个人建议：</p><p>不要使用字符大小写来区分不同的文件或目录。<br>建议文件名==一律使用小写字母==</p><h2 id="4、Linux文件扩展名"><a href="#4、Linux文件扩展名" class="headerlink" title="4、Linux文件扩展名"></a>4、Linux文件扩展名</h2><p>Linux文件的扩展名对 Linux 操作系统没有特殊的含义，Linux 系统并不以文件的扩展名开分区文件类型。例如，itheima.exe 只是一个文件，其扩展名 .exe 并不代表此文件就一定是可执行的。</p><p>在Linux系统中，文件扩展名的用途为了==使运维人员更好的区分不同的文件类型==。</p><blockquote><p>在Linux操作系统中，文件的类型是依靠权限位的标识符来进行区分的。当然也可以通过颜色，如黑色普通文件，天蓝色文件夹</p></blockquote><h1 id="二、Linux下的文件管理"><a href="#二、Linux下的文件管理" class="headerlink" title="二、Linux下的文件管理"></a>二、Linux下的文件管理</h1><h2 id="1、目录创建"><a href="#1、目录创建" class="headerlink" title="1、目录创建"></a>1、目录创建</h2><p>在实际应用中，与目录相关的操作主要有两个：创建目录与删除目录</p><h3 id="①-mkdir创建目录"><a href="#①-mkdir创建目录" class="headerlink" title="① mkdir创建目录"></a>① mkdir创建目录</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir 目录名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：就是根据目录的名称创建一个目录</p><blockquote><p>mkdir = make directory</p></blockquote><p>案例：在家目录下创建一个itheima的文件夹</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir itheima<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="②-mkdir-p递归创建目录"><a href="#②-mkdir-p递归创建目录" class="headerlink" title="② mkdir -p递归创建目录"></a>② mkdir -p递归创建目录</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir -p /usr/local/nginx/conf选项说明：-p：递归创建，从左边的路径开始一级一级创建目录，直到路径结束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：在已知目录（/usr/local）下创建多级目录（nginx/conf）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /usr/local/nginx/confmkdir: cannot create directory ‘/usr/local/nginx/conf’: No such file or directorymkdir：不能创建目录conf，为什么呢？因为/usr/local目录下并没有nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>解决方案：如果我们想同时创建多级目录，必须使用-p选项，其会从左向右一级一级创建目录。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir -p /usr/local/nginx/conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="③-使用mkdir同时创建多个目录"><a href="#③-使用mkdir同时创建多个目录" class="headerlink" title="③ 使用mkdir同时创建多个目录"></a>③ 使用mkdir同时创建多个目录</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir 目录名称1 目录名称2 目录名称3 ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：在当前目录下创建a、b、c三个目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir a# mkdir b# mkdir c或# mkdir a b c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>一个目录一个目录创建# mkdir 目录名称</p><p>多级目录一起创建# mkdir   -p   目录名称1/目录名称2/…</p><p>同时创建多个目录# mkdir  目录名称1  目录名称2  目录名称3</p><h2 id="扩展：Linux快捷键（方向键上下）"><a href="#扩展：Linux快捷键（方向键上下）" class="headerlink" title="扩展：Linux快捷键（方向键上下）"></a>扩展：Linux快捷键（方向键上下）</h2><p>在终端中：</p><p>​按方向键=&gt;向上，其会返回上一次输入的命令</p><p>​按方向键=&gt;向下，其会返回下一次输入的命令</p><h2 id="2、目录删除（必须是空目录）"><a href="#2、目录删除（必须是空目录）" class="headerlink" title="2、目录删除（必须是空目录）"></a>2、目录删除（必须是空目录）</h2><h3 id="①-rmdir移除空目录"><a href="#①-rmdir移除空目录" class="headerlink" title="① rmdir移除空目录"></a>① rmdir移除空目录</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rmdir 目录名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>rmdir = remove  directory，移除目录</p></blockquote><p>案例：把家目录下的itheima删除（空目录）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rmdir itheima<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="②-rmdir-p递归删除空目录"><a href="#②-rmdir-p递归删除空目录" class="headerlink" title="② rmdir -p递归删除空目录"></a>② rmdir -p递归删除空目录</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rmdir -p 目录名称1/目录名称2/目录名称3/...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：从右向左一级一级删除空目录</p><p>案例：递归删除itheima文件夹中的yunwei文件夹中的shenzhen3</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rmdir -p itheima/yunwei/shenzhen3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="③-使用rmdir同时删除多个空目录"><a href="#③-使用rmdir同时删除多个空目录" class="headerlink" title="③ 使用rmdir同时删除多个空目录"></a>③ 使用rmdir同时删除多个空目录</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rmdir 目录名称1 目录名称2 目录名称3 ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除家目录中的a、b、c三个空目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rmdir a b c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h2><p># rmdir 目录名称，删除某个空目录</p><p># rmdir -p 目录名称1/目录名称2/目录名称3/…，同时删除多级目录（从右向左一级一级删除）</p><p># rmdir  目录名称1 目录名称2 目录名称3，同时删除多个空目录</p><h2 id="3、文件创建"><a href="#3、文件创建" class="headerlink" title="3、文件创建"></a>3、文件创建</h2><h3 id="①-touch创建文件"><a href="#①-touch创建文件" class="headerlink" title="① touch创建文件"></a>① touch创建文件</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch 文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：在Linux系统中的当前目录下创建一个文件</p><p>案例：在当前目录下创建一个readme.txt文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="②-使用touch命令同时创建多个文件"><a href="#②-使用touch命令同时创建多个文件" class="headerlink" title="② 使用touch命令同时创建多个文件"></a>② 使用touch命令同时创建多个文件</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch 文件名称1 文件名称2 文件名称3 ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：创建一个shop商城文件夹，然后在内部创建index.php/admin.php/config.php三个文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir shop# touch shop/index.php# touch shop/admin.php# touch shop/config.php或# touch shop/index.php shop/admin.php shop/config.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>提出问题：观察以下命令，看看有何区别？</p><p>第一种写法：touch  shop/index.php    shop/admin.php    shop/config.php</p><p>代表在shop目录下首先创建一个index.php，在创建一个admin.php，最后config.php</p><p>第二种写法：touch   shop/index.php    admin.php   config.php</p><p>代表在shop目录下首先创建index.php，然后在当前目录下创建admin.php，最后在当前目录下创建config.php</p></blockquote><h3 id="③-1-5-根据序号同时创建多个文件"><a href="#③-1-5-根据序号同时创建多个文件" class="headerlink" title="③ {1..5}根据序号同时创建多个文件"></a>③ {1..5}根据序号同时创建多个文件</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch 文件名称{开始序号..结束序号}含义：根据提供的开始序号~结束序号，一个一个创建文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：创建file1、file2、file3、file4、file5共5个文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch file1# touch file2# touch file3# touch file4# touch file5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch file{1..5}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="总结：-2"><a href="#总结：-2" class="headerlink" title="总结："></a>总结：</h2><p># touch 文件名称</p><p># touch 文件名称1  文件名称2  文件名称3 …</p><p># touch 文件名称{开始序号..结束序号}</p><h2 id="4、文件删除"><a href="#4、文件删除" class="headerlink" title="4、文件删除"></a>4、文件删除</h2><h3 id="①-普通删除"><a href="#①-普通删除" class="headerlink" title="① 普通删除"></a>① 普通删除</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm  [选项]  文件或文件夹的名称选项说明：-r ：针对文件夹，代表递归删除，先把目录下的所有文件删除，然后在删除文件夹-f ：强制删除，不提示，初学者一定要慎重！！！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：删除readme.txt文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm readme.txtrm: remove regular empty file ‘readme.txt’?这里可以回复y or ny代表确认删除n代表取消删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：强制删除admin.php，不提示（慎重）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -f admin.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：删除非空的文件夹（-rf强制递归删除，不提示）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf shop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提示信息：descend into directory ‘itheima/‘?<br>含义：是否进入itheima目录？</p><p>提示信息：remvoe directory ‘itheima/‘?<br>含义：是否删除itheima文件夹？</p><p>扩展：Ctrl + C在Linux下的使用方式</p><blockquote><p>在Linux操作系统中，Ctrl + C不是复制，而是中断某个操作</p></blockquote><p>总结：</p><p># rm  文件名称</p><p># rm  文件名称1  文件名称2  文件名称3 … </p><p># rm  -f   文件名称     =&gt;    强制删除，不提示</p><p># rm  -rf   文件夹名称 =&gt;    递归删除文件夹</p><h3 id="②-扩展：rm-rf-，一定要慎重"><a href="#②-扩展：rm-rf-，一定要慎重" class="headerlink" title="② 扩展：rm  -rf   /*，一定要慎重"></a>② 扩展：rm  -rf   /*，一定要慎重</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /*    =&gt;   代表删除根目录下的所有文件（如果没有备份，恢复的几率不高）rm ：删除-r ：递归删除（无论文件夹是否为空）-f ：强制删除不提示/  ：代表根分区*  ：所有<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、复制操作"><a href="#5、复制操作" class="headerlink" title="5、复制操作"></a>5、复制操作</h2><p>① cp复制操作</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp [选项] 源文件或文件夹 目标路径选项说明：-r ：递归复制，主要针对文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>cp = copy复制</p></blockquote><p>案例：把readme.txt文件从当前目录复制一份放到/tmp文件夹中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp readme.txt /tmp/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>② cp复制并重命名文件</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp [选项] 源文件或文件夹 目标路径/新文件或文件夹的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把readme.txt文件从当前目录复制一份放到/tmp文件夹中并重命名为readme.txt.bak</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp readme.txt /tmp/readme.txt.bak<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>③ cp复制文件夹到指定路径</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cp -r 源文件夹名称 目标路径/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把shop目录连通其内部的文件统一复制到/tmp目录下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir shop# touch shop/index.php shop/admin.php shop/config.php# cp -r shop /tmp/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结：-3"><a href="#总结：-3" class="headerlink" title="总结："></a>总结：</h2><p>复制文件# cp  源文件名称  指定路径</p><p>复制文件并重命名# cp  源文件名称 指定路径/新文件名称</p><p>复制文件夹# cp -r  源文件夹  指定路径</p><h2 id="6、剪切操作"><a href="#6、剪切操作" class="headerlink" title="6、剪切操作"></a>6、剪切操作</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mv 源文件或文件夹 目标路径/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>mv = move，剪切、移动的含义</p></blockquote><p>案例：把readme.txt文件剪切到/tmp目录下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># rm -rf /tmp/readme.txt# mv readme.txt /tmp/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把shop文件夹移动到/usr/local/nginx目录下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir /usr/local/nginx# mv shop /usr/local/nginx/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7、重命名操作"><a href="#7、重命名操作" class="headerlink" title="7、重命名操作"></a>7、重命名操作</h2><p>什么是重命名？简单来说，就是给一个文件或文件夹更改名称</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mv  源文件或文件夹名称  新文件或文件夹的名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把readme.txt文件更名为README.md文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mv readme.txt README.md<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把shop文件目录更名为wechat目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># mkdir shop# mv shop wechat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>总结：</p><p>剪切文件# mv  源文件名称  目标路径/</p><p>剪切文件夹# mv 源文件夹名称 目标路径/</p><p>重命名# mv  源文件或文件夹名称  新文件或文件夹名称</p><h2 id="8、打包压缩与解压缩"><a href="#8、打包压缩与解压缩" class="headerlink" title="8、打包压缩与解压缩"></a>8、打包压缩与解压缩</h2><h3 id="①-几个概念"><a href="#①-几个概念" class="headerlink" title="① 几个概念"></a>① 几个概念</h3><p><strong>打包</strong>：默认情况下，Linux的压缩概念一次只能压缩一个文件。针对多文件或文件夹无法进行直接压缩。所以需要提前对多个文件或文件夹进行打包，这样才可以进行压缩操作。</p><p>1.txt  5MB</p><p>2.txt  10MB</p><p>3.txt  15MB</p><p>1.txt + 2.txt + 3.txt  =  打包  =  123.tar = 30MB</p><blockquote><p>打包只是把多个文件或文件夹打包放在一个文件中，但是并没有进行压缩，所以其大小还是原来所有文件的总和。</p></blockquote><p><strong>压缩</strong>：也是一个文件和目录的集合，且这个集合也被存储在一个文件中，但它们的不同之处在于，压缩文件所占用的磁盘空间<strong>比集合中所有文件大小的总和要小。</strong></p><p>1.txt  5MB</p><p>2.txt  10MB</p><p>3.txt  15MB</p><p>1.txt + 2.txt + 3.txt = 压缩 = 123.tar.gz = 20MB（体积变小了）</p><h3 id="②-Linux打包操作"><a href="#②-Linux打包操作" class="headerlink" title="② Linux打包操作"></a>② Linux打包操作</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar [选项]  打包后的名称.tar  多个文件或文件夹选项说明：-c ：打包-f ：filename，打包后的文件名称-v ：显示打包的进度-u ：update缩写，更新原打包文件中的文件（了解）-t ：查看打包的文件内容（了解）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：把a.txt、b.txt、c.txt文件打包到abc.tar文件中</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -cvf abc.tar a.txt b.txt c.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把wechat文件夹进行打包wechat.tar</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -cvf wechat.tar wechat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="③-tar-tf以及tar-uf"><a href="#③-tar-tf以及tar-uf" class="headerlink" title="③ tar -tf以及tar -uf"></a>③ tar -tf以及tar -uf</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -tf 打包后的文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主要功能：查看tar包中的文件信息</p><p>案例：查看abc.tar包中的文件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -tf abc.tar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -uf 打包后的文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>u = update，更新，如果还想往tar包中更新或追加内容都可以通过-u选项</p></blockquote><p>案例：向abc.tar包中添加一个d.txt文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># touch d.txt# tar -uf abc.tar d.txt查看是否添加成功# tar -tf abc.tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>扩展：如何把tar包中的文件释放出来</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">打包# tar -cf  abc.tar  a.txt  b.txt  c.txt打包 =&gt; 释放（-c 变成 -x）释放# tar -xf  abc.tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="④-打包并压缩（学习的重点）"><a href="#④-打包并压缩（学习的重点）" class="headerlink" title="④ 打包并压缩（学习的重点）"></a>④ 打包并压缩（学习的重点）</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar [选项]  压缩后的压缩包名称  要压缩的文件或文件夹选项说明：-cf ：对文件或文件夹进行打包-v  ：显示压缩进度-z：使用gzip压缩工具把打包后的文件压缩为.gz-j  ：使用bzip2压缩工具把打包后的文件压缩为.bz2-J：使用xz压缩工具把打包后的文件压缩为.xz压缩速度：gzip &gt; bzip2 &gt; xz压缩率：gzip &lt; bzip2 &lt; xz100M   90M     80M  70M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：把a.txt、b.txt、c.txt文件打包并压缩为abc.tar.gz</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zcf abc.tar.gz a.txt b.txt c.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把wechat文件夹压缩为wechat.tar.gz格式的压缩包</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zcf wechat.tar.gz wechat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="⑤-对压缩包进行解压"><a href="#⑤-对压缩包进行解压" class="headerlink" title="⑤ 对压缩包进行解压"></a>⑤ 对压缩包进行解压</h3><p>解压过程非常简单，就是把压缩的参数中的c换成x就可以实现解压缩了</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">*.tar.gz格式的压缩包# tar -zxf 名称.tar.gz*.tar.bz2格式的压缩包# tar -jxf 名称.tar.bz2*.tar.xz格式的压缩包# tar -Jxf 名称.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：把abc.tar.gz格式的压缩包进行解压缩操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zxf abc.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把wechat.tar.gz格式的压缩包进行解压缩操作</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zxf wechat.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="9、zip压缩与解压缩"><a href="#9、zip压缩与解压缩" class="headerlink" title="9、zip压缩与解压缩"></a>9、zip压缩与解压缩</h2><h3 id="①-zip压缩"><a href="#①-zip压缩" class="headerlink" title="① zip压缩"></a>① zip压缩</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># zip [选项] 压缩后的文件名称.zip  文件或文件夹选项说明：-r ：递归压缩，主要针对的是文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Linux下已经有gzip、bzip2以及xz压缩命令了，为什么还需要使用zip压缩呢？</p><p>答：zip格式在Windows以及Linux中都是可以正常使用的。</p></blockquote><p>案例：把a.txt、b.txt、c.txt进行压缩为abc.zip</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># zip abc.zip a.txt b.txt c.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把wechat文件夹压缩为wechat.zip</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># zip -r wechat.zip wechat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="②-unzip解压缩"><a href="#②-unzip解压缩" class="headerlink" title="② unzip解压缩"></a>② unzip解压缩</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># unzip 压缩包名称=&gt;     解压到当前目录# unzip 压缩包名称 -d 指定路径=&gt;   解压到指定路径下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：对abc.zip文件进行解压缩</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># unzip abc.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把wechat.zip解压到/usr/local/nginx目录下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># unzip wechat.zip -d /usr/local/nginx/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="总结：-4"><a href="#总结：-4" class="headerlink" title="总结："></a>总结：</h2><p>在Linux操作系统中，其拥有很多压缩工具，如gzip、bzip2、xz等等，但是其有一个缺点：</p><p>一次只能压缩一个文件（而且无法压缩文件夹）</p><p>① 打包，把一个或多个文件打成tar包，并不是压缩，只是把文件合并在一个tar文件中</p><p>1.txt  5MB</p><p>2.txt  10MB</p><p>3.txt  15MB</p><p>打包123.tar = 5MB + 10MB + 15MB = 30MB</p><p>为什么要打包，就是为了后期的压缩操作。</p><p>② 打包并压缩</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zcf 压缩包名称.tar.gz 文件或文件夹名称# tar -jcf 压缩包名称.tar.bz2 文件或文件夹名称# tar -Jcf 压缩包名称.tar.xz 文件或文件夹名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>③ 解压缩</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar 把c参数更换为x，就可以实现解压缩  压缩包名称.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>扩展：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zxf 压缩包名称.tar.gz [参数] 指定路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第一种解决思路：随用随查，百度、Google</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tar -zxf 压缩包名称.tar.gz -C 指定路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二种解决思路：可以使用man命令（manual缩写，手册）</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># man tar命令# tar -zxf 压缩包名称.tar.gz -C 指定路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>④ zip压缩与解压缩</p><p>给我们提供一种既可以在Windows中使用的，也可以提供一种在Linux中使用的通用的压缩格式。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># zip [-r]  压缩包名称.zip  要压缩的文件或文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解压缩：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># unzip 压缩包名称.zip  -d 指定路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux的基本操作</title>
      <link href="/2023/12/22/linux-de-ji-ben-cao-zuo/"/>
      <url>/2023/12/22/linux-de-ji-ben-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统使用注意"><a href="#Linux系统使用注意" class="headerlink" title="Linux系统使用注意"></a>Linux系统使用注意</h1><h2 id="1、Linux严格区分大小写"><a href="#1、Linux严格区分大小写" class="headerlink" title="1、Linux严格区分大小写"></a>1、Linux严格区分大小写</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Linux 和Windows不同，Linux严格区分大小写的，包括文件名和目录名、命令、命令选项、配置文件设置选项等。例如，Win7 系统桌面上有文件夹叫做Test，当我们在桌面上再新建一个名为 test 的文件夹时，系统会提示文件夹命名冲突；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Windows演示：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312104935449.png" alt="image-20200312104935449"></p><p>Linux演示：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312105002814.png" alt="image-20200312105002814"></p><p>由以上图解可知：Linux是一个非常严谨的操作系统，严格区分大小写。</p><h2 id="2、Linux文件”扩展名”"><a href="#2、Linux文件”扩展名”" class="headerlink" title="2、Linux文件”扩展名”"></a>2、Linux文件”扩展名”</h2><blockquote><p>在Linux操作系统中，与Windows不同，其文件的类型不是通过扩展名来进行区分的！</p></blockquote><p>我们都知道，Windows 是依赖扩展名区分文件类型的，比如，”.txt” 是文本文件、”.exe” 是执行文件，但 Linux 不是。</p><p> Linux 系统通过==权限位标识==来确定文件类型，常见的文件类型有普通文件、目录、链接文件、块设备文件、字符设备文件等几种。Linux 的可执行文件就是普通文件被赋予了可执行权限。</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312105800243.png" alt="image-20200312105800243"></p><p>Linux系统中常见的后缀名称：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Linux 中的一些特殊文件还是要求写 "扩展名" 的，但 Linux 不依赖扩展名来识别文件类型，写这些扩展名是为了帮助运维人员来区分不同的文件类型。这样的文件扩展名主要有以下几种：压缩包：Linux 下常见的压缩文件名有 *.gz、*.bz2、*.zip、*.tar.gz、*.tar.bz2、*.tgz 等。为什么压缩包一定要写扩展名呢？很简单，如果不写清楚扩展名，那么管理员不容易判断压缩包的格式，虽然有命令可以帮助判断，但是直观一点更加方便。就算没写扩展名，在 Linux 中一样可以解压缩，不影响使用。二进制软件包：CentOS 中所使用的二进制安装包是 RPM 包，所有的 RPM 包都用".rpm"扩展名结尾，目的同样是让管理员一目了然。=&gt; 类似Windows中的exe文件程序文件：Shell 脚本一般用 ".sh" 扩展名结尾。=&gt; check_network.sh网页文件：网页文件一般使用 ".php" 等结尾，不过这是网页服务器的要求，而不是 Linux 的要求。.html/.css/.js/.jsp/.php/.py =&gt; 网页文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>① Linux操作系统不以“扩展名”来判断文件的类型，而是通过权限位标识符来进行判断</p></blockquote><blockquote><p>② 有一些特殊的文件，有扩展名称=&gt;压缩包、二进制软件包、程序文件、网页文件</p></blockquote><h2 id="3、Linux中所有内容以文件形式保存"><a href="#3、Linux中所有内容以文件形式保存" class="headerlink" title="3、Linux中所有内容以文件形式保存"></a>3、Linux中所有内容以文件形式保存</h2><p>在Linux系统中，一切皆文件！</p><blockquote><p>在Windows是文件的，在Linux下也是文件。在Windows中不是文件的，在Linux系统中也是文件。</p></blockquote><p>问题：我们目前还没有学习权限标识符，怎么判断文件的类型呢？</p><p>答：可以通过文件的颜色</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312113307247.png" alt="image-20200312113307247"></p><p>然后使用ls命令，查看文件的颜色</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># lsl : L的小写形式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>普通文件：通过ls命令查看时，如果显示<font color="red">黑色</font>，代表其是一个普通的文件</p><p>文件夹：通过ls命令查看时，如果显示<font color="red">天蓝色</font>，代表是一个文件夹</p><h2 id="4、Linux中存储设备都必须在挂载之后才能使用"><a href="#4、Linux中存储设备都必须在挂载之后才能使用" class="headerlink" title="4、Linux中存储设备都必须在挂载之后才能使用"></a>4、Linux中存储设备都必须在挂载之后才能使用</h2><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312114423821.png" alt="image-20200312114423821"></p><p>Windows：分区+格式化</p><p>Linux操作系统：分区+格式化+挂载，存储设备必须挂载后才能使用（硬盘、光盘、U盘）</p><blockquote><p>mount命令： mount   空格   /dev/sda1  空格  /mnt/file</p></blockquote><h1 id="Linux系统的目录结构（重要）"><a href="#Linux系统的目录结构（重要）" class="headerlink" title="Linux系统的目录结构（重要）"></a>Linux系统的目录结构（重要）</h1><h2 id="1、Linux分区与Windows分区"><a href="#1、Linux分区与Windows分区" class="headerlink" title="1、Linux分区与Windows分区"></a>1、Linux分区与Windows分区</h2><p>Linux 系统不同于 Windows，没有 C 盘、D 盘、E 盘那么多的盘符，只有一个==根目录（/）==，所有的文件（资源）都存储在以==根目录（/）==为树根的==树形==目录结构中。</p><p>Windows：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312115814989.png" alt="image-20200312115814989"></p><p>Linux：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312115750006.png" alt="image-20200312115750006"></p><h2 id="2、Linux系统文件架构"><a href="#2、Linux系统文件架构" class="headerlink" title="2、Linux系统文件架构"></a>2、Linux系统文件架构</h2><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312115851811.png" alt="image-20200312115851811"></p><p> 在 Linux 根目录（/）下包含很多的子目录，称为一级目录。<br>例如 bin、boot、dev 等。</p><p>同时，各一级目录下还含有很多子目录，称为二级目录。<br>例如 /bin/bash、/bin/ed 等。</p><h2 id="3、Linux系统的文件目录用途"><a href="#3、Linux系统的文件目录用途" class="headerlink" title="3、Linux系统的文件目录用途"></a>3、Linux系统的文件目录用途</h2><p>/bin：系统命令目录</p><p>/sbin：超级命令目录，只能超级管理员可以执行的命令</p><p>/boot：系统目录，类似于Windows中的C盘</p><p>/dev ：设备文件目录，硬盘、光驱、U盘都属于设备文件，/dev/sr0代表光驱设备。注意，次目录下的文件没有办法直接使用，必须先挂载</p><p>/etc ：非常重要，代表系统的配置文件目录。大部分软件安装完成后，其配置文件都存放在此目录</p><p>/home：普通用户的家目录，用户登录后会自动切换到此目录</p><p>/root：超级管理员的家目录，超级管理员登录后会自动切换到此目录</p><p>/media：挂载目录，早期Linux挂载目录，用于挂载光盘以及软盘</p><p>/mnt：挂载目录，用来挂载额外的设备，如 U 盘、移动硬盘和其他操作系统的分区</p><p>/opt ：第三方软件目录，这个目录是放置和安装其他软件的位置，手工安装的源码包软件都可以安装到这个目录中。不过笔者还是习惯把软件放到 /usr/local/ 目录中，也就是说，/usr/local/ 目录也可以用来安装软件</p><p>/usr ：系统程序目录，类似Windows中的Program Files</p><p>/proc：虚拟文件系统。该目录中的数据并不保存在硬盘上，而是保存到内存中。主要保存系统的内核、进程、外部设备状态和网络状态等。</p><p>/tmp ：临时文件目录，在该目录下，所有用户都可以访问和写入。建议此目录中不能保存重要数据，最好每次开机都把该目录清理</p><p>/var ：经常变化的文件目录，网页文件、数据文件、日志文件</p><h1 id="Linux入门级命令"><a href="#Linux入门级命令" class="headerlink" title="Linux入门级命令"></a>Linux入门级命令</h1><h2 id="1、开启终端"><a href="#1、开启终端" class="headerlink" title="1、开启终端"></a>1、开启终端</h2><p>问题：什么是终端（Terminal）</p><p>答：Linux操作系统中用于输入命令的地方</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312145513405.png" alt="image-20200312145513405"></p><p>打开后，效果如下图所示：</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312145943049.png" alt="image-20200312145943049"></p><h2 id="2、Linux命令格式"><a href="#2、Linux命令格式" class="headerlink" title="2、Linux命令格式"></a>2、Linux命令格式</h2><p>什么是Linux 的命令？</p><p>答：就是指在Linux 终端（命令行）中输入的内容就称之为命令。</p><p>一个完整的命令的标准格式：Linux 通用的格式</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># 命令（空格） [选项]（空格）[参数]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是有些命令比较特殊，可能没有选项也没有参数</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># pwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还有一些命令，有命令有选项，但是没有参数</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还有一些命令，命令+选项+参数全都有</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># tail -n 3 readme.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、扩展：Linux下的命令补全"><a href="#3、扩展：Linux下的命令补全" class="headerlink" title="3、扩展：Linux下的命令补全"></a>3、扩展：Linux下的命令补全</h2><p>键盘上有一个按键：Tab键</p><p><img src="/../assets/blog_res/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.assets/image-20200312151903965.png" alt="image-20200312151903965"></p><p>当我们在Linux系统的终端中，输入命令时，可以无需完整的命令，只需要记住命令的前几个字母即可，然后按Tab键，系统会自动进行补全操作。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># syst + Tab键# systemc + Tab键# systemctl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>有些命令可能都以某几个字母开头，这个时候，只需要按两次Tab键，其就会显示所有命令。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># clea + Tab键 + Tab键<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Tab键的功能特别强大：其不仅可以补全命令还可以补全Linux的文件路径</p></blockquote><h2 id="4、切换用户"><a href="#4、切换用户" class="headerlink" title="4、切换用户"></a>4、切换用户</h2><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># su - rootPassword:123456[root@localhost ~]# 切换成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>扩展：-横杠作用是什么？答：-横杠代表切换用户的同时，切换用户的家目录</p></blockquote><h2 id="5、uname命令"><a href="#5、uname命令" class="headerlink" title="5、uname命令"></a>5、uname命令</h2><p>主要功能：获取计算机操作系统相关信息</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># uname -a选项说明：-a ：all缩写，代表显示所有信息，获取全部的系统信息（类型、全部主机名、内核版本、发布时间、开源计划）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="6、ls命令"><a href="#6、ls命令" class="headerlink" title="6、ls命令"></a>6、ls命令</h2><h3 id="☆-用法一"><a href="#☆-用法一" class="headerlink" title="☆ 用法一"></a>☆ 用法一</h3><p>主要功能：ls完整写法list show，以平铺的形式显示当前目录下的文件信息</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="☆-用法二"><a href="#☆-用法二" class="headerlink" title="☆ 用法二"></a>☆ 用法二</h3><p>主要功能：显示其他目录下的文件信息</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls 其他目录的绝对路径或相对路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>扩展：ls后面跟的路径既可以是绝对路径也可以是相对路径</p></blockquote><p><strong>绝对路径</strong>：不管当前工作路径是在哪，==目标路径都会从“/”磁盘根下开始==。<br>案例：访问itheima用户的家目录，查看有哪些文件</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls /home/itheima<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color="red">绝对路径必须以左斜杠开头，一级一级向下访问，不能越级</font></p><p><strong>相对路径</strong>：除绝对路径之外的路径称之为相对路径，相对路径得有一个相对物（当前工作路径）。</p><p>只要看到路径以“/”开头则表示该路径是绝对路径，除了以“/”开头的路径称之为相对路径。</p><p>当前位置：/home/itheima目录下</p><p>../：表示上级目录（上一级）</p><p>./ ：表示当前目录（同级），普通文件./可以省略，可执行文件（绿色）必须加./</p><p>文件夹名称/：表示下级目录（下一级），注意这个斜杠/</p><h3 id="☆-用法三"><a href="#☆-用法三" class="headerlink" title="☆ 用法三"></a>☆ 用法三</h3><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># ls [选项] [路径]选项说明：-l ：ls -l，代表以详细列表的形式显示当前或其他目录下的文件信息(简写命令=&gt;ll)-h ：ls -lh，通常与-l结合一起使用，代表以较高的可读性显示文件的大小(kb/mb/gb)-a ：ls -a，a是all缩写，代表显示所有文件（也包含隐藏文件=&gt;大部分以.开头）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>计算机中的单位：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># 1TB = 1024GB# 1GB = 1024MB# 1MB = 1024KB# 1KB（千字节） = 1024B（字节）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、pwd命令"><a href="#7、pwd命令" class="headerlink" title="7、pwd命令"></a>7、pwd命令</h2><p>主要功能：pwd=print working directory，打印当前工作目录（告诉我们，我们当前位置）</p><p>基本语法：</p> <pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># pwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8、cd命令"><a href="#8、cd命令" class="headerlink" title="8、cd命令"></a>8、cd命令</h2><p>主要功能：cd全称change directory，切换目录（从一个目录跳转到另外一个目录）</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd [路径]选项说明：路径既可以是绝对路径，也可以是相对路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例一：切换到/usr/local这个程序目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /usr/local<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例二：比如我们当前在/home/itheima下，切换到根目录/下</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd /home/itheima# cd ../../<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例三：当我们在某个路径下，如何快速回到自己的家目录</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># cd或# cd ~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="9、clear命令"><a href="#9、clear命令" class="headerlink" title="9、clear命令"></a>9、clear命令</h2><p>主要功能：清屏</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># clear<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="10、reboot命令"><a href="#10、reboot命令" class="headerlink" title="10、reboot命令"></a>10、reboot命令</h2><p>主要功能：立即重启计算机</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># reboot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="11、shutdown命令"><a href="#11、shutdown命令" class="headerlink" title="11、shutdown命令"></a>11、shutdown命令</h2><p>主要功能：立即关机或延迟关机</p><p>立即关机基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># shutdown -h 0或now# shutdown -h 0# shutdown -h now选项说明：-h ：halt缩写，代表关机<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在Linux系统中，立即关机除了使用shutdown -h 0以外还可以使用halt -p命令</p></blockquote><p>延迟关机基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># shutdown -h 分钟数代表多少分钟后，自动关机<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例1：10分钟后自动关机</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># shutdown -h 10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例2：后悔了，取消关机</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">光标一直不停的闪，取消关机# 按Ctrl + C（CentOS6，中断关机。CentOS7中还需要使用shutdown -c命令）# shutdown -c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="12、type命令"><a href="#12、type命令" class="headerlink" title="12、type命令"></a>12、type命令</h2><p>主要功能：主要用来结合help命令，用于判断命令的类型（属于内部命令还是外部命令）</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># type 命令内部命令：命令 is a shell builtin外部命令：没有显示以上信息的就是外部命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="13、history命令"><a href="#13、history命令" class="headerlink" title="13、history命令"></a>13、history命令</h2><p>主要功能：显示系统以前输入的前1000条命令</p><p>基本语法：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># history<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="14、hostnamectl命令"><a href="#14、hostnamectl命令" class="headerlink" title="14、hostnamectl命令"></a>14、hostnamectl命令</h2><p>主要功能：用于设置计算机的主机名称（给计算机起个名字），此命令式CentOS7新增的命令。</p><p>hostnamectl ： hostname + control</p><h3 id="☆-获取计算机的主机名称"><a href="#☆-获取计算机的主机名称" class="headerlink" title="☆ 获取计算机的主机名称"></a>☆ 获取计算机的主机名称</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnameCentOS6# hostnamectl  CentOS7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="☆-设置计算机的主机名称"><a href="#☆-设置计算机的主机名称" class="headerlink" title="☆ 设置计算机的主机名称"></a>☆ 设置计算机的主机名称</h3><p>Centos7中主机名分3类，静态的（static）、瞬态的（transient）、和灵活的（pretty）。</p><p>① 静态static主机名称：电脑关机或重启后，设置的名称亦然有效</p><p>② 瞬态transient主机名称：临时主机名称，电脑关机或重启后，设置的名称就失效了</p><p>③ 灵活pretty主机名称：可以包含一些特殊字符</p><p>CentOS 7中和主机名有关的文件为/etc/hostname，它是在系统初始化的时候被读取的，并且内核根据它的内容设置瞬态主机名。</p><blockquote><p>更改主机名称，让其永久生效？① 使用静态的 ② 改/etc/hostname文件</p></blockquote><h4 id="①-瞬态主机名称（临时设置）"><a href="#①-瞬态主机名称（临时设置）" class="headerlink" title="① 瞬态主机名称（临时设置）"></a>① 瞬态主机名称（临时设置）</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl --transient set-hostname 主机名称主机名称 建议遵循 FQDN协议（功能+公司域名）web01.itcast.cnweb02.itcast.cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：临时设置主机名称为yunwei.itcast.cn</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl --transient set-hostname yunwei.itcast.cn# su 立即生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="②-静态主机名称（永久生效）"><a href="#②-静态主机名称（永久生效）" class="headerlink" title="② 静态主机名称（永久生效）"></a>② 静态主机名称（永久生效）</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl --static set-hostname 主机名称温馨提示：--static也可以省略不写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：把计算机的主机名称永久设置为yunwei.itcast.cn</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl --static set-hostname yunwei.itcast.cn# su 立即生效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="③-灵活主机名称（主机名称可以添加特殊字符）"><a href="#③-灵活主机名称（主机名称可以添加特殊字符）" class="headerlink" title="③ 灵活主机名称（主机名称可以添加特殊字符）"></a>③ 灵活主机名称（主机名称可以添加特殊字符）</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl --pretty set-hostname 主机名称（包含特殊字符）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：把计算机的主机名称通过灵活设置，设置为yunwei’s server01</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"># hostnamectl --pretty set-hostname "yunwei's server01"查看灵活的主机名称# hostnamectl --pretty<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客创建完善参考资料</title>
      <link href="/2023/12/22/bo-ke-chuang-jian-wan-shan-can-kao-zi-liao/"/>
      <url>/2023/12/22/bo-ke-chuang-jian-wan-shan-can-kao-zi-liao/</url>
      
        <content type="html"><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>1.hexo+github搭建博客(超级详细版，精细入微)</p><p><a href="https://cloud.tencent.com/developer/article/1577027">hexo+github搭建博客(超级详细版，精细入微)-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>2.解决问题参考方案：<a href="https://blog.csdn.net/qq_43819439/article/details/118309688">使用hexo/git搭建博客时注意的几点_you should configure deployment settings in _confi-CSDN博客</a></p><p>3.博客搭建参考：<a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#!">博客搭建+美化（巨细版本） | 兴平 (crazyyuchi.github.io)</a></p><p>4.博客搭建参考：【[教程]Hexo &amp; Github搭建自己的专属博客】 <a href="https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&amp;vd_source=5cd149d1723aac0eeb1b0c9b1ca86059">https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&amp;vd_source=5cd149d1723aac0eeb1b0c9b1ca86059</a></p><p>5.解决问题参考方案：<a href="https://zhuanlan.zhihu.com/p/339370999?utm_id=0">Github仓库master分支到main分支迁移指南 - 知乎 (zhihu.com)</a></p><p>6.参考资料：<a href="https://hexo.io/zh-cn/docs/syntax-highlight.html#Highlight-js">代码高亮 | Hexo</a></p><p>7.参考资料：<a href="https://cloud.tencent.com/developer/article/1952241">6.hexo插件篇（必看）-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>8.页面：<a href="https://cloud.tencent.com/developer/article/1866822">Hexo-导航页-腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p>9.参考资料：<a href="https://liyangzone.com/article/2019-07-22-hexo-blog-add-gallery-tutorial/">hexo博客添加一级分类相册功能 | liyang’s blog (liyangzone.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后续博客待定补充</title>
      <link href="/2023/12/22/hou-xu-bo-ke-dai-ding-bu-chong/"/>
      <url>/2023/12/22/hou-xu-bo-ke-dai-ding-bu-chong/</url>
      
        <content type="html"><![CDATA[<h2 id="后续待补充："><a href="#后续待补充：" class="headerlink" title="后续待补充："></a>后续待补充：</h2><h3 id="一：相册问题"><a href="#一：相册问题" class="headerlink" title="一：相册问题"></a>一：相册问题</h3><p>参考资料：<a href="https://liyangzone.com/article/2019-07-22-hexo-blog-add-gallery-tutorial/">hexo博客添加一级分类相册功能 | liyang’s blog (liyangzone.com)</a></p><p>遭遇困难：matery不好找到添加相册页面的帮助页面，从大佬那边也没看到</p><h3 id="二：导航网站补充"><a href="#二：导航网站补充" class="headerlink" title="二：导航网站补充"></a>二：导航网站补充</h3><p>个人收藏整理，防止意外遗失</p><h3 id="三：学习资料上传整理"><a href="#三：学习资料上传整理" class="headerlink" title="三：学习资料上传整理"></a>三：学习资料上传整理</h3><p>linux学习资料上传，有问题方便快速搜索</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航页面</title>
      <link href="/2023/12/22/dao-hang-ye-mian/"/>
      <url>/2023/12/22/dao-hang-ye-mian/</url>
      
        <content type="html"><![CDATA[<h1 id="导航页面的创建"><a href="#导航页面的创建" class="headerlink" title="导航页面的创建"></a>导航页面的创建</h1><p>创建缘由：</p><p>1.好玩</p><p>2.用来收藏自己需要的网站链接，防止意外丢失/遗忘</p><p>3.练手</p><h1 id="创建步骤："><a href="#创建步骤：" class="headerlink" title="创建步骤："></a>创建步骤：</h1><h2 id="Hexo添加导航页"><a href="#Hexo添加导航页" class="headerlink" title="Hexo添加导航页"></a>Hexo添加导航页</h2><h3 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h3><p>首先新建页面，执行下面的命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page navigate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改<code>navigate</code>目录下的<code>index.md</code>的格式</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span><span class="token literal-property property">title</span><span class="token operator">:</span> 导航<span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">18</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">14</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"navigate"</span><span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token string">"navigate"</span><span class="token operator">--</span><span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="在主题配置文件中添加导航"><a href="#在主题配置文件中添加导航" class="headerlink" title="在主题配置文件中添加导航"></a>在主题配置文件中添加导航</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"># main menu navigation url and icon# 配置菜单导航的名称、路径和图标icon<span class="token punctuation">.</span><span class="token literal-property property">menu</span><span class="token operator">:</span>  <span class="token literal-property property">Index</span><span class="token operator">:</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token operator">/</span>    <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>home  <span class="token literal-property property">标签</span><span class="token operator">:</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token operator">/</span>tags    <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>tags  <span class="token literal-property property">时光轴</span><span class="token operator">:</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token operator">/</span>archives    <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>hourglass<span class="token operator">-</span>half  <span class="token literal-property property">留言板</span><span class="token operator">:</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token operator">/</span>contact    <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>comments  <span class="token literal-property property">关于</span><span class="token operator">:</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token operator">/</span>about    <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>user<span class="token operator">-</span>circle    <span class="token literal-property property">友情链接</span><span class="token operator">:</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token operator">/</span>friends    <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>address<span class="token operator">-</span>book  <span class="token literal-property property">Select</span><span class="token operator">:</span>    <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>life<span class="token operator">-</span>ring    <span class="token literal-property property">children</span><span class="token operator">:</span>      <span class="token operator">-</span> name<span class="token operator">:</span> 导航        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token operator">/</span>navigate        <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>location<span class="token operator">-</span>arrow      <span class="token operator">-</span> name<span class="token operator">:</span> 相册        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token operator">/</span>galleries        <span class="token literal-property property">icon</span><span class="token operator">:</span> fas fa<span class="token operator">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加navigate-ejs页面"><a href="#添加navigate-ejs页面" class="headerlink" title="添加navigate.ejs页面"></a>添加<code>navigate.ejs</code>页面</h3><p>在 <code>matery/layout</code> 下新建 <code>navigate.ejs</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>style<span class="token operator">&gt;</span>dd<span class="token punctuation">,</span>dl<span class="token punctuation">,</span>dt<span class="token punctuation">,</span>form<span class="token punctuation">,</span>h1<span class="token punctuation">,</span>h2<span class="token punctuation">,</span>h3<span class="token punctuation">,</span>h4<span class="token punctuation">,</span>h5<span class="token punctuation">,</span>h6<span class="token punctuation">,</span>li<span class="token punctuation">,</span>p<span class="token punctuation">,</span>ul<span class="token punctuation">{</span><span class="token literal-property property">margin</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>padding<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>font<span class="token operator">-</span>size<span class="token operator">:</span>14px<span class="token punctuation">;</span>font<span class="token operator">-</span>weight<span class="token operator">:</span><span class="token number">400</span><span class="token punctuation">}</span>img<span class="token punctuation">{</span>border<span class="token operator">-</span>style<span class="token operator">:</span>none<span class="token punctuation">}</span>li<span class="token punctuation">{</span>list<span class="token operator">-</span>style<span class="token operator">:</span>none<span class="token punctuation">;</span>float<span class="token operator">:</span>left<span class="token punctuation">}</span>a<span class="token punctuation">{</span>text<span class="token operator">-</span>decoration<span class="token operator">:</span>none<span class="token punctuation">}</span><span class="token punctuation">.</span>card<span class="token punctuation">{</span>background<span class="token operator">-</span>color<span class="token operator">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">229</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>width<span class="token operator">:</span><span class="token number">96</span><span class="token operator">%</span><span class="token punctuation">;</span>margin<span class="token operator">-</span>left<span class="token operator">:</span><span class="token number">2</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">.</span>baidu<span class="token punctuation">{</span><span class="token literal-property property">float</span><span class="token operator">:</span>left<span class="token punctuation">;</span>margin<span class="token operator">-</span>left<span class="token operator">:</span>100px<span class="token punctuation">}</span><span class="token punctuation">.</span>baidu form<span class="token punctuation">{</span><span class="token literal-property property">position</span><span class="token operator">:</span>relative<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box ul<span class="token punctuation">{</span><span class="token literal-property property">height</span><span class="token operator">:</span>40px<span class="token punctuation">;</span>position<span class="token operator">:</span>absolute<span class="token punctuation">;</span>left<span class="token operator">:</span><span class="token operator">-</span>1px<span class="token punctuation">;</span>top<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>z<span class="token operator">-</span>index<span class="token operator">:</span><span class="token number">9999</span><span class="token punctuation">;</span>background<span class="token operator">:</span>#fff<span class="token punctuation">;</span>border<span class="token operator">:</span>1px solid #ccc<span class="token punctuation">;</span>border<span class="token operator">-</span>top<span class="token operator">:</span>none<span class="token punctuation">;</span>overflow<span class="token operator">:</span>hidden<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box li<span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span>60px<span class="token punctuation">;</span>line<span class="token operator">-</span>height<span class="token operator">:</span>40px<span class="token punctuation">;</span>font<span class="token operator">-</span>size<span class="token operator">:</span>14px<span class="token punctuation">;</span>color<span class="token operator">:</span>#<span class="token number">484848</span><span class="token punctuation">;</span>border<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>cursor<span class="token operator">:</span>pointer<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box li<span class="token operator">:</span>hover<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span>#3385ff<span class="token punctuation">;</span>color<span class="token operator">:</span>#fff<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box <span class="token punctuation">.</span>this_s<span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span>#317ef3<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box <span class="token punctuation">.</span>this_s<span class="token operator">:</span>hover<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span>#fff<span class="token punctuation">;</span>color<span class="token operator">:</span>#317ef3<span class="token punctuation">}</span><span class="token punctuation">.</span>qingkong<span class="token punctuation">{</span><span class="token literal-property property">position</span><span class="token operator">:</span>absolute<span class="token punctuation">;</span>right<span class="token operator">:</span>120px<span class="token punctuation">;</span>top<span class="token operator">:</span>12px<span class="token punctuation">;</span>width<span class="token operator">:</span>18px<span class="token punctuation">;</span>height<span class="token operator">:</span>18px<span class="token punctuation">;</span>background<span class="token operator">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>border<span class="token operator">-</span>radius<span class="token operator">:</span>18px<span class="token punctuation">;</span>line<span class="token operator">-</span>height<span class="token operator">:</span>16px<span class="token punctuation">;</span>color<span class="token operator">:</span>#<span class="token number">666</span><span class="token punctuation">;</span>cursor<span class="token operator">:</span>pointer<span class="token punctuation">;</span>text<span class="token operator">-</span>align<span class="token operator">:</span>center<span class="token punctuation">;</span>font<span class="token operator">-</span>size<span class="token operator">:</span>14px<span class="token punctuation">;</span>display<span class="token operator">:</span>none<span class="token punctuation">}</span><span class="token punctuation">.</span>qingkong<span class="token operator">:</span>hover<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">.</span>qingkong<span class="token operator">:</span>active<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">.3</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">.</span>baidu<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>height<span class="token operator">:</span>110px<span class="token punctuation">;</span>margin<span class="token operator">:</span><span class="token number">0</span> auto<span class="token punctuation">;</span>background<span class="token operator">:</span><span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>padding<span class="token operator">-</span>top<span class="token operator">:</span>50px<span class="token punctuation">}</span><span class="token punctuation">.</span>baidu<span class="token operator">-</span><span class="token number">2</span> form<span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span>520px<span class="token punctuation">;</span>margin<span class="token operator">:</span><span class="token number">0</span> auto<span class="token punctuation">}</span><span class="token punctuation">.</span>baidu<span class="token operator">-</span><span class="token number">2</span> input<span class="token punctuation">{</span><span class="token literal-property property">padding</span><span class="token operator">:</span>13px 8px<span class="token punctuation">;</span>opacity<span class="token operator">:</span><span class="token number">.9</span><span class="token punctuation">;</span>font<span class="token operator">-</span>size<span class="token operator">:</span>15px<span class="token punctuation">}</span>#Select<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">{</span><span class="token literal-property property">float</span><span class="token operator">:</span>left<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">{</span>text<span class="token operator">-</span>align<span class="token operator">:</span>center<span class="token punctuation">;</span>float<span class="token operator">:</span>left<span class="token punctuation">;</span>position<span class="token operator">:</span>relative<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box<span class="token operator">-</span><span class="token number">2</span> ul<span class="token punctuation">{</span><span class="token literal-property property">height</span><span class="token operator">:</span>46px<span class="token punctuation">;</span>position<span class="token operator">:</span>absolute<span class="token punctuation">;</span>left<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>top<span class="token operator">:</span>1px<span class="token punctuation">;</span>z<span class="token operator">-</span>index<span class="token operator">:</span><span class="token number">9999</span><span class="token punctuation">;</span>background<span class="token operator">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>border<span class="token operator">:</span>1px solid #ccc<span class="token punctuation">;</span>border<span class="token operator">-</span>top<span class="token operator">:</span>none<span class="token punctuation">;</span>overflow<span class="token operator">:</span>hidden<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box<span class="token operator">-</span><span class="token number">2</span> li<span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span>60px<span class="token punctuation">;</span>line<span class="token operator">-</span>height<span class="token operator">:</span>46px<span class="token punctuation">;</span>font<span class="token operator">-</span>size<span class="token operator">:</span>15px<span class="token punctuation">;</span>color<span class="token operator">:</span>#<span class="token number">484848</span><span class="token punctuation">;</span>border<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>cursor<span class="token operator">:</span>pointer<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box<span class="token operator">-</span><span class="token number">2</span> <span class="token literal-property property">li</span><span class="token operator">:</span>hover<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span>#3385ff<span class="token punctuation">;</span>color<span class="token operator">:</span>#fff<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box<span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">.</span>this_s<span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span>#317ef3<span class="token punctuation">}</span><span class="token punctuation">.</span>Select<span class="token operator">-</span>box<span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">.</span>this_s<span class="token operator">:</span>hover<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span><span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>color<span class="token operator">:</span>#317ef3<span class="token punctuation">}</span>#kw<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span>335px<span class="token punctuation">;</span>outline<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>border<span class="token operator">:</span>1px solid #ccc<span class="token punctuation">;</span>background<span class="token operator">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>color<span class="token operator">:</span>#<span class="token number">000</span><span class="token punctuation">;</span>padding<span class="token operator">-</span>left<span class="token operator">:</span>70px<span class="token punctuation">;</span>font<span class="token operator">-</span>weight<span class="token operator">:</span><span class="token number">700</span><span class="token punctuation">}</span>#su<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span>90px<span class="token punctuation">;</span>background<span class="token operator">:</span>#00f<span class="token punctuation">;</span>border<span class="token operator">:</span>none<span class="token punctuation">;</span>border<span class="token operator">-</span>top<span class="token operator">:</span>#3385ff 1px solid<span class="token punctuation">;</span>border<span class="token operator">-</span>bottom<span class="token operator">:</span>1px solid #2d78f4<span class="token punctuation">;</span>color<span class="token operator">:</span>#fff<span class="token punctuation">;</span>cursor<span class="token operator">:</span>pointer<span class="token punctuation">;</span>outline<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span>#su<span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span>hover<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span>#00f<span class="token punctuation">;</span>border<span class="token operator">-</span>bottom<span class="token operator">:</span>1px solid #00f<span class="token punctuation">}</span>#su<span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span>active<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span>#00f<span class="token punctuation">;</span>box<span class="token operator">-</span>shadow<span class="token operator">:</span>inset 1px 1px 3px #00f<span class="token punctuation">;</span><span class="token operator">-</span>webkit<span class="token operator">-</span>box<span class="token operator">-</span>shadow<span class="token operator">:</span>inset 1px 1px 3px #00f<span class="token punctuation">}</span><span class="token punctuation">.</span>jj<span class="token operator">-</span>list<span class="token operator">-</span>tit<span class="token punctuation">{</span>font<span class="token operator">-</span>size<span class="token operator">:</span>16px<span class="token punctuation">;</span>line<span class="token operator">-</span>height<span class="token operator">:</span>25px<span class="token punctuation">;</span>color<span class="token operator">:</span>#fff<span class="token punctuation">;</span>width<span class="token operator">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>padding<span class="token operator">-</span>left<span class="token operator">:</span><span class="token number">38.5</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">.</span>jj<span class="token operator">-</span>list<span class="token operator">-</span>con<span class="token punctuation">{</span><span class="token literal-property property">overflow</span><span class="token operator">:</span>hidden<span class="token punctuation">;</span>margin<span class="token operator">:</span><span class="token number">0</span> auto<span class="token punctuation">}</span><span class="token punctuation">.</span>jj<span class="token operator">-</span>list<span class="token operator">-</span>con li<span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">31.333</span><span class="token operator">%</span><span class="token punctuation">;</span>margin<span class="token operator">:</span><span class="token number">1</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">.</span>link<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">{</span><span class="token literal-property property">display</span><span class="token operator">:</span>block<span class="token punctuation">;</span>background<span class="token operator">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">.35</span><span class="token punctuation">)</span><span class="token punctuation">;</span>color<span class="token operator">:</span>#fff<span class="token punctuation">;</span>font<span class="token operator">-</span>size<span class="token operator">:</span>13px<span class="token punctuation">;</span>text<span class="token operator">-</span>align<span class="token operator">:</span>center<span class="token punctuation">;</span>line<span class="token operator">-</span>height<span class="token operator">:</span>35px<span class="token punctuation">;</span>padding<span class="token operator">:</span>4px <span class="token number">0</span><span class="token punctuation">;</span>border<span class="token operator">-</span>radius<span class="token operator">:</span>2px<span class="token punctuation">;</span>transition<span class="token operator">:</span>all <span class="token punctuation">.</span>2s<span class="token punctuation">}</span><span class="token punctuation">.</span>link<span class="token operator">-</span><span class="token number">3</span><span class="token operator">:</span>hover<span class="token punctuation">{</span><span class="token literal-property property">background</span><span class="token operator">:</span><span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">.45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>font<span class="token operator">-</span>size<span class="token operator">:</span>15px<span class="token punctuation">;</span>font<span class="token operator">-</span>weight<span class="token operator">:</span><span class="token number">700</span><span class="token punctuation">}</span>@media only screen <span class="token function">and</span> <span class="token punctuation">(</span><span class="token parameter">max<span class="token operator">-</span>width<span class="token operator">:</span>584px</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">.</span>navi<span class="token operator">-</span>height<span class="token punctuation">{</span><span class="token literal-property property">height</span><span class="token operator">:</span>1300px<span class="token punctuation">}</span><span class="token punctuation">.</span>link<span class="token operator">-</span>box<span class="token punctuation">{</span>margin<span class="token operator">-</span>top<span class="token operator">:</span><span class="token number">5</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">.</span>large<span class="token operator">-</span>screen<span class="token punctuation">{</span><span class="token literal-property property">display</span><span class="token operator">:</span>none<span class="token punctuation">}</span><span class="token punctuation">}</span>@media only screen <span class="token function">and</span> <span class="token punctuation">(</span>min<span class="token operator">-</span>width<span class="token operator">:</span>584px<span class="token punctuation">)</span> <span class="token function">and</span> <span class="token punctuation">(</span><span class="token parameter">max<span class="token operator">-</span>width<span class="token operator">:</span>993px</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">.</span>navi<span class="token operator">-</span>height<span class="token punctuation">{</span><span class="token literal-property property">height</span><span class="token operator">:</span>800px<span class="token punctuation">}</span><span class="token punctuation">.</span>link<span class="token operator">-</span>box<span class="token punctuation">{</span>margin<span class="token operator">-</span>top<span class="token operator">:</span><span class="token number">5</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">.</span>large<span class="token operator">-</span>screen<span class="token punctuation">{</span><span class="token literal-property property">display</span><span class="token operator">:</span>none<span class="token punctuation">}</span><span class="token punctuation">}</span>@media only screen <span class="token function">and</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token operator">-</span>width<span class="token operator">:</span>993px</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">.</span>navi<span class="token operator">-</span>height<span class="token punctuation">{</span><span class="token literal-property property">position</span><span class="token operator">:</span>absolute<span class="token punctuation">;</span>width<span class="token operator">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>height<span class="token operator">:</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span>page<span class="token operator">-</span>footer<span class="token punctuation">{</span><span class="token literal-property property">display</span><span class="token operator">:</span>none<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"navi-height bg-cover pd-header"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-box container"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"baidu baidu-2 large-screen"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>form name<span class="token operator">=</span><span class="token string">"f"</span> action<span class="token operator">=</span><span class="token string">"https://www.baidu.com/"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"Select-2"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"Select-box-2"</span> id<span class="token operator">=</span><span class="token string">"baidu"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>ul style<span class="token operator">=</span><span class="token string">"height:46px"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"this_s"</span><span class="token operator">&gt;</span>百 · 度<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bing_s"</span><span class="token operator">&gt;</span>必 · 应<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"google_s"</span><span class="token operator">&gt;</span>谷 · 歌<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"baidu_s"</span><span class="token operator">&gt;</span>百 · 度<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"wd"</span> id<span class="token operator">=</span><span class="token string">"kw-2"</span> maxlength<span class="token operator">=</span><span class="token string">"100"</span> autocomplete<span class="token operator">=</span><span class="token string">"off"</span> type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"qingkong"</span> id<span class="token operator">=</span><span class="token string">"qingkong"</span> title<span class="token operator">=</span><span class="token string">"清 · 空"</span> style<span class="token operator">=</span><span class="token string">"display:none"</span><span class="token operator">&gt;</span>x<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token string">"搜 · 索"</span> id<span class="token operator">=</span><span class="token string">"su-2"</span> type<span class="token operator">=</span><span class="token string">"submit"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"keylist"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row tags-posts"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s12 m6 l4 friend-div aos-init"</span> data<span class="token operator">-</span>aos<span class="token operator">=</span><span class="token string">"zoom-in-up"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-tit"</span><span class="token operator">&gt;</span>娱乐 · 影视<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-con"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.jd.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>京东<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.taobao.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>淘宝<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.tmall.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>天猫<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://v.qq.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>腾讯视频<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.iqiyi.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>爱奇艺<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.bilibili.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>哔哩哔哩<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://music.163.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>网易云音乐<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://y.qq.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span><span class="token constant">QQ</span>音乐<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.kugou.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>酷狗音乐<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s12 m6 l4 friend-div aos-init"</span> data<span class="token operator">-</span>aos<span class="token operator">=</span><span class="token string">"zoom-in-up"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-tit"</span><span class="token operator">&gt;</span>社区 · Code<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-con"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.mobaijun.com/contact/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>留言<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://github.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>GitHub<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://coding.net/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>Coding<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://juejin.im/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>掘金<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://gitee.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>码云<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.csdn.net/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span><span class="token constant">CSDN</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.jianshu.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>简书<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://segmentfault.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>思否<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://cloud.tencent.com/developer/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>云<span class="token operator">+</span>社区<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s12 m6 l4 friend-div aos-init"</span> data<span class="token operator">-</span>aos<span class="token operator">=</span><span class="token string">"zoom-in-up"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-tit"</span><span class="token operator">&gt;</span>实用 · 工具<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-con"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://mdnice.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>Markdown编辑器<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://translate.google.cn/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>谷歌翻译<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.uupoop.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>在线<span class="token constant">PS</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.processon.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>思维导图<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://wallhaven.cc/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>超清壁纸<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://cli.im/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>二维码生成<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://tool.cc/pic-resizer/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>图片在线压缩<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.iconfont.cn/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>阿里巴巴图标库<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://my.openwrite.cn/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span><span class="token constant">OW</span>分发<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s12 m6 l4 friend-div aos-init"</span> data<span class="token operator">-</span>aos<span class="token operator">=</span><span class="token string">"zoom-in-up"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-tit"</span><span class="token operator">&gt;</span>编程 · 学习<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-con"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.oschina.net/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>开源中国<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://htmldog.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span><span class="token constant">HTML</span>狗<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.icourse163.org/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>中国大学慕课<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.imooc.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>慕课网<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.wxapp-union.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>小程序<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.runoob.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>菜鸟教程<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://blog.51cto.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>51CTO<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.shiyanlou.com/library/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>实验楼<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://spring.io/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>Spring<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s12 m6 l4 friend-div aos-init"</span> data<span class="token operator">-</span>aos<span class="token operator">=</span><span class="token string">"zoom-in-up"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-tit"</span><span class="token operator">&gt;</span>资讯 · 趋势<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-con"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.huxiu.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>虎嗅<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://insights.stackoverflow.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>技术调查<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.asciiworld.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>摸鱼<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://sspai.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>少数派<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://zh.wikihow.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>WikeHom<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.awesomes.cn/rank?sort=hot"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>前端趋势<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://github-trending.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>GitHub趋势<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.tiobe.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>编程趋势<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://trends.google.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>Google趋势<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s12 m6 l4 friend-div aos-init"</span> data<span class="token operator">-</span>aos<span class="token operator">=</span><span class="token string">"zoom-in-up"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"card"</span><span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-tit"</span><span class="token operator">&gt;</span>搜索 · 其他<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jj-list-con"</span><span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://ac.scmor.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>谷歌镜像<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.pansoso.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>网盘搜索<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://tool.mkblog.cn/music/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>音乐搜索<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.upyun.com/?utm_source=lianmeng&amp;amp;utm_medium=referral"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>又拍云<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://carbon.now.sh/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>代码图片<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.zhipin.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>Boos<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.fontawesome.com.cn/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>图标库<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.qvdv.com/tools/qvdv-guid.html"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>在线工具<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://zhongguose.com/"</span> rel<span class="token operator">=</span><span class="token string">"external nofollow noreferrer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"link-3"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">&gt;</span>中国色<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"auto"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"40px"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box-2 ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"auto"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"46px"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box li"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string">"baidu_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.baidu.com/s"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"wd"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"google_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.google.com/search"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"q"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"bing_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.bing.com/search"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"q"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".baidu form"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"action"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".this_s"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#kw"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span>_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"40px"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box-2 li"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> t<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string">"baidu_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.baidu.com/s"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"wd"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"google_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.google.com/search"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"q"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"bing_s"</span><span class="token operator">==</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token string">"https://www.bing.com/search"</span><span class="token punctuation">,</span>_name<span class="token operator">=</span><span class="token string">"q"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".baidu form"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"action"</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".this_s"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#kw-2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span>_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".Select-box-2 ul"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span><span class="token string">"48px"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="预览部署"><a href="#预览部署" class="headerlink" title="预览部署"></a>预览部署</h3><p>执行相关命令</p><p>预览</p><pre class="line-numbers language-none"><code class="language-none">hexo cl&amp;&amp;hexo g&amp;&amp;hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>部署</p><pre class="line-numbers language-none"><code class="language-none">hexo cl&amp;&amp;hexo g&amp;&amp;hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>全部步骤摘抄自大佬：闲花手札</p><p>页面：<a href="https://cloud.tencent.com/developer/article/1866822">Hexo-导航页-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建立博客过程中遇到的问题</title>
      <link href="/2023/12/22/jian-li-bo-ke-guo-cheng-zhong-yu-dao-de-wen-ti/"/>
      <url>/2023/12/22/jian-li-bo-ke-guo-cheng-zhong-yu-dao-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="建立博客网站时遇到的故障与如何排除掉的方式"><a href="#建立博客网站时遇到的故障与如何排除掉的方式" class="headerlink" title="建立博客网站时遇到的故障与如何排除掉的方式"></a>建立博客网站时遇到的故障与如何排除掉的方式</h1><p>本博客参考了两位up主的创建过程，其中遇到不少阻碍，解决过程有些烦人，故将中途遇到的故障进行记录，防止日后继续出现类似问题。</p><p>本博客搭建参考：<a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#!">博客搭建+美化（巨细版本） | 兴平 (crazyyuchi.github.io)</a></p><p>本博客搭建参考：【[教程]Hexo &amp; Github搭建自己的专属博客】 <a href="https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&amp;vd_source=5cd149d1723aac0eeb1b0c9b1ca86059">https://www.bilibili.com/video/BV1Eg41157tL/?share_source=copy_web&amp;vd_source=5cd149d1723aac0eeb1b0c9b1ca86059</a></p><h2 id="故障问题："><a href="#故障问题：" class="headerlink" title="故障问题："></a>故障问题：</h2><h5 id="1-文件同步失败，无反馈"><a href="#1-文件同步失败，无反馈" class="headerlink" title="1.文件同步失败，无反馈"></a>1.文件同步失败，无反馈</h5><p>跟随博客教程，安装软件过程无误，但后续无法与github网站进行上传同步，提示一直卡在_config文件上，经测试；</p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222091004345.png" alt="image-20231222091004345"></p><p>是按照教程操作过程之中，忽略了上传路径的排版，缺少了前面的空格，导致失败，调整格式后正常。</p><p>解决问题参考方案：<a href="https://blog.csdn.net/qq_43819439/article/details/118309688">使用hexo/git搭建博客时注意的几点_you should configure deployment settings in _confi-CSDN博客</a></p><h5 id="2-文件上传路径错误，main与master的区分"><a href="#2-文件上传路径错误，main与master的区分" class="headerlink" title="2.文件上传路径错误，main与master的区分"></a>2.文件上传路径错误，main与master的区分</h5><p>上传文件成功之后，访问对应的链接页面仍旧是测试页面，并非上传博客页面，重新排查安装问题与_config文件配置，皆无异常；</p><p>后经观察，上传过程中显示正常，故访问github个人仓库进行查验，最后发现是分支main与分支master的问题；</p><p>创建github测试之时，勾选主分支为main，核对发现教程中设置分支为master分支。</p><p>百度查验，进行更替主分支测试：</p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222091446007.png" alt="image-20231222091446007"></p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222091513382.png" alt="image-20231222091513382"></p><p>已调整后，测试仍旧是之前测试页面，后发现，需要在pages设置上，将域名对应的分支继续进行更替</p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222091648629.png" alt="image-20231222091648629"></p><p>操作完毕，一切回归正常，域名页面可以正常访问上传博客页面，故障排除。</p><p>解决问题参考方案：<a href="https://zhuanlan.zhihu.com/p/339370999?utm_id=0">Github仓库master分支到main分支迁移指南 - 知乎 (zhihu.com)</a></p><h5 id="3-代码高亮插件与默认设置冲突"><a href="#3-代码高亮插件与默认设置冲突" class="headerlink" title="3.代码高亮插件与默认设置冲突"></a>3.代码高亮插件与默认设置冲突</h5><p>代码高亮更替过程之中，产生的故障（处理时长较久，反思应该是基础不扎实导致，无意义浪费了许多时间去排查不相关的地带）</p><p>根据错误提示，故障发生在blog设置_config.yml文件之中，有关于默认高亮设置代码与更替的高亮代码插件之间的冲突。</p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222093952543.png" alt="image-20231222093952543"></p><p>原默认配置全部都在开启中，根据测试反馈结果，冲突在这几行代码之中，参考博客搭建教程之中给出的解决方法并未找到对应的代码行列；</p><p>后经过翻阅资料后，发现7.0版本之后与之前的代码出现差异化，参考文档给出的解决方法是旧版的，即7.0之前；</p><p>解决思路——对比测试</p><p>参考资料：<a href="https://hexo.io/zh-cn/docs/syntax-highlight.html#Highlight-js">代码高亮 | Hexo</a></p><p><img src="/../assets/blog_res/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.assets/image-20231222150641079.png" alt="image-20231222150641079"></p><p>经过不断测试关闭开启的选项，后确认成功。</p><h5 id="4-插件问题"><a href="#4-插件问题" class="headerlink" title="4.插件问题"></a>4.插件问题</h5><p>参考资料：<a href="https://cloud.tencent.com/developer/article/1952241">6.hexo插件篇（必看）-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test2</title>
      <link href="/2023/12/21/test2/"/>
      <url>/2023/12/21/test2/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="1-This-is-a-blog-Test"><a href="#1-This-is-a-blog-Test" class="headerlink" title="1. This is a blog Test"></a>1. This is a blog Test</h3><ul><li>First</li><li>Second</li></ul><hr><h3 id="2-Show-Text"><a href="#2-Show-Text" class="headerlink" title="2. Show Text"></a>2. Show Text</h3><ul><li><strong>这是加粗</strong></li></ul><blockquote><p><em>这是斜体</em></p></blockquote><p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 雪花特效 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://libs.baidu.com/jquery/1.8.3/jquery.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://libs.baidu.com/jquery/1.8.3/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/snow.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> blog1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/12/21/hello-world/"/>
      <url>/2023/12/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new "My New Post"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
